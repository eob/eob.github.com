[








































































































































  
    
    {
      "title": "Cloudstitch acquired by Instabase",
      "permalink": "http://0.0.0.0:4321/2018/02/cloudstitch-acquired-by-instabase",
      "link": "http://0.0.0.0:4321/2018/02/cloudstitch-acquired-by-instabase",
      "date": "2018-02-14T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*OgFQs29EzOuNwR3gbO9x2g.png\" alt=\"\" /></p>\n\n<p>Dear friends,</p>\n\n<p>I am excited to share that Cloudstitch has been acquired by\n<a href=\"http://www.instabase.com/\">Instabase</a>. We are beyond thrilled to be joining an\namazing group of people who share our dedication to rethinking how modern\ndevelopment platforms are built.</p>\n\n<p>Cloudstitch started with an audacious goal: replace server-side web\ninfrastructure with consumer-friendly applications. With a small team and a lot\nof hard work, it’s amazing to see how far we’ve come. Today, tens of thousands\nof people use Cloudstitch to manage websites and mobile apps entirely from\nordinary word docs, spreadsheets, and design files.</p>\n\n<p>As part of Instabase, we look forward to pushing the state-of-the-art at a scope\nand scale larger than we’d ever dreamed.</p>\n\n<p>Our hearts and our gratitude go out to everyone who has supported us along the\nway.</p>\n\n<p>Ted</p>\n\n<h4 id=\"postscript-what-this-means-for-your-cloudstitch-projects\">Postscript: What this means for your Cloudstitch projects</h4>\n\n<p>Cloudstitch will remain in operation and your projects will remain accessible,\nbut we have ceased development of new features and have scaled back our support\noperation in order to focus on new initiatives at Instabase.</p>\n\n<p>If you have any questions, please feel free to reach out at\nhello@cloudstitch.com</p>\n\n<ul>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/startup?source=post\">Startup</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/web-development?source=post\">Web\nDevelopment</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/front-end-development?source=post\">Front End\nDevelopment</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/web-framework?source=post\">Web Framework</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/acquisition?source=post\">Acquisition</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://blog.cloudstitch.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"cloudstitch\"><a href=\"https://blog.cloudstitch.com/?source=footer_card\">Cloudstitch</a></h3>\n\n<p>Cloudstitch powers websites using your office suite.</p>",
      "excerpt": "",
      "languages": null,
      "categories": [],
      "tags": ["Cloudstitch","Business"]
    }
    
  

  
    ,
    {
      "title": "A text alignment algorithm inspired by ..soap operas?",
      "permalink": "http://0.0.0.0:4321/2018/02/text-alignment-inspired-by-soap-operas",
      "link": "http://0.0.0.0:4321/2018/02/text-alignment-inspired-by-soap-operas",
      "date": "2018-02-12T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Most problems in computer science can be reduced in some part to one of a few\nhundred or so classic problems. There are the <a href=\"https://en.wikipedia.org/wiki/Dining_philosophers_problem\">Dining\nPhilosophers</a>, the\n<a href=\"https://en.wikipedia.org/wiki/Chinese_restaurant_process\">Chinese Restaurant</a>,\nthe <a href=\"https://en.wikipedia.org/wiki/Travelling_salesman_problem\">Traveling\nSalesman</a>, the\n<a href=\"https://en.wikipedia.org/wiki/Byzantine_fault_tolerance#Byzantine_Generals'_Problem\">Byzantine\nGenerals</a>,\nand so on. Last week I ran into a fun one I hadn’t seen in a while — the <a href=\"https://en.wikipedia.org/wiki/Stable_marriage_problem\">Stable\nMarriage Problem</a> — so I\nthought I’d write a bit about it.</p>\n\n<p>The problem that needed solving was re-ordering the pages of out-of-order legal\ncontracts so that we can compare their content to the original. The solution\nturns out to be very simple and based on the rough metaphor of a cast of singles\ntrying to find love.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*ilOHCfo-3dLpqWOrS84J2A.png\" alt=\"\" />\n<span class=\"figcaption_hack\">Before you can analyze the “before” and “after” version of a document, you have\nto make sure you have the pages aligned correctly. But in the real world of fax\nmachines and photocopiers pages often go missing or get mis-ordered.</span></p>\n\n<h3 id=\"problem-setup-imagine-youre-a-busy-lawyer\">Problem setup: Imagine you’re a busy lawyer..</h3>\n\n<p>You send people 40-page contracts all day. Usually they send these contracts\nback signed and unchanged, but sometimes somebody crosses out a line or adds a\nmargin note before signing. The contract they signed is now different than the\none you sent them! To detect this, you’re stuck re-reading 100% of incoming\ncontracts to see which have changes and which don’t.</p>\n\n<p>You like your billing rate, but this is not how you want to spend your time. So\nyou write a computer program to automatically analyze pairs of pages,\n<code class=\"highlighter-rouge\">&lt;outgoing_page, incoming_page&gt;</code>, to detect any signatures and pen marks that\nhave been made on the incoming page.</p>\n\n<p>You run the program. It works wonderfully! But it also fails catastrophically\nsometimes, producing bizarre results. Inspecting these errors, you realize that\nsome of these contracts haven’t just been marked up with a pen, they’ve also\nbeen shuffled around and had pages lost. The errors result from your algorithm\ntrying to compare <code class=\"highlighter-rouge\">outgoing_page 2</code> with some badly matched <code class=\"highlighter-rouge\">incoming_page 4</code>.</p>\n\n<h3 id=\"ways-a-document-can-be-out-of-order\">Ways a document can be “out of order”</h3>\n\n<p>Let’s frame our problem as being about two documents we’d like to compare:</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">A</code>, the outgoing contract, and</li>\n  <li><code class=\"highlighter-rouge\">B</code>, the incoming contract</li>\n</ul>\n\n<p>Document <code class=\"highlighter-rouge\">A</code> has pages <code class=\"highlighter-rouge\">a_1, a_2, ... a_n</code> and document <code class=\"highlighter-rouge\">B</code> has pages <code class=\"highlighter-rouge\">b_1, b_2,\n... b_m</code>. We know <code class=\"highlighter-rouge\">A</code> and <code class=\"highlighter-rouge\">B</code> are the same documents, but <code class=\"highlighter-rouge\">b_1 .. b_m</code> deviates\nfrom <code class=\"highlighter-rouge\">A</code> in a few inconvenient ways:</p>\n\n<ul>\n  <li>Pages have been removed</li>\n  <li>Pages have been added</li>\n  <li>Pages have been reordered</li>\n</ul>\n\n<p>What we’d like to find is a <strong>match</strong> between <code class=\"highlighter-rouge\">A</code> and <code class=\"highlighter-rouge\">B</code>. A match is a set of\npairings between the elements of <code class=\"highlighter-rouge\">A</code> and <code class=\"highlighter-rouge\">B</code>, like this: <code class=\"highlighter-rouge\">[ &lt;a_1,b_1&gt;, &lt;a_2,b_2&gt;\n… &lt;a_n,b_n&gt; ]</code> . Specifically, we want the match which results in <code class=\"highlighter-rouge\">&lt;a_i, b_j&gt;</code>\npairs that are most similar to each other.</p>\n\n<p>That’s simple to say but complex to do: what constitutes the set of most similar\nmatches? Should we optimize for the average match strength (which skews for\npassion)? Median match strength (which skews for settling)? Should we always\nmake perfect matches when possible (might leave some elements woefully\nundermatched)?</p>\n\n<h3 id=\"stable-marriage-matching\">Stable Marriage Matching</h3>\n\n<p>A <a href=\"https://en.wikipedia.org/wiki/Stable_marriage_problem\">stable marriage match</a>\nis a great matching framework for finding matches between populations of\ndifferent size. (Note: If you follow that hyperlink, Wikipedia will tell you\nstable marriage matching is for populations of equal size. Just ignore that.)</p>\n\n<p>It optimizes for the following global property, which we call a “stable match”:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>No element in a match will have a better viable option.\n</code></pre></div></div>\n\n<p>Here’s that sentence expressed in terms of a test you can apply to some match\n<strong>(a, b)</strong> to see if it’s stable:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>for all mates (a,b):\n  if a would rather be with c than b:\n    if c would rather be with a than c's current match:\n      (a,b) is unstable! (a,c) deserve each other!\n  same rule for b\n</code></pre></div></div>\n\n<p>The counterintuitive observation here is that match <strong>(a, b)</strong> is considered\nstable <em>even if <strong>*a</strong></em> and <strong><em>b</em></strong> both prefer other mates…as long as those\nsecret crushes don’t crush back*. Elements **a **and **b **are each other’s best\nviable compromise when factoring in everyone else’s preferences. This strategy\nalso results in the guarantee that if there does exist some mutually in-love\nRomeo and Juliet, they will be matched together.</p>\n\n<p><span class=\"figcaption_hack\"><strong>(a, b)</strong> form a stable match even if <strong>a **prefers **c</strong> as long as <strong>c\n**doesn’t also prefer **a</strong> over his current match <strong>d</strong>.</span></p>\n\n<p>The other great part of Stable Marriage Matching is that the solution is simple\nand well understood — just look up the Gale–Shapley algorithm. You can implement\nit in an hour and be on your way.</p>\n\n<p>OK. So let’s assume that we now have some function **match **that produces the\nfollowing output:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>match(A, B) -&gt; { matches: [&lt;a,b&gt;], additions: [b], deletions: [a] }\n</code></pre></div></div>\n\n<p>The match function takes an outgoing document <code class=\"highlighter-rouge\">A</code> and an incoming document <code class=\"highlighter-rouge\">B</code>\nand produces a set of page-to-page matches, along with a list of added and\ndeleted pages. If <code class=\"highlighter-rouge\">|B| &gt; |A|</code> we’ll call any unmatched <code class=\"highlighter-rouge\">b</code> added, and if <code class=\"highlighter-rouge\">|A| &gt;\n|B|</code> we’ll call any unmatched <code class=\"highlighter-rouge\">a</code> deleted. This isn’t addition/deletion strategy\nisn’t perfect — there are better strategies involving match strength — but it\nwill do fine for many cases.</p>\n\n<p>The only thing left is to define some measure of attraction that helps us decide\nwhich pages <code class=\"highlighter-rouge\">a</code> get married to which pages <code class=\"highlighter-rouge\">b</code> .</p>\n\n<h3 id=\"chunky-jaccard-as-a-measure-of-document-attraction\">“Chunky Jaccard” as a measure of document attraction</h3>\n\n<p>Attraction really means similarity here. And just like matching, document\nsimilarity is simple in concept but more nuanced to actually define. Are two\nthings similar if they have the same letters? The same words? The same words in\nthe same order? The same words in the same order and font styling?</p>\n\n<p>In general, you can define a spectrum of text similarity measures that go from\ncoarse (Jaccard) to strict (labeled “Extremist” below). In the below figure, <code class=\"highlighter-rouge\">A</code>\nand <code class=\"highlighter-rouge\">B</code> are the sets of tokens in two pages, and <code class=\"highlighter-rouge\">a_i</code> and <code class=\"highlighter-rouge\">b_i</code> are the i^th\ntokens of those pages.</p>\n\n<p><span class=\"figcaption_hack\">A spectrum of coarse to strict similarity measures for documents. We’re using\ndifferent notation than the rest of the post here: capital letters are pages and\nlowercase letters are tokens.</span></p>\n\n<ul>\n  <li><a href=\"https://en.wikipedia.org/wiki/Jaccard_index\">Jaccard Similarity</a> is a coarse\nmeasure of document similarity. It looks at two documents as bags of words and\nreturns the measure of how many words were the same divided by how many existed\nin total. If the documents are perfectly equal, <code class=\"highlighter-rouge\">J(A,B) = 1.0</code>, and if they are\nperfectly disjoint, <code class=\"highlighter-rouge\">J(A,B) = 0.0</code></li>\n  <li>What I labeled as **Extremist **would be to take the opposite approach from “bag\nof words” and compare the i^th word of each document to each other. On the one\nhand, I understand the extremism — after all, documents aren’t bags of words.\nWord order matters! But on the other hand, this is extremely brittle in the\npresence of errors. What if the OCR of a document inserted an extra word? That\nsingle, off-by-one index shift would cause the similarity score to plummet by\n0.5 on average.</li>\n  <li><strong>“Chunky” Jaccard Similarity</strong> represents a balance between the bag-of-words\nmodel and the extremist variant. We take some <code class=\"highlighter-rouge\">chunk_size</code>, which is expressed\nas a percentage, and then carve up the document into N segments, each one\n<code class=\"highlighter-rouge\">chunk_size</code> percent of the document. When <code class=\"highlighter-rouge\">chunk_size</code> approaches zero, Chunky\nJaccard is the same as the extremist measure. When <code class=\"highlighter-rouge\">chunk_size = 1</code>, Chunky\nJaccard is the same as the bag of words version.</li>\n</ul>\n\n<p>So that’s really it. Pick one of the two Jaccard variants, implement it, and use\nthat as your measure of attraction in the Gale-Shapley algorithm.</p>\n\n<h3 id=\"matching-made-simple\">Matching made simple</h3>\n\n<p>Once we implemented the above, our document analysis errors disappeared\ncompletely. On top of that, we had a more complete analysis to show our users,\nincluding pages added and removed in addition to page-level modifications.</p>\n\n<p>It turns out that in our dataset, the document shuffling was almost entirely\ncaused by Page 1 of the initial document going missing. The cover letter that\naccompanied the initial contract had been omitted in the signed response.</p>\n\n<h3 id=\"strong-visuals-make-things-easy-to-remember\">Strong visuals make things easy to remember</h3>\n\n<p>This is one of those problems where if you had to come up with a solution\nyourself, it would take a while to devise an approach that was straightforward\nto implement and also lacked any nasty edge cases.</p>\n\n<p>I think the colorful metaphors for classic algorithms are so useful because they\nmake it easy to remember when you can pull a standard solution out of your bag\nof tricks. In general, humans are terrible at remembering numbers but fantastic\nat remembering stories.</p>\n\n<p>So don’t dismiss the stories behind these algorithms as metaphor abuse. Ham them\nup! Visualize ridiculous re-enactments of them in your mind so that they’ll be\neasier to recall when you need them most.</p>\n\n<h4 id=\"ps-come-solve-interesting-problems-at-instabase\">PS: Come solve interesting problems at Instabase</h4>\n\n<p>If solving high-impact problems with real world data sounds like a good way to\nspend your day, <a href=\"mailto:jobs@instabase.com\">reach out and say hello</a>.\n<a href=\"http://www.instabase.com/\">Instabase</a> is hiring strong CS generalists, as well\nas specialists in systems, machine learning, NLP, and web front-end.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/data-science?source=post\">Data Science</a></li>\n  <li><a href=\"https://medium.com/tag/machine-learning?source=post\">Machine Learning</a></li>\n  <li><a href=\"https://medium.com/tag/deep-learning?source=post\">Deep Learning</a></li>\n  <li><a href=\"https://medium.com/tag/nlp?source=post\">NLP</a></li>\n  <li><a href=\"https://medium.com/tag/big-data?source=post\">Big Data</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "Most problems in computer science can be reduced in some part to one of a few\nhundred or so classic problems. There are the Dining\nPhilosophers, the\nChinese Restaurant,\nthe Traveling\nSalesman, the\nByzantine\nGenerals,\nand so on. Last week I ran into a fun one I hadn’t seen in a while — the Stable\nMarriage Problem — so I\nthought I’d write a bit about it.",
      "languages": null,
      "categories": [],
      "tags": ["Machine Learning","Data Science","Natural Language Processing"]
    }
    
  

  
    ,
    {
      "title": "How to outperform perfectionism with ensembles and a \"Good Enough\" mindset",
      "permalink": "http://0.0.0.0:4321/2018/01/outperform-perfectionism-with-ensembles",
      "link": "http://0.0.0.0:4321/2018/01/outperform-perfectionism-with-ensembles",
      "date": "2018-01-29T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Machines outperform humans at a million small tasks, but they lack any\nunderstanding of how those tasks fit together. That fractured competence can\npose a big problem for the design of large data processing pipelines.</p>\n\n<p>To get a computer to do anything well, you have to break your task into pieces\nand then refine each piece until you’re in danger of overcommitting yourself to\nsome set of assumptions.</p>\n\n<p>Consider how you might sketch a data pipeline that processes photos of legal\ndocuments:</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*ZpRvSdHzGeu6eoZhvDqK9g.png\" alt=\"\" />\n<span class=\"figcaption_hack\">Big picture diagram of a pipeline for document understanding. Assumptions you\ncommit to in the early stages of the pipeline stay with you forever… impacting\nhow well you do at the end of the pipeline.</span></p>\n\n<p>Component 1 might remove noise and background, Component 2 converts the image\ninto text, and Component 3 tries to understand the text. Each of these\ncomponents <em>itself</em> further decomposes into hundreds of small engineering\ndecisions.</p>\n\n<p>If I asked you to build this pipeline, it would seem reasonable to approach your\nconstruction literally: building one image processing stage, and one text\nextraction stage, and one text understanding stage. Your system would end up\nlooking just like the diagram.</p>\n\n<p>But consider how dangerously the assumptions you commit to interact if you do\nthat. Each small assumption made in Component 1 carries forward in its output to\nComponent 2, and then Component 3, forever limiting the upper bound on\nperformance downstream.</p>\n\n<h3 id=\"conjunction-dysfunction\">Conjunction dysfunction</h3>\n\n<p>At heart, the problem is that yield at each <strong>Step N</strong> is dependent upon the\nyield at <strong>Step N-1</strong> (and therefore transitively upon all steps before it).\nIt’s a data version of the “pipeline problem” universities face with respect to\nunderrepresented groups in certain fields of education.</p>\n\n<p>In a serial pipeline, outcomes in early steps compound their influence over all\nsteps that come after. You end up with what you might call <em>conjunction\ndysfunction</em>: a situation where the performance of your system as a whole\ndepends upon every component getting everything right.</p>\n\n<p>So if you implement your data pipeline just like the diagram above, its\nperformance is going to be heavily impacted by how long it is. The probability\nthat some piece of input is correctly processed is (avg_yield) ^\n(num_components):</p>\n\n<p><span class=\"figcaption_hack\">LaTeX’s seldom-used \\sad_equals operator. The cold hard math of solving for the\n80% case at each stage of a long data processing pipeline. At 80% average yield,\nit only takes the conjunction of 7 components to dip below 20% overall\nperformance!</span></p>\n\n<p>Faced with this, one strategy is to say:</p>\n\n<ul>\n  <li><em>“Well, I’ll plan on doing my best when implementing each component!”</em><br /> This\nis equivalent to improving avg_yield. But as the length of your pipeline adds\nup, you just can’t run away from harsh reality of multiplying probabilities.\nLet’s assume your pipeline has this conjunctive property and each component on\nthe pipeline performs with 80% accuracy. It only takes a conjunction of 7\ncomponents to render your pipeline’s accuracy only 20%!</li>\n</ul>\n\n<p>So instead you might say:</p>\n\n<ul>\n  <li><em>“Fine, I’ll limit the length of my pipeline. Simplify things.”</em>This is\nequivalent to decreasing the exponent, num_components. But simplification is\noften either too hard or too time intensive. It requires you to outsmart the\nproblem you’re dealing with. And the whole reason we’re in this mess is because\nwe’re trying to solve a hard problem.</li>\n</ul>\n\n<p>So here’s a different approach…</p>\n\n<h3 id=\"increasing-average-yield-with-ensembles-of-good-enough\">Increasing average yield with Ensembles of “Good Enough”</h3>\n\n<p>Here’s an alternative to spending your time creating the One Big Perfect Model:</p>\n\n<blockquote>\n  <p>Create multiple small models. Take a different approach with each. Aim for being\n“good enough”.</p>\n</blockquote>\n\n<p>It’s often orders of magnitude easier to score a B than an A. So relax, man! Aim\nto be a B student…. but **do it over and over again, with a different route each\ntime. **Then, create a **Picker **function that looks at the results of all\nthese “Good Enough” models and selects the right result.</p>\n\n<p>If you assume the <strong>Picker</strong> merely selects the right model (rather than merges\ntheir output), the performance of an Ensemble of Good Enough becomes:</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*Eq-shijnLHk216lA5Oc1kg.png\" alt=\"\" />\n<span class=\"figcaption_hack\">The probability your Ensemble of “Good Enough” is correct is the probability\nthat one of your Good Enough Models is correct times the probability that your\npicker selects the right answer.</span></p>\n\n<p>You can actually argue that the ensemble performance is better than this because\nyou implemented each model with a different strategy. They won’t all fail in the\nsame way, meaning they’ll correctly perform on different subsets of your data.\nSo if your <strong>Picker</strong> works well enough, the performance of the ensemble is more\nthan the performance of its best performing component.</p>\n\n<p>So here’s my hand-wavy claim about data pipelines: the moment some component\nbecomes “Good Enough”, your time <em>might be</em> better spent switching to the happy\nmath of an ensemble of Good Enough rather than optimizing every last piece into\nthe headwinds of conjunction disfunction.</p>\n\n<h3 id=\"real-world-example-detecting-and-decoding-qr-codes\">Real world example: detecting and decoding QR codes</h3>\n\n<p>Here’s a real world example of this approach from last week.</p>\n\n<p>Our team at <a href=\"http://www.instabase.com/\">Instabase</a> needed to validate an\nenormous collection of documents stamped with QR codes, but the image quality of\nthese documents was extremely variable.</p>\n\n<p>Scouring the literature, it became apparent that there are quite a few\nstrategies for locating a QR code in 3D space so you can transform it into a\nproper square image to pass to a QR decoding module. But we ran into a problem:\ngiven the variance in image quality we had, some of these approaches weren’t as\nuniversal as they claimed to be.</p>\n\n<p>Should we expand upon them? Add more heuristic tricks? Maybe more image cleanup\nin the pre-processing step?</p>\n\n<p>Enter the Ensemble of Good Enough. Here are just a few of the Good Enough\napproaches we pursued:</p>\n\n<p><span class=\"figcaption_hack\">Three strategies for locating the position of a QR code in an image (which may\nbe warped or skewed or otherwise distorted). Importantly, all three methods may\nyield many guesses. Sometimes hundreds.</span></p>\n\n<p>The beautiful thing about QR codes is that you know when you are correct because\nthe decoder fails to work if you aren’t.</p>\n\n<p>That means a QR ensemble’s <strong>Picker</strong> function is perfect. If any model is\ncorrect, it will pick it, rendering the performance of the ensemble a beautiful:</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*_q5dA81N9eWzo7GWaujrMg.png\" alt=\"\" /></p>\n\n<p>Using that model of performance as our guiding metric, we were able to have a\nfun time pursuing a variety of approaches rather than fighting the diminishing\nreturns of trying to make a single approach work across the board. A win for\nperformance and morale.</p>\n\n<h3 id=\"takeaway-approach-life-probabilistically\">Takeaway: Approach life probabilistically</h3>\n\n<p>These kinds of things are always situation dependent. The fact that a QR\nensemble’s <strong>Picker</strong> function is perfect makes this a bit of an unfair anecdote\nin favor of this approach.</p>\n\n<p>But I think there is a general takeaway that extends beyond even ensembles to\nprogramming in general:</p>\n\n<ul>\n  <li>Serial pipelines become brittle with length, as errors cascade from earlier\nsteps down to later ones.</li>\n  <li>Most of the code we write, when you think about it, is really a long serial\npipeline. The state at each step depends upon the state emitted by the prior\nstep.</li>\n  <li>Any time you find yourself fighting complexity. Ask yourself if your standards\nare too high. Instead of doing perfectly one time, why not aim for Good Enough\nmultiples times? Roll the dice a bit. Then you’ve just got to figure out a way\nto merge the results.</li>\n</ul>\n\n<h4 id=\"come-think-about-these-things-at-instabase\">Come think about these things at Instabase.</h4>\n\n<p>If this is the kind of thinking you like to wrestle with, <a href=\"mailto:jobs@instabase.com\">reach out and say\nhello</a>. We’re building an amazing team at\n<a href=\"http://www.instabase.com/\">Instabase</a> and looking to grow in everything from\nsystems to machine learning to web development.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/machine-learning?source=post\">Machine Learning</a></li>\n  <li><a href=\"https://medium.com/tag/opencv?source=post\">Opencv</a></li>\n  <li><a href=\"https://medium.com/tag/image-processing?source=post\">Image Processing</a></li>\n  <li><a href=\"https://medium.com/tag/data-science?source=post\">Data Science</a></li>\n  <li><a href=\"https://medium.com/tag/ocr?source=post\">Ocr</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "Machines outperform humans at a million small tasks, but they lack any\nunderstanding of how those tasks fit together. That fractured competence can\npose a big problem for the design of large data processing pipelines.",
      "languages": null,
      "categories": [],
      "tags": ["Machine Learning","Data Science","Image Processing"]
    }
    
  

  
    ,
    {
      "title": "How to approach structured data extraction from images",
      "permalink": "http://0.0.0.0:4321/2018/01/structured-extraction-from-images",
      "link": "http://0.0.0.0:4321/2018/01/structured-extraction-from-images",
      "date": "2018-01-17T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I’ve been doing a lot of image processing lately, with the goal of extracting\nthe structured data visible inside an image. While I’ve still got beginner-brain\nand a mountain of OpenCV tutorials fresh in my mind, I thought I’d write a bit\nabout <em>how to successfully approach image extraction problems.</em></p>\n\n<p>Here’s one scenario I’m working with: many online services ask users to prove\ntheir identity with photos of ID cards, paystubs, bank statements, and the like.\nRather than running a standard OCR on these images, it would be nice to\n<em>directly</em> recover the structured data they represent.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*mGCQgGrgwkpUQAgYReq9_A.png\" alt=\"\" /></p>\n\n<p>This post records the first two “ah hah!” moment’s I had while diving into that\nproblem. Both are about how to organize your thinking, rather than any specific\nOpenCV trick:</p>\n\n<ol>\n  <li>How to decompose an image extraction problem into smaller problems</li>\n  <li>How to decompose an image extraction problem into “side” problems</li>\n</ol>\n\n<h3 id=\"how-to-decompose-an-image-extraction-problem-into-smaller-problems\">How to decompose an image extraction problem into smaller problems</h3>\n\n<p>When I first started, this kind of task felt insurmountably large because I had\nno idea how to make incremental progress. Here’s the recipe I’ve found for\nbreaking down a large image task into smaller pieces:</p>\n\n<p>Force yourself to write down the sentence</p>\n\n<blockquote>\n  <p>“I’ve got X… but if only I had Y, I could easily produce Z”</p>\n</blockquote>\n\n<p>The transformation <strong>Y</strong>→<strong>Z</strong> should be something so simple that you already\nsee clearly how to do it. In fact, your next step should be to implement and\ntest it right away. Having solved the easy problem <strong>Y</strong>→<strong>Z</strong>, you’ve now\nsimplified the hard problem into only <strong>X→Y</strong>.</p>\n\n<p>Here are my initial <strong>X</strong>, <strong>Y</strong>, and **Z **for the social security card\nexample:</p>\n\n<ul>\n  <li>**I’ve got **a random photo containing an SSN card…</li>\n  <li><em>*but if only I had **a *rectified</em>, <em>registered [</em>] *social security card\nimage…</li>\n  <li><strong>I could easily</strong> use the fixed geometry of the card to simply crop and OCR\nexactly the the <strong>SSN</strong> and <strong>Name</strong> fields.</li>\n</ul>\n\n<p><em>[</em>] Note: <em><a href=\"https://en.wikipedia.org/wiki/Image_rectification\">Rectified</a></em>\nmeans ‘projected onto a reference plane’ and [2]\n<em><a href=\"https://en.wikipedia.org/wiki/Image_registration\">registered</a></em> means ‘aligned\nto a known coordinate system.’*</p>\n\n<p>Having solved <strong>Y→Z</strong>, now I’m left with only the problem “how do I take my\ninput image <strong>X **and produce a rectified, registered image **Y</strong>?”</p>\n\n<ul>\n  <li>If I know how to solve that directly, great!</li>\n  <li>If I don’t, I can just repeat this decomposition over again, dividing the\nproblem <strong>X→Y **into some new problem **X→X2→Y</strong>.</li>\n</ul>\n\n<p>Read on for a variant of this decomposition that will help us do exactly that\nsecond part.</p>\n\n<h3 id=\"how-to-decompose-an-image-extraction-problem-into-side-problems\">How to decompose an image extraction problem into “side” problems</h3>\n\n<p>This is a point that feels obvious in retrospect, but it took me a while to\nrealize it:</p>\n\n<blockquote>\n  <p>Sometimes Y is just extra information. It’s not an intermediate version of your\nimage.</p>\n</blockquote>\n\n<p>When I first started, I had this idea that image processing was like 35mm film\nprocessing: you take a photo and apply various baths and chemicals, refining it\nuntil you see the picture you want. Except in our case, the baths and chemicals\nare kernels and matrix operations.</p>\n\n<p>This mental model is all wrong.</p>\n\n<p>The successful model is to remember that you can go on *side adventures with\ncopies of the image. *These side adventures might destroy the data in the image,\nbut they will produce valuable data that you can then use when returning to your\noriginal image.</p>\n\n<p>In other words:</p>\n\n<ul>\n  <li><strong>Clone(X)→Y</strong>Go on a side adventure with a clone of X to compute statistics Y</li>\n  <li>(<strong>X, Y)→Z</strong><br /> Use the combination of <strong>X **and **Y</strong> to compute <strong>Z</strong></li>\n</ul>\n\n<p>Let’s see how that looks in our social security cards. Remember, our job is to\nisolate, rectify, and register the social security card.</p>\n\n<p>Here’s one simple approach: we might grey the image, blur it, edge-detect it,\ncontour detect it, and then retain only the contour that represents the largest\n4-gon.</p>\n\n<p><span class=\"figcaption_hack\">Sketch of the side mission to find some data <strong>Y</strong> that will be useful in taking\n<strong>X→Z</strong>.</span></p>\n\n<p>We now throw away all the data on that side adventure and just keep the\ncoordinates of the 4-gon, which we’ll call <strong>Y</strong>.</p>\n\n<p>Returning back to the original image, we can use that polygon to extract the\nregion of the image that we think is our card, and then apply an off-the-shelf\ntransform to rectify it. <strong>(X, Y)→Z</strong>.</p>\n\n<p><span class=\"figcaption_hack\">If we have the (correct) coordinates of the 4-gon that represents the card, we\ncan easily extract that region of the image and rectify it to produce the shape.</span></p>\n\n<h3 id=\"rinse-repeat-youre-done\">Rinse, repeat, you’re done!</h3>\n\n<p>I’ve obviously skipped some steps above: I’m not registering the rectified\nsocial security card against a known template, so the coordinates may be a bit\noff (in real life, the rectified card won’t be as perfectly isolated as the\ndiagram above).</p>\n\n<p>But that’s OK, because to add any extra steps, you can just keep applying the\ntwo problem decomposition patterns above.</p>\n\n<p>And when you’re ready to ship code, these patterns provide natural groupings\nthat you can use to divide code into modules that will make sense to a future\nreader. I don’t know about you, but long, linear OpenCV functions look like\ngibberish to me. Much easier if you can help someone visualize what you were\nthinking when you did what you did:</p>\n\n<h3 id=\"toward-extraction-with-deep-nets\">Toward extraction with deep nets</h3>\n\n<p>This whole writeup is based on experiences with what you might call “old school”\nimage processing, in which the human comes up with an entirely heuristic model\nto achieve their objective.</p>\n\n<p>I’m curious to find out how it holds up as a way to approach image extraction\nproblems using deep learning, which tends to favor a more data-heavy /\nheuristics-light approach.</p>\n\n<p>If you have opinions.. let me know!</p>\n\n<h4 id=\"note-were-hiring\">Note: we’re hiring!</h4>\n\n<p>If you like solving puzzles like this and want to make a big impact in industry,\n<a href=\"mailto:jobs@instabase.com\">reach out and say hello</a>. We’re building an amazing\nteam at Instabase and looking to grow.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/opencv?source=post\">Opencv</a></li>\n  <li><a href=\"https://medium.com/tag/image-processing?source=post\">Image Processing</a></li>\n  <li><a href=\"https://medium.com/tag/machine-learning?source=post\">Machine Learning</a></li>\n  <li><a href=\"https://medium.com/tag/python?source=post\">Python</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "I’ve been doing a lot of image processing lately, with the goal of extracting\nthe structured data visible inside an image. While I’ve still got beginner-brain\nand a mountain of OpenCV tutorials fresh in my mind, I thought I’d write a bit\nabout how to successfully approach image extraction problems.",
      "languages": null,
      "categories": [],
      "tags": ["Machine Learning","Data Science","Image Processing"]
    }
    
  

  
    ,
    {
      "title": "I turned my Baby Dash Button Hack into a Pager for Toddlers",
      "permalink": "http://0.0.0.0:4321/2017/02/i-turned-my-dash-button-hack-into-a-toddler-pager",
      "link": "http://0.0.0.0:4321/2017/02/i-turned-my-dash-button-hack-into-a-toddler-pager",
      "date": "2017-02-16T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"https://cdn-images-1.medium.com/max/2000/1*XNfZAq232bjEP4mphJ_pkg.png\" alt=\"\" /></p>\n\n<h2 id=\"and-ill-make-you-one-too\">(And I’ll make you one, too)</h2>\n\n<p>When I blogged about <a href=\"https://medium.com/@edwardbenson/how-i-hacked-amazon-s-5-wifi-button-to-track-baby-data-794214b0bdd8#.b64ejr89b\">hacking Amazon’s Dash\nbuttons</a>,\nI never expected it to go viral. It’s a year later and I still get emails all\nthe time from folks who have rigged <a href=\"https://www.amazon.com/Dash-Buttons/b?ie=UTF8&amp;node=10667898011\">Dash\nbuttons</a> to do\nall sorts of cool things. (My favorite is a tie between a “Request Uber”\ndoorbell and a curse word counter.)</p>\n\n<p>Now that my son, Everest, is a toddler, I’m getting so much sleep I don’t know\nwhat to do with myself. So time for another hack.</p>\n\n<p>While I’m at work, Everest has been picking up my wife’s phone and shouting\n<em>“Siri, call my husband</em>” at it. That’s ridiculously cute, but Siri always\nresponds with “I’m sorry, I didn’t understand that.”</p>\n\n<p>That got me thinking — why not use the old Dash button to make him a pager? He\ncan push it any time he wants me to call him with a knock knock joke, and it\nwill send me a text message</p>\n\n<p>.…behold the <strong>Toddler Pager</strong>.</p>\n\n<p><span class=\"figcaption_hack\">I laugh way too hard at this video.</span></p>\n\n<h3 id=\"the-real-hack-is-usability\">The real “Hack” is Usability</h3>\n\n<p>Here’s the amazing thing about the state of technology: making the button send a\ntext message only requires adding three lines of code to the <a href=\"https://medium.com/@edwardbenson/how-i-hacked-amazon-s-5-wifi-button-to-track-baby-data-794214b0bdd8#.b64ejr89b\">original\nproject</a>.</p>\n\n<p>If you’re a programmer, that’s amazing usability.</p>\n\n<p>But the hundreds of letters I’ve gotten from the original blog post taught me\nthat for every programmer interested, there are many more non-programmers who\nwant to get in on the action but are held back by the hurdle of programming.</p>\n\n<p>So let’s end that right now.</p>\n\n<h3 id=\"everyone-gets-a-button\">Everyone gets a button!</h3>\n\n<p>Today <a href=\"https://www.cloudstitch.com/\">Cloudstitch</a> (my startup) is launching a\nservice called <a href=\"http://www.buttonjoy.com/\">Buttonjoy</a>. We want to erase the\ntechnical hurdles to experimenting with these buttons.</p>\n\n<p><strong>Just go to **<a href=\"http://buttonjoy.com/\">buttonjoy.com</a></strong>, tell us what you want\nyour button to do, and we’ll mail you a pre-configured Dash button ready to\nuse.**</p>\n\n<p>We’re selling two flavors of buttons.</p>\n\n<p>The first is a DIY button — it can call a phone and play a preset message, text\na phone, send emails. Because Buttonjoy is powered by Cloudstitch, we also log\nevery button push to a spreadsheet, so you can use it to track data and power\nvisualizations.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*Ojvp5EQvheCBHso7VWX8lQ.png\" alt=\"\" /></p>\n\n<p>The second is for charity. Last week a man named <a href=\"https://techcrunch.com/2017/02/08/this-amazon-dash-button-donates-5-to-the-aclu-whenever-trump-tries-your-patience/\">Nathan\nPryor</a>\nhacked a button to donate to the ACLU when he pushed it. *Mad genius! *we\nthought, and with a major tip of the hat to Nathan, we’re launching charity\nbuttons that let you do that too.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*cjmmc2iZDJwJgOZWgfI7LA.png\" alt=\"\" /></p>\n\n<h3 id=\"go-forth-and-make-awesome-things\">Go forth and make awesome things</h3>\n\n<p>Obviously your toddler needs a Dad Joke Pager. Your boss needs a secret “Rescue\nme from this Meeting” button. And you need a charity button to keep next to your\nTV remote.</p>\n\n<p>But we also think there are a zillion other uses for these buttons:</p>\n\n<ul>\n  <li><strong>Resupply companies</strong> can give them clients to press when their water coolers,\ncoffee stock, or vending machines run empty.</li>\n  <li>**Event planners **can hang them outside a building as a “SMS doorbell” so they\nknow when to come down and let people in after hours.</li>\n  <li>**AirBnB hosts **can stick them by the door as a “checkout doorbell” that\nnotifies them when it’s safe to head over and start cleaning</li>\n</ul>\n\n<p>Or, hey, if you want to wire one up to your coworkers cell phone number so you\ncan prank call him with fake robo-surveys, I say go for it.</p>\n\n<p>I think new technologies don’t really reveal their potential until we can play\nwith them. And in order to play with something, it’s got to be simple.</p>\n\n<ul>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/amazon?source=post\">Amazon</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/technology?source=post\">Technology</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/dashbutton?source=post\">Dashbutton</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/hacking?source=post\">Hacking</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/makers?source=post\">Makers</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://blog.cloudstitch.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"cloudstitch\"><a href=\"https://blog.cloudstitch.com/?source=footer_card\">Cloudstitch</a></h3>\n\n<p>Cloudstitch powers websites using your office suite.</p>",
      "excerpt": "",
      "languages": null,
      "categories": [],
      "tags": ["Buttonjoy","Dash Button","Hacks"]
    }
    
  

  
    ,
    {
      "title": "Fill your Sketch Designs with Data from Spreadsheets",
      "permalink": "http://0.0.0.0:4321/2017/02/fill-sketch-designs-with-spreadsheet-data",
      "link": "http://0.0.0.0:4321/2017/02/fill-sketch-designs-with-spreadsheet-data",
      "date": "2017-02-10T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*z-6VGxXQDXSa9vIv3hSoXw.png\" alt=\"\" /></p>\n\n<p>Last week <a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> released our <a href=\"https://medium.com/@edwardbenson/use-spreadsheet-data-in-your-framer-projects-e7667c0589cf#.aebwljasb\">Framer\nPlugin</a>,\nand this week we’re building on the designer love with the <a href=\"https://github.com/cloudstitch/cloudstitch-sketch-plugin\">Cloudstitch Sketch\nPlugin</a>. It lets you\nduplicate and fill your Sketch designs with real data stored in a spreadsheet\nshared amongst your team. Our plugin is compatible with both Google Sheets and\nExcel 365.</p>\n\n<p>Filling your designs with *realistic data *is important because it gives helps\nyou see the design as it will be in the real world, reveals edge cases, and\nmakes for much better demos.</p>\n\n<p>But keeping your data in JSON files is no fun: they’re a pain to edit and can’t\nbe easily shared. Cloudstitch lets you load the data from shared spreadsheets in\nthe cloud instead.</p>\n\n<h3 id=\"installation--use\">Installation &amp; Use</h3>\n\n<p>Our <a href=\"https://github.com/cloudstitch/cloudstitch-sketch-plugin\">Github\nRepository</a> has the\nfull instructions to get started. Installation is as simple as double clicking a\nfile, and usage is documented on the GitHub page.</p>\n\n<h3 id=\"thank-you\">Thank You</h3>\n\n<p>Open Source is an amazing thing. We were able to build this plugin very easily\nthanks to the <a href=\"https://github.com/preciousforever/sketch-data-populator\">Sketch Data\nPopulator</a> plugin and\nit’s immaculately documented code. In fact — our plugin is just a forked,\ncustomized, and branded version of theirs. We’re releasing all our improvements\nunder the MIT license as well and you’re welcome to remix them in turn.</p>\n\n<ul>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/sketch?source=post\">Sketch</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/front-end-development?source=post\">Front End\nDevelopment</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/framerjs?source=post\">Framerjs</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/web-design?source=post\">Web Design</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/cloudstitch-tutorial?source=post\">Cloudstitch\nTutorial</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://blog.cloudstitch.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"cloudstitch\"><a href=\"https://blog.cloudstitch.com/?source=footer_card\">Cloudstitch</a></h3>\n\n<p>Cloudstitch powers websites using your office suite.</p>",
      "excerpt": "",
      "languages": null,
      "categories": [],
      "tags": ["Cloudstitch","Design"]
    }
    
  

  
    ,
    {
      "title": "Letter To An Immigrant Child",
      "permalink": "http://0.0.0.0:4321/2017/02/letter-to-an-immigrant-child",
      "link": "http://0.0.0.0:4321/2017/02/letter-to-an-immigrant-child",
      "date": "2017-02-07T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>A friend named Jenna who teaches ESL classes in Ohio emailed friends around the\ncountry asking for letters about how immigration has shaped our identities. Her\nstudents are rattled by recent news, and she wanted them to have access to\nstories of how “real America” views immigration — ordinary folks around the\ncountry, not shouting heads on TV. Anything goes, she said, just tell your own\nstory and don’t be political.</p>\n</blockquote>\n\n<blockquote>\n  <p>I thought I’d post my letter publicly in case it could encourage someone else to\nwrite too. It’s a great idea. <strong>Please consider the impact this public fight is\nhaving on kids, and please write your own letter.</strong></p>\n</blockquote>\n\n<blockquote>\n  <p>You can <a href=\"http://hovisjl@gmail.com/\">email Jenna</a> directly, or you can deliver it\nto any school in the country and they’ll know what to do. Or post it online with\nthe hashtag #LetterToAnImmigrantChild</p>\n</blockquote>\n\n<p>Hi there.</p>\n\n<p>We haven’t met, but consider me family.</p>\n\n<p>I grew up in the countryside of Virginia. The fields were filled with tobacco\nand corn, soy and cows. Virginians are particularly proud of their peanuts and\nham. Brunswick stew is the local soup — you’re supposed to make it with\nsquirrel, but everyone uses chicken. In the houses scattered across the fields,\neveryone looked and spoke just like me.</p>\n\n<p>My whole life has been a series of moves to increasingly urban places, mostly by\nhappenstance. Countryside to suburbs. Suburbs to small city. Small city to\nmedium city. Medium city to big city. With each move, my neighbors looked less\nlike me. New music, food, perspectives, jokes, fashion, sports.</p>\n\n<p>And now as an adult, when I’m asked “who am I, as an American?” I realize it’s\nimpossible to separate my identity from these neighbors who a little white boy\nfrom the countryside would have guessed were nothing like him. These neighbors\nwho speak differently, think differently, eat differently, and worship\ndifferently.</p>\n\n<p>I know how to trash talk about cricket thanks to a Sri Lankan. How to make laser\ncutting art thanks to an Iraqi. What it means to be an entrepreneur thanks to an\nIndian. And there could be nothing more comic book American than a trash-talking\nentrepreneur cutting things with lasers, no matter what accent rolls off your\ntongue.</p>\n\n<p>My wife is Taiwanese, and now I have two countrysides. One in the Appalachian\nmountains in America. One in the Yilan mountains in Taiwan.</p>\n\n<p>In Yilan, the fields are filled with kumquats and bitter melon, rice and ducks.\nYilaners are particularly proud of their clean water and green scallions.\nNiuroumian is the local soup — you’re supposed to make it with tendon-filled\nbeef, but I ask for pork instead. In the houses scattered across the rice\npatties, nobody looks like me. And nobody cares.</p>\n\n<p>Only three things actually matter when describing a person. Are they kind? Are\nthey empathetic? Do their actions match their words? Everything else is just a\ndecoration on top of that common humanity.</p>\n\n<p>So we haven’t met, but consider me family.</p>\n\n<p>I know that you eat some kind of soup. That it has its own funny ingredient.\nThat you come from a place that’s proud and a people that call themselves “we”.\nBut what I really care about is that I suspect you’re a good person, and that\nyou expect the same of me.</p>\n\n<p>As you age, you’ll see a lot of people in power ranting and shouting about one\ngroup or another. It never stops being terrifying. But the people who represent\njust a slice will never be as powerful as people who embrace the whole, so long\nas the whole stands together. That’s the great neutralizing math of society.</p>\n\n<p>So know that during the best times, the rest of us will call you family. And\nduring the worst times, we will fight to defend and protect you. Undocumented,\nvisa, green card, naturalized, first generation — you are my America, and we\nshare this home together.</p>\n\n<p>Ted Benson<br /> San Francisco, California</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/immigration?source=post\">Immigration</a></li>\n  <li><a href=\"https://medium.com/tag/travel?source=post\">Travel</a></li>\n  <li><a href=\"https://medium.com/tag/travel-ban?source=post\">Travel Ban</a></li>\n  <li><a href=\"https://medium.com/tag/politics?source=post\">Politics</a></li>\n  <li><a href=\"https://medium.com/tag/education?source=post\">Education</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "A friend named Jenna who teaches ESL classes in Ohio emailed friends around the\ncountry asking for letters about how immigration has shaped our identities. Her\nstudents are rattled by recent news, and she wanted them to have access to\nstories of how “real America” views immigration — ordinary folks around the\ncountry, not shouting heads on TV. Anything goes, she said, just tell your own\nstory and don’t be political.",
      "languages": null,
      "categories": [],
      "tags": ["Personal"]
    }
    
  

  
    ,
    {
      "title": "Use Spreadsheet data in your Framer Projects",
      "permalink": "http://0.0.0.0:4321/2017/02/use-spreadsheet-data-in-framer-projects",
      "link": "http://0.0.0.0:4321/2017/02/use-spreadsheet-data-in-framer-projects",
      "date": "2017-02-01T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*KOaWPwmY1LXxKUtf5D1l5g.png\" alt=\"\" /></p>\n\n<p><strong>Update: Also check out our <a href=\"https://medium.com/@edwardbenson/fill-your-sketch-designs-with-data-from-spreadsheets-ef18b608a2a9#.6kauodb94\">Sketch\nPlugin</a>!</strong></p>\n\n<p>Today <a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> is releasing the first of a few\nbridges that connect design tools with data from your office suite. We’re\nstarting with\n<a href=\"https://framer.com/?utm_source=blog.framer.com&amp;utm_campaign=Cloudstitch&amp;utm_medium=Blog_Post1\">Framer</a>,\nwhich is an amazing app for programmatic UI experimentation. The <a href=\"https://github.com/cloudstitch/framer.module.cloudstitch\">Cloudstitch\nFramer Module</a> lets\nyou load data from Google Spreadsheets and Microsoft Excel directly into your\nFramer projects.</p>\n\n<p>We think designers should work with <em>realistic</em> data as often as possible. It\ninforms your design decisions, lets you find edge cases that need to be\naccommodated, and makes for much better demos.</p>\n\n<p>But keeping your data in JSON files is no fun: they’re a pain to edit and can’t\nbe easily shared. Cloudstitch lets you load the data from shared spreadsheets in\nthe cloud instead.</p>\n\n<h3 id=\"how-to-install\">How to Install</h3>\n\n<p><a href=\"https://github.com/cloudstitch/framer.module.cloudstitch\">Download the module from\nGitHub</a> and add the\n<strong>cloudstitch.coffee</strong> file to the /<strong>modules</strong> folder of your project. You can\nfind it in the <strong>/modules</strong> folder of the example project in the GitHub\nrepository.</p>\n\n<p>This git repository is also a working Framer project that serves as an example.\nDownload it and double click <code class=\"highlighter-rouge\">cloudstitch.framer</code> file to see.</p>\n\n<h3 id=\"how-to-use\">How to Use</h3>\n\n<h4 id=\"1-create-a-spreadsheet-using-cloudstitch\">1. Create a spreadsheet using Cloudstitch</h4>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*mSpvtDwN1HR5DXcefy0ciw.gif\" alt=\"\" />\n<span class=\"figcaption_hack\">Create a new spreadsheet &amp; API using Cloudstitch</span></p>\n\n<p>Clone the <a href=\"https://www.cloudstitch.com/project-templates/framer-module-demo/clone\">Framer Module\nDemo</a> on\nCloudstitch and then edit the spreadsheet created for your new project.</p>\n\n<p>This spreadsheet acts as the datasource that you can load from Framer.</p>\n\n<h4 id=\"2-sync-your-spreadsheet-with-cloudstitch\">2. Sync your spreadsheet with Cloudstitch</h4>\n\n<p><span class=\"figcaption_hack\">Syncing your spreadsheet data publishes it to the Cloudstitch API</span></p>\n\n<p>When you’re done editing the spreadsheet, press the green <strong>Sync with your\nTemplate</strong> button in Cloudstitch. This makes a fresh copy of your spreadsheet\navailable over Cloudstitch’s API.</p>\n\n<h4 id=\"3-use-the-spreadsheet-data-in-framer\">3. Use the spreadsheet data in Framer</h4>\n\n<p>Include the Cloudstitch module within your project by adding the following:</p>\n\n<p>Then get data from your spreadsheet by providing the Cloudstitch username and\nappname of your project:</p>\n\n<p>In that code snippet, <strong>callback</strong> is a function that will get called and passed\nthe variable <strong>data</strong>, which contains all the tables from your spreadsheet.</p>\n\n<p>You can find the username and appname for your Cloudstitch project by looking at\nits URL:</p>\n\n<p><span class=\"figcaption_hack\">Finding the username and appname for your project.</span></p>\n\n<h3 id=\"thats-all-folks\">That’s all, folks!</h3>\n\n<p>When you’re done, you can build designs that rely on <strong>real, easy to update\ndata</strong> instead of fake values stored in code files.</p>\n\n<p><span class=\"figcaption_hack\">The project included with the module</span></p>\n\n<p>Download the library, along with working demo code, at\n<a href=\"http://github.com/cloudstitch/framer.module.cloudstitch\">github.com/cloudstitch/framer.module.cloudstitch</a></p>",
      "excerpt": "",
      "languages": null,
      "categories": [],
      "tags": ["Cloudstitch","Design"]
    }
    
  

  
    ,
    {
      "title": "America without Immigration isn’t America",
      "permalink": "http://0.0.0.0:4321/2017/01/america-without-immigration-isnt-america",
      "link": "http://0.0.0.0:4321/2017/01/america-without-immigration-isnt-america",
      "date": "2017-01-28T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>America has always sold a civilizational narrative that brushed our own crimes\nunder the rug. But it’s also true that, caked in the muck of our own problems,\nour ethos dreams out loud of a world where the only requirement to be called\nfamily is show up to the party and say “I’d like to join.”</p>\n\n<p>That earnest, slap-you-on-the-back, “come on over and grab an ear of corn” is\nthe personality from which true greatness emerges. It’s the characteristic that\nbuilds communities, opens the space for honest conversation among mixed groups,\nattracts talent, and further binds us to our international neighbors through\nfriendship and intermarriage. And it results in some damn good fusion cuisine.</p>\n\n<p>The American Dream isn’t about a white picket fence and turkey in your oven. You\ncan get those things in any country. It’s about the pursuit of a big backyard\nparty that anyone’s welcome to join as long as you agree to help keep the party\ngoing and welcome the next guest.</p>\n\n<p>If you shut it down, I’m not sure what’s left.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/life-lessons?source=post\">Life Lessons</a></li>\n  <li><a href=\"https://medium.com/tag/immigration?source=post\">Immigration</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "America has always sold a civilizational narrative that brushed our own crimes\nunder the rug. But it’s also true that, caked in the muck of our own problems,\nour ethos dreams out loud of a world where the only requirement to be called\nfamily is show up to the party and say “I’d like to join.”",
      "languages": null,
      "categories": [],
      "tags": ["Personal"]
    }
    
  

  
    ,
    {
      "title": "The Math of How Protests Snowball",
      "permalink": "http://0.0.0.0:4321/2017/01/the-math-of-how-protests-snowball",
      "link": "http://0.0.0.0:4321/2017/01/the-math-of-how-protests-snowball",
      "date": "2017-01-12T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<h2 id=\"and-how-to-use-it-to-start-one\">(And how to use it to start one)</h2>\n\n<p>Here’s the problem: **there’s a chicken-and-egg problem with protesting. Many\npeople want to JOIN a march, but few people want to START a march. **This blog\npost shows how a bit of simple math, combined with a mobile app, could overcome\nthat.</p>\n\n<p>This blog post is (quite literally) a back-of-napkin sketch, and I’m sure the\nideas are well trodden ground. I’m not claiming any novelty — just some\nafter-dinner food for thought.</p>\n\n<h3 id=\"modeling-a-protest\">Modeling a Protest</h3>\n\n<p>Any group can be divided into two kinds of people at a snapshot in time. Those\nwho are protesting and those who aren’t.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*COOe3zh0v1OK_PNVpp7X2w.png\" alt=\"\" />\n<span class=\"figcaption_hack\">A person is either protesting or not protesting</span></p>\n\n<p>Of course that’s not the whole story. Many people who aren’t protesting would,\nif only the group got big enough for them to feel comfortable participating. We\ncan call this <strong>activation impedance.</strong></p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*yPvwHonDm68KTz_rY2t_bQ.png\" alt=\"\" /></p>\n\n<p>If your activation impedance is 1, it means you’ll start protesting if you see\njust one other person doing it (you rebel). If it’s 100, it means you’ll only\njoin groups of 100 or more. If it’s ∞, it means you will never protest. If it’s\n0, it means you are comfortable bringing the party all by yourself.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1200/1*TfIGxUafhdZdnVhvGgWiww.png\" alt=\"\" /></p>\n\n<p>We know that there are very few people with low activation impedance (willing to\nstart a protest). And for most it’s very high. So the critical question of\nkindling a march in the streets is *can you find &amp; connect enough people with\nlow impedance to activate that middle segment that would otherwise lay dormant?\n*Then you have real numbers hit the streets.</p>\n\n<p>A lot of us identify with that middle segment. We sit or stand at work, caring a\nlot about what’s going on in the world, but too busy/tired/complacent to\nproactively organize. What comes below shows how to overcome that problem.</p>\n\n<h3 id=\"the-math-of-joining-a-protest\">The Math of Joining a Protest</h3>\n\n<p>Well, this is basically a simple math problem with our invented protestor\nsymbols. An unactivated person with impedance 1 plus a protest of size 1 equals\na protest of size 2.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*1fusRS_JLvaJV8bhfZJLoA.png\" alt=\"\" /></p>\n\n<p>Just like before, the number inside a black circle denotes the impedance of that\nperson. But the number inside red circle will denote the size of the protest.</p>\n\n<p>There’s also the scenario where two otherwise unactivated people could agree to\nprotest together, so long as the result exceeds each of their individual\nactivation impedances. (The “I’ll do it if you do it” scenario)</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*ujbICrsDRas6trhMx4-T6Q.png\" alt=\"\" /></p>\n\n<p>We can similarly reason about protests that will fail to attract a new member.\nIn the case below, the onlooker is only comfortable joining a protest of size 2\nand above, so does not join the protest of size 1.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*Xin0IAGuNAIkxRrHxt5YXA.png\" alt=\"\" /></p>\n\n<p>But here’s where things get interesting. The real world has millions of such\nnodes, and these **activations **can cascade, like this:</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*gfj7cYxFHRwrxHXWXbq2JQ.png\" alt=\"\" /></p>\n\n<p>In this case, the group of three people starts with one protesting. That’s\nenough to activate the second, and then the protest of two is enough to activate\nthe third.</p>\n\n<h3 id=\"factoring-in-location\">Factoring in Location</h3>\n\n<p>We know that starting a protest isn’t just about willingness, it’s about\nlocation. I will be in San Francisco on January 20th, and the flight to D.C.\nexceeds my tolerance to travel to protest. But that’s not true of everyone.</p>\n\n<p>First, let’s add a new number to each node: the **willingness to travel. **The\nperson below has an activation impedance of 1 and a willingness to travel 4\nunits of distance.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*8oy10jIBvjLiPguODlnQEw.png\" alt=\"\" /></p>\n\n<p>We can represent distance by forming all the nodes into a fully connected graph.\nThe edge weights are the distances between people.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*rh1yAcrWhO7M40MB4Pm-xw.png\" alt=\"\" /></p>\n\n<p>And with that, we have the same old math rules, but we have two separate\nconditions we have to satisfy for activation. So in some cases activation will\nhappen:</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*X0l6u_3ztOLj5tni62o00Q.png\" alt=\"\" /></p>\n\n<p>But in other cases activation won’t. Not because the impedance was too high, but\nbecause the distance was too far.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*vifqNhxEXs4yXhemtUBTDw.png\" alt=\"\" /></p>\n\n<h3 id=\"these-graphs-are-all-you-need-to-model-whole-cities\">These Graphs are all you need to model whole cities</h3>\n\n<p>They look simple when you just draw a few circles and lines, but that’s because\nthe mechanics of snowballing really do seem pretty simple.</p>\n\n<p>The only difference between a city of millions and the figures above is how many\ncircles you draw (more realistically: how many the computer models). For any\ncity of <em>N</em> people, you’d need <em>N</em> circles (each with an impedance) and <em>N</em>²\nlines to encode the distances between them all.</p>\n\n<h3 id=\"answering-the-question-could-a-protest-of-size-n-occur\">Answering the question “Could a Protest of Size N Occur?”</h3>\n\n<p>The million dollar question is whether a protest of any significance could occur\nat some place and time. Activists want to start them, and governments want to be\nprepared to maintain safety.</p>\n\n<p>First you have to pick the size you’re interested in, but note that just means\nselecting the number inside of a red circle.</p>\n\n<p>Next we draw the graph of all nodes of the population we’re interested in (a\ncity, a state, a country..). That graph begins with all nodes unactivated. we’ll\ncall it “Graph 0”</p>\n\n<p>The question of “Could a protest of Size N Occur?” is then equal to the question\nof whether a sequence of arithmetic operations on “Graph 0” could be performed\nsuch that it will eventually produce a graph containing an activated node of\nSize N. The graph above, for example, is capable of resulting in a protest of\nsize 3 in two operations.</p>\n\n<p>The bigger the graph, the more the computer has to spin its wheels to generate\nan answer for you, but the important thing is that (1) it can do it, and (2)\nonce it does, it’s also produced a roadmap for getting the protest going: Alice\nand Bob start, then they march over to Charlie. At this point Deborah and Eve\nwill join, triggering… and so on, and so on.</p>\n\n<h3 id=\"how-to-start-a-protest\">How to Start a Protest</h3>\n\n<p>So back to the starting question of how to start a protest. The old fashioned\nway, of course. But technology can probably be a useful tool.</p>\n\n<p>If a challenge of protest organizers is how to get the activation energy to\nreally unlock the masses, then a useful tool could be an app that lets people\nregister their location, activation impedance (how big a protest it has to be\nbefore they’d be willing to join), and their travel willingness.</p>\n\n<p>Protest organizers could then play out scenarios: if I could gather 15 people on\nMarket Street, would that be enough to create a protest of size 10,000 —\nproviding everyone made good on the promise they punched in their phone?</p>\n\n<p>The simple modeling above says the app would be able to give you a pretty easy\nyes/no answer to that question. And help you out along the way by sending\nnotifications that a protest nearby you has just reached a size that you’re\ncomfortable participating in.</p>\n\n<h3 id=\"i-sit-in-my-office-and-have-the-feels\">I Sit in My Office and Have the Feels</h3>\n\n<p>Like many of you, I’m sure, I’ve spent several afternoons this election cycle\nstruggling to focus at work while I really want to take to the streets. Instead,\nI open twitter and seek catharsis by reading tweets from other angry people.</p>\n\n<p>Perhaps with a bit of technical assistance, we could facilitate the conditions\nthat would activate all those office workers staring despondently out the\nwindow. And achieve something with more social impact than browsing Twitter.</p>\n\n<h4 id=\"edit-responses-to-questions-ive-gotten\">EDIT: Responses to Questions I’ve Gotten:</h4>\n\n<p><strong>This doesn’t take into account why people are protesting, and surely that’s\nimportant.</strong> 100% agree. But, insofar as modeling how a protest forms so that\nsoftware could assist its creation, agreement about purpose, for the most part,\nis a simple “yes/no” filter that can be applied.</p>\n\n<p><strong>Why does your URL have the word “riot” in it?</strong> I just want to state clearly I\ndon’t support violence or destruction of property. I was trying to create an\neye-catching title, and Medium immortalized the first draft of it in the URL.</p>\n\n<p><strong>There is some academic work in this area already.</strong> Feel free to ping me if\nyou’d like links to the studies folks have sent.</p>\n\n<p><strong>People aren’t accurate self-reporters of their own impedance &amp; travel\nwillingness, and this would damage the ability of the model to be effective.</strong>\nYeah, that’s a good point. The follow-up meta-question, I suppose, would be\nwhether the noise within the self-reported values compounds to enough to prevent\nthe overall physics of the model from working.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/machine-learning?source=post\">Machine Learning</a></li>\n  <li><a href=\"https://medium.com/tag/politics?source=post\">Politics</a></li>\n  <li><a href=\"https://medium.com/tag/activism?source=post\">Activism</a></li>\n  <li><a href=\"https://medium.com/tag/protest?source=post\">Protest</a></li>\n  <li><a href=\"https://medium.com/tag/mathematics?source=post\">Mathematics</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "(And how to use it to start one)",
      "languages": null,
      "categories": [],
      "tags": ["Personal"]
    }
    
  

  
    ,
    {
      "title": "Auto-incrementing ID Columns in Google Sheets",
      "permalink": "http://0.0.0.0:4321/2016/12/autoincrementing-id-colums-in-google-sheets",
      "link": "http://0.0.0.0:4321/2016/12/autoincrementing-id-colums-in-google-sheets",
      "date": "2016-12-05T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><span class=\"figcaption_hack\">You too can have your very own magic ID column!</span></p>\n\n<p>One fun aspect of answering <a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> support\ntickets is seeing what kinds of crazy cool spreadsheet-powered web apps people\nare dreaming up. And these support tickets often drive what new features we cook\nup. A few weeks ago I wrote about adding <a href=\"https://medium.com/@edwardbenson/hacking-hierarchical-joins-into-spreadsheets-rails-style-b022b1a11c3c#.o8ku81qte\">Rails-style\njoins</a>\nto our spreadsheet data API. This post is about a related topic:\nauto-incrementing ID columns.</p>\n\n<p>Auto-incrementing IDs are the bread and butter of database tables. They’re a way\nto guarantee that every single item in your database (or spreadsheet, in our\ncase) has a unique label that can be used to join data or refer to it elsewhere\n(like in your web UI code). The problem is there’s no clean and easy way (at\nleast to our knowledge) to magically create such a column using just cell\nformulas.</p>\n\n<p>The good news is both Google Spreadsheets and Excel let you attach little\ncomputer scripts to your spreadsheets to do things to the data that mere\nspreadsheet formulas trip over. So here is a quick tutorial for adding auto-inc\ncolumns in GSheets.</p>\n\n<h4 id=\"step-1-add-a-google-app-script-script-to-your-spreadsheet\">Step 1. Add a Google App Script script to your Spreadsheet</h4>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*jBZRb4RQnBEAFWM6ehhqNQ.png\" alt=\"\" />\n<span class=\"figcaption_hack\">Adding a script to your spreadsheet</span></p>\n\n<p>Click on the <strong>Tools **menu and then on **Script Editor</strong>. That will take you to\na little-seen code editor <em>connected to your spreadsheet data</em> that is about to\nbecome your best friend…</p>\n\n<h4 id=\"step-2-copy-and-paste-this-script-in-there\">Step 2: Copy and paste this script in there</h4>\n\n<p>This script that loops over your spreadsheet and adds an incrementing number to\neach row in the portion of your spreadsheet that contains data. (The last thing\nyou want is your spreadsheet suddenly getting numbers filling up all the blank\nrows up to 999,999,999)</p>\n\n<p>You might need to change which column (<strong>AUTOINC_COLUMN, **zero indexed) you\nwant your ID in and how many header rows (</strong>HEADER_ROW_COUNT<strong>) your sheet has\n(so the script doesn’t write over them. Also, if your worksheet is named\nsomething other than **Sheet1</strong>, change it inline 7.</p>\n\n<p><span class=\"figcaption_hack\">Code snipped to create auto-incrementing id columns in Google Spreadsheets</span></p>\n\n<h4 id=\"step-3-run-and-approve-the-script\">Step 3: Run and Approve the Script</h4>\n\n<p>Copied? Pasted? Good.</p>\n\n<p>Now click the little play button on the toolbar to force the script to run for\nthe first time. What we’re really trying to do here is trigger Google’s\nauthorization request. Even though you created this script from inside your\nspreadsheet, Google want’s to double-check that it’s allowed to see your data.</p>\n\n<p><span class=\"figcaption_hack\">Authorizing your Google Apps Script to run</span></p>\n\n<h4 id=\"step-4-schedule-the-script-to-run-whenever-the-sheet-changes\"><strong>Step 4: Schedule the script to run whenever the sheet changes</strong></h4>\n\n<p>And here’s the final, very important step: you need to tell Google to re-execute\nthis script whenever anything changes. This means if you’re using the\n<a href=\"http://cloudstitch.com/\">Cloudstitch API</a> to post data to your spreadsheet, new\nrows will automatically get a new ID number.</p>\n\n<p>Click on the clock icon on the toolbar to open the scheduling dialog box, and\ncreate a new schedule item for “On change” events to your spreadsheet.</p>\n\n<h4 id=\"thats-it\">That’s it!</h4>\n\n<p>Hope this helps!</p>\n\n<p>We love to give high fives. Please send all the cool spreadsheet-based web apps\nyou build to @cloudstitch on Twitter.</p>\n\n<ul>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/productivity?source=post\">Productivity</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/tech?source=post\">Tech</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/spreadsheets?source=post\">Spreadsheets</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/cloudstitch-tutorial?source=post\">Cloudstitch\nTutorial</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://blog.cloudstitch.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"cloudstitch\"><a href=\"https://blog.cloudstitch.com/?source=footer_card\">Cloudstitch</a></h3>\n\n<p>Cloudstitch powers websites using your office suite.</p>",
      "excerpt": "You too can have your very own magic ID column!",
      "languages": null,
      "categories": [],
      "tags": ["Hacks","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "Hacking hierarchical joins into Spreadsheets, Rails Style",
      "permalink": "http://0.0.0.0:4321/2016/08/hacking-joins-into-spreadsheets-rails-style",
      "link": "http://0.0.0.0:4321/2016/08/hacking-joins-into-spreadsheets-rails-style",
      "date": "2016-08-09T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Sometimes frustration drives you toward a quick, simple solution that should\nhave been obvious from the start.</p>\n\n<p>My company <a href=\"https://www.cloudstitch.com/\">Cloudstitch</a> synchronizes web sites\nwith spreadsheets. You can build impressively complex sites with zero back-end\ninfrastructure: just a simple spreadsheet.</p>\n\n<p><em>…But sometimes that spreadsheet isn’t so simple</em>.</p>\n\n<p>Yesterday I was helping a customer debug a message board that runs on\nCloudstitch. The website looks like an ordinary message forum, but it\nsynchronizes with a spreadsheet containing two worksheets: <strong>Posts **and\n**Comments</strong>.</p>\n\n<p>The **Posts **sheet includes a column that aggregates the comments for each post\nwith this formula:</p>\n\n<p><em>This is crazy!</em> I found myself thinking. <em>Simple joins like this are everywhere\non web sites. Surely coercing the spreadsheet to support them can’t be this\nhard.</em></p>\n\n<p>But no matter what clever solution I tried, they all ended up leaving me\nwincing.</p>\n\n<h3 id=\"rails-style-joins\">Rails-style Joins</h3>\n\n<p>Then I remembered watching <a href=\"https://www.youtube.com/watch?v=Gzj723LkRJY\">the original Ruby on Rails\ntutorial</a>, thinking how magical the\ndata joins were. DHH’s key insight was that most data joins in web apps conform\nto a few simple templates— so why not build in syntactic sugar to automate them?\nThus a simple annotation like the one below would expand, at the ORM-level, into\na one-to-many equi-join:</p>\n\n<p>This idea, along with the syntactic sugar for using it, seemed like a perfect\nsolution. It solves the 80% use case, and it can be expressed easily in\nspreadsheet form. That second part is super important: we’re committed to\nbuilding an amazing web development platform that syncs with <strong>the software\nyou’re already using</strong>. That’s a great win for users, but it places heavy design\nconstraints on us to find solutions that work well with your existing\nspreadsheets.</p>\n\n<h3 id=\"rails-style-joins-for-spreadsheets\">Rails-style Joins for Spreadsheets</h3>\n\n<p>By the end of the day, Cloudstitch had production-support for two kinds of\njoins, Rails-style <strong>belongs_to</strong> and <strong>has_one</strong>. Here’s how it works:</p>\n\n<ul>\n  <li>Request a join by adding a special “join column” in your spreadsheet</li>\n  <li>Cloudstitch materializes the join and caches the results [1]</li>\n  <li>The web templates that synchronize with this spreadsheet can now refer to\njoined, nested, JSON objects — exactly what the template author wants — instead\nof flat JSON tables.</li>\n</ul>\n\n<p>It’s easier to show than tell— here’s an example of each type.</p>\n\n<h4 id=\"belongs-to\">Belongs To</h4>\n\n<p>Adding a **Belongs To **column creates a 1-to-many join. It places the results\non the foreign table referenced in the column name.</p>\n\n<p>Let’s say you have a Football spreadsheet with a <strong>Teams</strong> column and a\n<strong>Players</strong> column. To join the roster of each team into the Teams sheet, do the\nfollowing:</p>\n\n<p>Cloudstitch materializes this spreadsheet into the following JSON:</p>\n\n<p>Your template can now be written against this nested hierarchy. No need for\ncrazy spreadsheet formulas or Javascript rigamarole. Here’s a simple Handlebars\nexample.</p>\n\n<h4 id=\"has-one\">Has One</h4>\n\n<p>Adding a <strong>Has One</strong> column creates a 1-to-1 join. Items from the foreign table\n(specified in the column name) will be embedded on the local object. The\ncontents of the Has One column specify the value to join against.</p>\n\n<p>Let’s flip up that Football example. Say we want to embed the team data inside\neach player item. Use a <strong>Has One</strong> column like the one below:</p>\n\n<p>Cloudstitch will materialize this spreadsheet into a different JSON object than\nthe one before:</p>\n\n<p>Similarly, you can now write a Handlebars template that takes advantage of this\nembedding, like this one.</p>\n\n<h3 id=\"simple-concepts-should-have-simple-executions\">Simple Concepts should have Simple Executions</h3>\n\n<p>So that’s it. 24 hours later, that unwieldy spreadsheet formula that started all\nthis can be expressed with a simple column called <strong>Belongs to Posts!ID</strong>.</p>\n\n<p>It’s such a simple solution that addresses an enormous space of use cases, and\nit does it in a way that feels “spreadsheety” in all the good ways and none of\nthe bad.</p>\n\n<h3 id=\"were-hiring\">We’re Hiring</h3>\n\n<p>I can’t end without a plug: <a href=\"https://www.cloudstitch.com/hiring\">Cloudstitch is\nhiring</a>. If you’re a web developer or\ndesigner that wants to simplify and democratize web development, we want to talk\nto you.</p>\n\n<p>—</p>\n\n<p>[1] Note: We use <a href=\"https://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm\">Tarjan’s\nAlgorithm</a>\nas a cheap O(|V|+|E|) way to detect cycles, and if we find one, we skip the join\nprocessing all together.</p>\n\n<ul>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/programming?source=post\">Programming</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/ruby-on-rails?source=post\">Ruby on Rails</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/spreadsheets?source=post\">Spreadsheets</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/database?source=post\">Database</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/cloudstitch-tutorial?source=post\">Cloudstitch\nTutorial</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://blog.cloudstitch.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"cloudstitch\"><a href=\"https://blog.cloudstitch.com/?source=footer_card\">Cloudstitch</a></h3>\n\n<p>Cloudstitch powers websites using your office suite.</p>",
      "excerpt": "Sometimes frustration drives you toward a quick, simple solution that should\nhave been obvious from the start.",
      "languages": null,
      "categories": [],
      "tags": ["Hacks","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "On Disposable Software",
      "permalink": "http://0.0.0.0:4321/2016/04/on-disposable-software",
      "link": "http://0.0.0.0:4321/2016/04/on-disposable-software",
      "date": "2016-04-12T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Think of how freely you doodle on a whiteboard versus how carefully you typeset\nyour thesis. How fluidly we hack spreadsheets versus how cautiously we plan\ndatabases. How quickly we sketch a UI on paper versus how slowly we build it as\nsoftware.</p>\n\n<p>The word “disposable” often has negative connotations, but disposability is an\namazing property when you can achieve it. When a product or process is\ndisposable, we gain a kind of creative liberation. We no longer have to spend\nenergy maintaining the means and instead can focus entirely on the ends. And if\nthe ends don’t work, we just toss everything and do it again.</p>\n\n<p>Most software creation is far from disposable. In fact the engineering tradition\ntrains us to strive for the opposite. We dedicate extraordinary time toward\ngeneralized, scalable, custom-smithed designs. Then we build and deploy them\nwith tooling that cements them in place for years.</p>\n\n<p>This approach works well for enormous tech products, but at what cost to the\nrest of the world? Most web sites, for example, are little more than attractive\nwrappers around a dataset. Yet we build them with the same industrial tooling\nthat Facebook and Google use at scale (React, Angular, Kubernetes, etc).</p>\n\n<p>It’s like Monty Python hunting mosquitos with bazookas. As a programmer, where’s\nmy fly swatter?</p>\n\n<p><span class=\"figcaption_hack\">Frameworks like React and Ruby on Rails are bazookas, while most websites are\nmosquitos. Besides comedic value, why use a bazooka to kill a mosquito?</span></p>\n\n<p>There’s a great legacy of dreaming about computers as effortless extensions of\nthe mind. Engelbart saw them as humanity’s way of <a href=\"http://www.dougengelbart.org/about/bootstrapping.html\">getting better at getting\nbetter</a>. Jobs had his\n<a href=\"https://youtu.be/ob_GX50Za6c\">bicycle for the mind</a> analogy. Victor has a great\nthread of thought on <a href=\"https://vimeo.com/115154289\">humane computing</a>.</p>\n\n<p>As an engineer, I’d like my computer to be an effortless extension of my hand,\ntoo. If we could create software at a speed and cost deserving of the term\ndisposable, just think of the creative forces we would unlock.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/programming?source=post\">Programming</a></li>\n  <li><a href=\"https://medium.com/tag/web-development?source=post\">Web Development</a></li>\n  <li><a href=\"https://medium.com/tag/prototyping?source=post\">Prototyping</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "Think of how freely you doodle on a whiteboard versus how carefully you typeset\nyour thesis. How fluidly we hack spreadsheets versus how cautiously we plan\ndatabases. How quickly we sketch a UI on paper versus how slowly we build it as\nsoftware.",
      "languages": null,
      "categories": [],
      "tags": ["Thoughts","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "Eating Startup Dogfood in Public",
      "permalink": "http://0.0.0.0:4321/2016/03/eating-startup-dogfood-in-public",
      "link": "http://0.0.0.0:4321/2016/03/eating-startup-dogfood-in-public",
      "date": "2016-03-22T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><a href=\"https://en.wikipedia.org/wiki/Eating_your_own_dog_food\">Eating your own\ndogfood</a> is a tech term\nbelieved to have started in the early days of Microsoft. By becoming your own\ncustomer, you really feel, not just intellectualize, the bugs and shortcomings\nof your product. Google famously banned MS Office as a way to get Google Docs up\nto speed. GitHub “<a href=\"https://zachholman.com/talk/how-github-uses-github-to-build-github/\">uses GitHub to build\nGitHub</a>”.\nAnd so on.</p>\n\n<p><a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> is building the world’s first\nprosumer web development platform. We’ve got a clever development stack that we\nthink is the key to unlocking this: your office suite (spreadsheets, folders,\netc) instead of the traditional mess of databases and app servers programmers\nare used to. But a clever development stack is not enough: the experience has to\nbe good, too.</p>\n\n<p>Last November I grew worried that I was getting too out of touch with our users.\nI realized that when I built things using Cloudstitch (for friends, client\ndemos, etc), I was increasingly using private tricks to bypass our cloud editing\ninterface instead of using our platform the way our users do.</p>\n\n<p>That had to change, so I did a series of experiments. I sat down and recorded\nmyself re-writing a few people’s websites using Cloudstitch. I recorded them\nfrom scratch, with zero preparation, in a single take, without re-dos.</p>\n\n<p>In just three videos, I learned a lot about what works and what <em>needs</em> work.\nSoftware demos tend to be scripted to create a feeling of effortlessness. But in\nreal world development, situations arise that don’t perfectly match the tools\nyou happen to be holding. Suddenly you need to find a workaround. There is\nsomething amazing about being recorded while you take those detours on your own\nproduct.</p>\n\n<p>So here they are. Three short videos that I think are actually pretty useful\ntutorials given the setup of the experiment. But the real reason I wanted to\nshare them was the hope it might inspire other startup founders to do this\nexercise. Even if you never release the results (I wasn’t sure if I would), try\nhitting the record button on yourself while you become your own user. You’ll be\nglad you did.</p>\n\n<p><strong>Walter Lasecki’s Publication Page</strong></p>\n\n<p><span class=\"figcaption_hack\">Drive by Web Programming — Walter Lasecki Edition</span></p>\n\n<p><strong>Elena Glassman’s Publication Page</strong></p>\n\n<p><span class=\"figcaption_hack\">Drive by Web Programming — Elena Glassman Edition</span></p>\n\n<p><strong>Frank Wang’s Publication Page</strong></p>\n\n<p><span class=\"figcaption_hack\">Drive by Web Programming — Frank Wang Edition</span></p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/startup?source=post\">Startup</a></li>\n  <li><a href=\"https://medium.com/tag/programming?source=post\">Programming</a></li>\n  <li><a href=\"https://medium.com/tag/tech?source=post\">Tech</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "Eating your own\ndogfood is a tech term\nbelieved to have started in the early days of Microsoft. By becoming your own\ncustomer, you really feel, not just intellectualize, the bugs and shortcomings\nof your product. Google famously banned MS Office as a way to get Google Docs up\nto speed. GitHub “uses GitHub to build\nGitHub”.\nAnd so on.",
      "languages": null,
      "categories": [],
      "tags": ["Thoughts","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "How to Upload Files from the web to a Google Spreadsheet",
      "permalink": "http://0.0.0.0:4321/2016/03/how-to-upload-files-to-a-google-spreadsheet",
      "link": "http://0.0.0.0:4321/2016/03/how-to-upload-files-to-a-google-spreadsheet",
      "date": "2016-03-15T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>This tutorial shows you how to build a web form that uploads files to a Google\nSpreadsheet. We’ll do it using <a href=\"http://www.cloudstitch.com/\">Cloudstitch</a>, a\nservice that lets web pages talk directly to spreadsheets as if they were\ndatabases. Powering a web form this way only takes a few minutes to set up, and\nyou’ll be in very good company using it: it’s one of the most popular uses of\nCloudstitch.</p>\n\n<p>At the end of this tutorial, you’ll have simple form you can use to let people\nupload a profile photo.</p>\n\n<h4 id=\"step-1-create-a-magic-form-on-cloudstitch\">Step 1. Create a Magic Form on Cloudstitch</h4>\n\n<p>To get started, create a <a href=\"http://www.cloudstitch.com/magic-form\">Magic Form on\nCloudstitch</a>. This will set up two\nimportant pieces for you to use:</p>\n\n<ol>\n  <li>It creates spreadsheet for your data</li>\n  <li>It creates a URL you can use to send data to that spreadsheet</li>\n</ol>\n\n<h4 id=\"step-2-create-some-spreadsheet-columns\">Step 2. Create some Spreadsheet Columns</h4>\n\n<p>Inside your Magic Form project, click on the <strong>Welcome **tab if it isn’t already\nselected, and then click the then **Edit</strong> link for your new Google Spreadsheet.</p>\n\n<p>Next, create columns for the fields you’d like to accept. For this tutorial,\nlet’s use FirstName, LastName, and Picture.</p>\n\n<h4 id=\"step-3-create-a-form\">Step 3. Create a Form</h4>\n\n<p>Next we’ll create a web form to send data to that spreadsheet.</p>\n\n<p>Back in Cloudstitch, you probably noticed the URL sitting right above your\nspreadsheet link. It looks like this (yours will be different):</p>\n\n<p>Any web form you post to this URL will save to the associated spreadsheet\n(you’ll have to have created the columns to accept the data first, though).</p>\n\n<p>Create a simple HTML form that contains the same fields that we made columns\nfor: <strong>FirstName</strong>, <strong>LastName</strong>, and <strong>Picture</strong>. The first two should be\nregular input elements, and the third should be a file input. Make sure you set\nthe form encoding type to **multipart/form-data **and the method to POST.</p>\n\n<p>Here’s an example you can just copy paste (update the URL to match your own):</p>\n\n<p>There’s one extra element in that form above. It’s a hidden element with the\nname <strong>_redirect</strong>. This tells Cloudstitch what URL to send users to after they\nhave submitted data.</p>\n\n<h4 id=\"step-4-youre-done-put-the-form-anywhere-and-start-uploading-files\"><strong>Step 4. You’re Done! Put the form anywhere and start uploading files</strong></h4>\n\n<p><span class=\"figcaption_hack\">Yes, that’s it.</span></p>\n\n<p>That’s it. You can paste that form code on any website and start using it\nimmediately. Style it however you want, add columns or multiple files, even use\nit over Ajax. We even give you space to develop and test your form right from\nyour project: head over to the <strong>Examples</strong> tab and use the live editor to build\nand style your form before you put it on your site.</p>\n\n<p>Here’s what this example looks like in the project I created</p>\n\n<p>And here’s what my spreadsheet looks like after making a submission:</p>\n\n<p>Cloudstitch supports many more features for your forms, like modifying data and\noffering an API. To find out more, take a look at <a href=\"http://www.cloudstitch.com/docs\">our\ndocumentation</a> (which is itself powered by\nGoogle Docs!) or feel free to reach out at\n<a href=\"mailto:hello@cloudstitch.com\">hello@cloudstitch.com</a>.</p>\n\n<ul>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/api?source=post\">API</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/google-spreadsheets?source=post\">Google\nSpreadsheets</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/html?source=post\">HTML</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/file-upload?source=post\">File Upload</a></li>\n  <li><a href=\"https://blog.cloudstitch.com/tagged/cloudstitch-tutorial?source=post\">Cloudstitch\nTutorial</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://blog.cloudstitch.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"cloudstitch\"><a href=\"https://blog.cloudstitch.com/?source=footer_card\">Cloudstitch</a></h3>\n\n<p>Cloudstitch powers websites using your office suite.</p>",
      "excerpt": "This tutorial shows you how to build a web form that uploads files to a Google\nSpreadsheet. We’ll do it using Cloudstitch, a\nservice that lets web pages talk directly to spreadsheets as if they were\ndatabases. Powering a web form this way only takes a few minutes to set up, and\nyou’ll be in very good company using it: it’s one of the most popular uses of\nCloudstitch.",
      "languages": null,
      "categories": [],
      "tags": ["Hacks","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "Launching is an Accountability Hack",
      "permalink": "http://0.0.0.0:4321/2015/11/launching-is-an-accountability-hack",
      "link": "http://0.0.0.0:4321/2015/11/launching-is-an-accountability-hack",
      "date": "2015-11-16T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>When you’re building something new, it’s tempting to succumb to that feeling of\n“just a little bit more work.. then we’ll launch it.” Launch is always right\naround the corner, just as soon as you iron out a few more kinks.</p>\n\n<p>The dangerous problem with this mindset is that there will always be kinks to\niron out, but you don’t know which ones are important until real customers are\nin the loop. Paradoxically, delaying a launch in pursuit of perfectionism is the\nvery thing preventing you from achieving it.</p>\n\n<p>I felt that “let’s wait a few more weeks” feeling a lot at the beginning of\n<a href=\"http://www.cloudstitch.com/\">Cloudstitch</a>. We began a small private beta in\nDecember 2014, and for half a year we remained in that state. When we got into\nYCombinator, we decided launch had to be now or never, and the coding that\nhappened in the three weeks that followed was revelatory. We started running\ndaily QA sessions to weed out bugs, and it became immediately clear that half\nour features had to be deleted. They were either too buggy or too confusing. We\nremoved a lot of fancy reactive syncing, shrunk the UX down to a minimum, and\ntook away almost all configuration options. The only new feature we added was a\nway to pay us.</p>\n\n<p>Now we’re back to adding new interesting features, but they aren’t the ones we\nwere working on before. Now we wake up to emails from customers that guide our\nproduct planning. And that doesn’t mean we’re doing everything right, but it\ndoes, I think, mean we’re doing things for a better set of reasons. That’s a\nmuch better spot to be in.</p>\n\n<p>So if you’ve got launch anxiety, don’t think about your launch as a debutante\nball where you’ve got to impress the whole industry. Forget your perfectionist\nnerves. Launch is an accountability hack. It’s a bottlenecking process that\nforces you to strip your idea down to the essentials, make it work well enough\nto find real users, and then build it back up with their feedback.</p>\n\n<p>That feeling of “we’re ready” will never come if you keep delaying a launch.\nYou’ve got to slowly grow into it by iterating with your users. And here’s the\nbest part: you can probably start doing that immediately.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/startup?source=post\">Startup</a></li>\n  <li><a href=\"https://medium.com/tag/entrepreneurship?source=post\">Entrepreneurship</a></li>\n  <li><a href=\"https://medium.com/tag/cloudstitch?source=post\">Cloudstitch</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "When you’re building something new, it’s tempting to succumb to that feeling of\n“just a little bit more work.. then we’ll launch it.” Launch is always right\naround the corner, just as soon as you iron out a few more kinks.",
      "languages": null,
      "categories": [],
      "tags": ["Thoughts","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "D3 in a Box is Docker for Visualizations",
      "permalink": "http://0.0.0.0:4321/2015/10/d3-in-a-box-is-docker-for-visualizations",
      "link": "http://0.0.0.0:4321/2015/10/d3-in-a-box-is-docker-for-visualizations",
      "date": "2015-10-30T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Cloudstitch launched a new product called <a href=\"http://www.cloudstitch.com/d3-in-a-box\">D3 in a\nBox</a> this week, and I wanted to write a\nfew notes about the motivation behind it. It’s one of those “what we found is\nnot what we expected” stories.</p>\n\n<p>D3 in a Box is like a <a href=\"https://www.docker.com/what-docker\">docker container</a> for\na <a href=\"http://d3js.org/\">D3 visualization</a>: it bundles up everything you need to\nmake and manage a production-quality graphic. Just keep your data in a Google\nSpreadsheet and manage your code Cloudstitch’s cloud-based editor, and we take\ncare of all the magic to deploy it, scale it, and clone it as many times as you\nlike.</p>\n\n<p>In fact, the best way to get started is to <a href=\"http://www.cloudstitch.com/d3-in-a-box\">clone an existing\nvisualization</a> and modify it. Here are\nsome examples from our starter-project gallery:</p>\n\n<p><span class=\"figcaption_hack\">Just click clone and you get your own container filled with everything you need\nfor a production-scale visualization.</span></p>\n\n<p>When we started building D3 in a Box, we didn’t realize project management and\ndeployment was a useful feature for visualizations. Our original idea was to\nadapt D3 visualizations so that non-coders could customize everything about them\nwith a spreadsheet.</p>\n\n<p>We won a <a href=\"http://knightfoundation.org/funding-initiatives/knight-prototype-fund/\">Prototype\nGrant</a>\nfrom the <a href=\"http://knightfoundation.org/\">Knight Foundation</a> to work on\nspreadsheet-powered news apps. We built a number of evergreen visualizations,\nlike electoral maps and sports brackets. And we enabled all sorts of elaborate\nspreadsheet-based control panels to modify their look and feel. Here’s just one\nworksheet of settings from a map widget:</p>\n\n<p><span class=\"figcaption_hack\">D3 in a Box was initially aimed at making D3 widgets hyper-customizable with\nspreadsheets.</span></p>\n\n<p>But the more we visited newsrooms and chatted with developers, the more we\nrealized this was missing the mark. All the visualizations we encountered fell\ninto roughly one of two categories. Standard go-tos like maps and scatterplots\nall had slick custom products built up around them, like\n<a href=\"http://www.mapbox.com/\">MapBox</a> or <a href=\"http://www.tableau.com/\">Tableau</a>, so why\nuse a spreadsheet? The other half were so custom and story-specific that\nprogramming, not pre-set spreadsheet options, was the better level of\nabstraction.</p>\n\n<p>But while we were getting schooled in newsroom programming, we noticed something\nthat was in dire need of improvement: visualization workflow involves a lot of\noverhead. You’ve got to manage data gathering, archive code, support reuse,\ntrain non-coders, host the darn thing, and often wrestle with an uncooperative\nCMS. One newsroom developer showed me all the custom apps he had built just to\ncrowdsource data collection across the newsroom. Another showed me a computer\nunder the desk with a post-it note that said “DO NOT TURN OFF.” It hosted all\nthe paper’s visualizations separately from machine running the CMS. And all this\nis time that’s not being spent on the actual story.</p>\n\n<p>So that’s what D3 in a Box fixes: all the overhead work you’d rather ignore so\nyou can get back to telling your visual story.</p>\n\n<p>Just like the Docker folks realized that there’s great value in packaging and\nencapsulating server configurations, we think that makes a lot of sense for\nvisualizations. D3 in a Box visualizations are self-contained, full-stack\nbundles that just work. If you’ve been spending time writing data collection\napp, just mail out a link your D3 Box’s Google Sheet instead. If you’re hosting\nvisualizations on a dusty machine under your desk, we’ll take the baton for you.\nIf your CMS is a grump, we integrate with it anyway.</p>\n\n<p>Here’s a short video tour of cloning and editing a Box:</p>\n\n<p><span class=\"figcaption_hack\">Video tour of cloning and editing a D3 in a Box visualization.</span></p>\n\n<p>Let us know what** **you think about this model — we’d really like to be of\nservice to the all the newsrooms out there. Feel free to leave a comment on this\npost or shoot me a note at ted@cloudstitch.com.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/data-visualization?source=post\">Data Visualization</a></li>\n  <li><a href=\"https://medium.com/tag/d3?source=post\">D3</a></li>\n  <li><a href=\"https://medium.com/tag/cloudstitch?source=post\">Cloudstitch</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>\n\n<h3 id=\"the-data-experience\"><a href=\"https://medium.com/the-data-experience?source=footer_card\">The Data Experience</a></h3>\n\n<p>Get immersed in the art and science of data</p>\n\n<p>I love this target group/application!</p>\n\n<p>Very very nice extension of the original spread-sheet backed website!</p>",
      "excerpt": "Cloudstitch launched a new product called D3 in a\nBox this week, and I wanted to write a\nfew notes about the motivation behind it. It’s one of those “what we found is\nnot what we expected” stories.",
      "languages": null,
      "categories": [],
      "tags": ["Hacks","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "Four Months On Lambda: The Good, the Bad, and the Intriguing",
      "permalink": "http://0.0.0.0:4321/2015/09/four-months-on-lambda-good-bad-intriguing",
      "link": "http://0.0.0.0:4321/2015/09/four-months-on-lambda-good-bad-intriguing",
      "date": "2015-09-10T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> has been running everything but its\ncore web-loop on AWS Lambda for a few months now, so the time felt right to look\nback and reflect on the experience of relying so heavily on a microservice\narchitecture.</p>\n\n<p>Like anything, it’s been a mix of tradeoffs, but the net results has been\npositive and I can tell microservices are going to become a big part of my\ntoolchain going forward. So here are the goods, bads, and eyebrow raises that\ncome to mind when I kick back and think about how it’s changed the way I write\nand deploy software</p>\n\n<p><em>[Aside: An important piece of context that might color my reactions below is\nthat I’m writing from the perspective of a one-man development team.]</em></p>\n\n<h3 id=\"the-good\"><strong>The Good</strong></h3>\n\n<h4 id=\"1-you-can-throw-away-your-worker-cluster\">1) <em>You can throw away your worker cluster.</em></h4>\n\n<p>One of the big promises of Lambda from my perspective is that I would get to\nkick all my worker machines and queues to the curb. And that turned out to be\ntrue, but only after quite a bit of heavy rewriting.</p>\n\n<p>Microservices relieve you of a lot of administrative burden once you get into\nthe swing of things. That might not matter to a large team, but when you’re\nrunning lean, a primary goal is to reduce the number of things you have to\nremember. For me, worker clusters always required a lot of overhead work and\ncontext switching in return for what I got out of them. Lambda lets you just\nwrite your core business logic and push that up to the cloud — no more machines\nor task queues.</p>\n\n<h4 id=\"2-function-level-isolation-lets-you-sleep-easy-at-night\">2) F<em>unction-level isolation let’s you sleep easy at night.</em></h4>\n\n<p>I’m not the most ardent unit tester. And that makes me worry when I push\nmodifications up to a giant, fully-connected, Rails-style codebase. Will that\nchange to a model class have inadvertent effects somewhere else? This worry only\ngets worse as the codebase grows.</p>\n\n<p><strong>Microservices force you to write code so that technical risk grows linearly,\nrather than exponentially, as you add new features.</strong> In fact it might even be\nbe sublinear: once a service is up and running correctly, you can essentially\nignore it completely. This actually has a big emotional impact: it defrags your\nworking memory, which lets you create and update code with greater confidence,\nand that makes for happier coding.</p>\n\n<h4 id=\"3-testing-becomes-easy-by-design\">3) Testing becomes easy by design</h4>\n\n<p>As a lazy unit tester, Lambda has seriously powered-up my testing game. Because\nyour code is organized into discrete deployable units that take JSON as input\nand produce JSON as output, <strong>it’s eminently testable.</strong> Just have a folder of\npaired inputs / expected-output JSON files. There is no environmental setup or\ntear down and no burden of mock classes everywhere. (I use an environment\nvariable to direct all side effects to our test cluster of machines, which\nmirrors the prod cluster).</p>\n\n<p>Look — I get that “Good Code” is also testable. But that kind of Good Code, for\nmost of us, is an ideal, not reality. So this observation really isn’t about\nsomething new becoming possible, but rather a positive externality of the way in\nwhich microservices constrain your software design.</p>\n\n<h3 id=\"the-bad\"><strong>The Bad</strong></h3>\n\n<h4 id=\"1-less-control-over-execution-environment\">1) Less control over execution environment</h4>\n\n<p>Lambda gives you a pretty rigid execution model+environment, and if your needs\ninclude something outside that environment, tough luck. This might not be a big\ndeal if you’re planning on casually using Lambda every once in a while, but\nyou’ll almost certainly have to make some architectural/design changes if you\nwant to port everything to it.</p>\n\n<p>Case in point: Lambda doesn’t let you predict where in the AWS cloud your\nfunction will execute. This means it doesn’t play well with Amazon’s Virtual\nPrivate Cloud policies. To grant Lambda access to Postgres, for instance,\nrequires opening network access to Amazon’s entire IP block. If this makes you\nuneasy, you’ll need to migrate your data into services into something that does\nplay well with Lambda, like DynamoDB, but that isn’t the right reason to be\nchoosing a data storage solution.</p>\n\n<h4 id=\"2-server-administration-is-replaced-with-workflow-coordination\">2) Server administration is replaced with workflow coordination</h4>\n\n<p>For reasons including timing, scaling, and semantically coherent encapsulation,\nyou’ll want to divide some large jobs into an army of lambda functions. For\nexample, <a href=\"http://www.cloudstitch.com/rsvp-hero\">RSVP Hero</a>, one of the template\nprojects at Cloudstitch, has a background task that requires heavy API traffic\nwith Facebook, Eventbrite, Meetup, Google Spreadsheets, and S3.</p>\n\n<p>A task of that size could be handled by a single binary on an EC2 instance, but\nit’s too much to pack into the timing requirements that Lambda imposes. As you\nmight imagine, this required me to build a workflow engine overtop of lambda,\nand that’s work I wouldn’t have to do if I just had a big server farm. (I’ve\n<a href=\"https://medium.com/@edwardbenson/managing-state-across-an-ant-swarm-of-aws-lambda-tasks-f225ff8564ae\">written about a piece of this workflow engine\nhere</a>.\nLet me know if you’d like to hear more).</p>\n\n<p>So while microservice architectures relieve you from the need to maintain large\nbackground-worker farms, they introduce the need to coordinate complex\nlong-running tasks. The end-result is more scalable, but it also contains more\nstartup cost than simply writing long-running procedural code.</p>\n\n<h3 id=\"the-intriguing\"><strong>The Intriguing</strong></h3>\n\n<p>True, practical service-oriented programming has been a holy-grail for decades.\n(Remember web services, WSDL, and UDDI? CORBA? Hell, even RPC.) We’re definitely\nstill not there, but I think we’re also a large step closer.</p>\n\n<p>**If the microservices prove worthwhile within a codebase, it’s only a matter of\ntime before they start being used between codebases. **Maybe I need to do facial\nrecognition, or video encoding, or convert a database table into a CSV file. If\nyou have a lambda function for me to call to save myself time, you won’t have to\ndo much convincing for me to consider using it and paying you a small toll.</p>\n\n<p>Ironically, this prospect is both democratizing and monopolizing. It opens up\nthe playing field for anyone to gain market share over certain vertical slices\nof computation. But it also furthers the reach of the “winner-take-all” economic\nmodel often seen in software ecosystems.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>Give Lambda, and other microservice platforms, a look! And leave a note in the\ncomments below with your reactions. This is a topic I suspect deserves a lot of\ndebate and discussion.</p>\n\n<ul>\n  <li><a href=\"https://medium.com/tag/cloud-computing?source=post\">Cloud Computing</a></li>\n  <li><a href=\"https://medium.com/tag/technology?source=post\">Technology</a></li>\n</ul>\n\n<p>By clapping more or less, you can signal to us which stories really stand out.</p>\n\n<h3 id=\"ted-benson\"><a href=\"https://medium.com/@edwardbenson\">Ted Benson</a></h3>\n\n<p>Machine Learning @ Instabase. Addicted to hot sauce.</p>",
      "excerpt": "Cloudstitch has been running everything but its\ncore web-loop on AWS Lambda for a few months now, so the time felt right to look\nback and reflect on the experience of relying so heavily on a microservice\narchitecture.",
      "languages": null,
      "categories": [],
      "tags": ["Thoughts","Microservices","Cloudstitch"]
    }
    
  

  
    ,
    {
      "title": "How I Hacked Amazon’s $5 WiFi Button to track Baby Data",
      "permalink": "http://0.0.0.0:4321/2015/08/how-i-hacked-amazons-dash-button-to-track-baby-data",
      "link": "http://0.0.0.0:4321/2015/08/how-i-hacked-amazons-dash-button-to-track-baby-data",
      "date": "2015-08-09T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><strong>UPDATE: I’m now selling ready-to-use buttons at\n**<a href=\"https://buttonjoy.com/\">Buttonjoy.com</a></strong>!**</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*uzhO9OTxp6L1YguIJiNFPQ.jpeg\" alt=\"\" />\n<span class=\"figcaption_hack\">My son Everest, the project’s quality assurance engineer. He subjected the\nbutton to a rigorous drool test.</span></p>\n\n<p>New parents are constantly learning how to care for their growing and changing\nbaby, but it can be a challenge because your baby can’t talk to you. Recording\ndata helps you find patterns — even obvious ones — that you won’t notice on your\nown because of sleep deprivation.How many times did the little guy wake up last\nnight? Seems like an easy question, but it’s not.</p>\n\n<p>My wife and I tried a few baby-tracker apps, but they tend to be single-purpose,\nwhile your baby’s needs keep changing. And using your smart phone at night\ndisrupts sleep.** I want a simple button I can stick to the wall and push to\nrecord poops today but wake-ups tomorrow. **Lucky for me, Amazon just started\nshipping their new <a href=\"http://www.amazon.com/b/?node=10667898011&amp;lo=digital-text\">Dash\nButtons</a>, which you\ncan transform into exactly that with just a few minutes.</p>\n\n<p>Dash Buttons are small, $5 plastic buttons with a battery and a WiFi connection\ninside. Amazon wants you to stick them to the insides of your cabinet doors and\nuse them to re-order products like diapers or toilet paper. Push the button, get\na new pack of diapers in the mail in two days.</p>\n\n<p>I’m going to show you how to hijack and use these buttons for just about\nanything you want. Here’s is a short video preview of the results. Read on to\nsee how you can build this yourself in just a few minutes.</p>\n\n<p><span class=\"figcaption_hack\">Video of the final result. You can wire up as many dash buttons as you like to\nrecord things around your house. The delay between button press and spreadsheet\nchange is due to the Dash hardware’s boot-up process.</span></p>\n\n<h3 id=\"heres-the-trick-listen-for-the-button-to-wake-up-and-connect-to-the-network\">Here’s the trick: listen for the button to wake up and connect to the network.</h3>\n\n<p>OK, so our goal is to detect when one of these Dash buttons is pushed and then\ndo something other than order more diapers on Amazon. The impressive hack would\nbe to rip open the button and reprogram it. But I’m a dad: I don’t have time for\nthat shi — <em>err.**.</em> doody.So we’ll take the lazy route: we’ll just write a\nsimple program that sniffs our wifi network for evidence that the button was\npushed and then records a data point when it hears some.</p>\n\n<p>It turns out Amazon gave us a very easy way to do this because they were so\nconcerned with power saving. Dash buttons are turned off most of the time to\npreserve the battery inside. They only turn on when you push them. *And that\nmeans <strong>they have to re-connect to your Wifi network every time they are\npushed</strong>. *That’s easy to detect.</p>\n\n<p>Internet devices don’t just connect to a Wifi network and start talking to\nAmazon: they introduce themselves to the local network first*. *This\nintroduction is done with something called an <a href=\"https://en.wikipedia.org/wiki/Address_Resolution_Protocol#ARP_probe\">ARP\nProbe</a>, and\nit’s essentially a safety check to make sure that the <a href=\"https://en.wikipedia.org/wiki/MAC_address\">MAC\naddress</a> the device is going to use\nas an identifier isn’t already being used by someone else.</p>\n\n<p><span class=\"figcaption_hack\">Every time you push a Dash button, it reconnects to the network, causing a\npredictable transmission called an ARP Probe we can detect and act upon.</span></p>\n\n<p>That’s great news for us: every time a Dash button is pushed, it powers up its\nradio and promptly transmits the message, “Hi! My name is [MAC Address]!”</p>\n\n<p>So, conceptually, problem solved. We just have to:</p>\n\n<ol>\n  <li>Prevent the button from actually ordering anything</li>\n  <li>Listen for Dash Button ARP probes, and</li>\n  <li>Translate those probes into spreadsheet updates</li>\n</ol>\n\n<h3 id=\"step-1-prevent-the-dash-button-from-actually-ordering-anything-sorry-amazon\">Step 1: Prevent the Dash Button from actually ordering anything (Sorry Amazon)</h3>\n\n<p>The first thing you need to do is configure your buttons to send messages when\nyou push them but not actually order anything. When you get a Dash button,\nAmazon gives you a list of setup instructions to get going. Just follow this\nlist of instructions, but don’t complete the finalstep — <em>don’t select the\nparticular product you want ordered.</em></p>\n\n<p>The last step for the Huggies button, for example, is to select which of several\nHuggies products you want. Just don’t answer this question and you won’t have to\nworry about actually buying anything.</p>\n\n<h3 id=\"step-2-detect-when-a-dash-button-is-pushed-by-sniffing-for-arp-probes\">Step 2: Detect when a Dash Button is pushed by sniffing for ARP Probes</h3>\n\n<p>OK. So now your button is sending messages to the network whenever it’s pushed.\nThe next step is to sniff the WiFi network for these messages. Remember, we’re\nlooking for something called an ARP Probe. To do that, we’re going to write a\nlittle Python program using a library called\n<a href=\"http://www.secdev.org/projects/scapy/\">Scapy</a>. Just copy and paste the\nfollowing code:</p>\n\n<p>With that program running — here’s the low tech part — pick up a button and\npress it. You’ll see a message appear after a few seconds (the buttons take a\nwhile to power on!). That’s the MAC address that uniquely identifies that\nbutton.</p>\n\n<p><span class=\"figcaption_hack\">Every time you push the Dash button, it wakes up and issues an ARP request. By\nwatching sniffer output of these requests in real time, you can learn each\nbutton’s MAC address.</span></p>\n\n<p>Now that we know the MAC addresses, we’re going to hard-code them into our\npython program (remember, we’re in lazy dad mode here..). The code and screen\nshots below are for my buttons. Your addresses will look different.</p>\n\n<p>Here’s the modified code:</p>\n\n<p>And here’s the console output when we push the buttons while this program is\nrunning:</p>\n\n<p><span class=\"figcaption_hack\">We’re nearly finished! Our code identifies each button push correctly. Now we\njust have to record a data point in response.</span></p>\n\n<h3 id=\"step-3-record-the-button-push-data-to-a-google-spreadsheet\">Step 3: Record the button push data to a Google Spreadsheet</h3>\n\n<p>Now all we have to do is record data every time a button is pushed. To do that,\nI’ll use a <a href=\"http://www.cloudstitch.com/magic-form\">Magic Form</a>, a tool my\nstartup <a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> launched last week that lets\nyou send data from anywhere to a Google Sheet.</p>\n\n<p><span class=\"figcaption_hack\"><a href=\"http://www.cloudstitch.com/magic-form\">Magic Forms</a> are great when you need a\nquick and easy way to save data to the cloud.</span></p>\n\n<p>Just visit Cloudstitch, create a Magic Form, and you’ll be given a URL that add\nrows to your spreadsheet when you post form data to it.</p>\n\n<p>So all the pieces are in place now: before we had a bit of code that prints a\nmessage every time a Dash button is pushed. Now we just add a few more lines of\ncode to also send data to our Magic Form. Rather than paste in the whole updated\nexample again, I’ll just <a href=\"https://gist.github.com/eob/79f481c68cf4fbb110e7\">link to the full\nversion</a> and instead show you\nthe part that records a Poopy Diaper entry in our Magic Form. Right after\nprinting “Pushed Huggies” to the screen, I added this code, which sends two\nfields, a** **Timestamp and the message “Poopy Diaper” to the form’s URL.</p>\n\n<p>That’s it! Run the program again, push the buttons, and you’ll see the rows\nadded to your spreadsheet as you do!</p>\n\n<p><span class=\"figcaption_hack\">I think it’s clear from the timestamps I need to go to bed.</span></p>\n\n<h3 id=\"conclusion-the-internet-of-things-is-already-here\">Conclusion: The Internet of Things is already here.</h3>\n\n<p>A lot of people made fun of Dash Buttons when Amazon <a href=\"http://www.usatoday.com/story/tech/2015/03/31/amazon-dash-ordering-button/70747342/\">launched them on the day\nbefore April Fool’s\nDay</a>.\nBut regardless of what you think about Dash as a consumer product, it’s an\nundeniably compelling prototype of what the Internet of Things is going to look\nlike.</p>\n\n<p>Using the instructions above, I bet you can wire up a Dash button like I did in\nunder ten minutes. That’s pretty incredible when you consider the buttons were\nnot supposed to be used this way. Actually — try it out and <a href=\"mailto:ted@cloudstitch.io\">send me an\nemail</a> with your time. I’ll curate the common hurdles\nand zany ideas or photos.</p>\n\n<p>We’re working on a lot of zany projects like this at\n<a href=\"http://www.cloudstitch.com/\">Cloudstitch</a>, by the way. Useful, simple,\nself-contained projects built on top of the things in your life you’re already\nusing, like spreadsheets and buttons. <strong>On that note, we might turn this Dash\nbutton hack into a 1-click project for you to use. If you’re interested in that,\nlet us know by **<a href=\"http://www.cloudstitch.com/internet-of-things-hacker\">signing up for our “Internet of Things Hacker” mailing\nlist</a></strong>. We’ll use it to\ncurate and announce fun projects like this.**</p>",
      "excerpt": "UPDATE: I’m now selling ready-to-use buttons at\n**Buttonjoy.com!**",
      "languages": null,
      "categories": [],
      "tags": ["Buttonjoy"]
    }
    
  

  
    ,
    {
      "title": "Four Reasons Startup Founders Should Go to Hackathons (It’s Not What I Originally Thought.)",
      "permalink": "http://0.0.0.0:4321/2015/07/founders-at-hackathons",
      "link": "http://0.0.0.0:4321/2015/07/founders-at-hackathons",
      "date": "2015-07-28T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*WyLb0pyaa2ZZvEZVu-tIIQ.jpeg\" alt=\"\" />\n<span class=\"figcaption_hack\">Our team at CODEX Hackathon: a museum curator, a writer-translator, MIT grad\nstudent and a start-up founder.</span></p>\n\n<p>As a startup founder, you’re constantly making decisions about how to spend your\nscarce time. Weekend hackathons can be a hard sell from this perspective: two\nwhole days that are seemingly neither on your company’s critical path nor a\nbreak from sitting at a computer.</p>\n\n<p>But after spending a weekend in late June at the <a href=\"http://codexhackathon.com/\">CODEX\nHackathon</a> in San Francisco, I think I’m a convert.\nHackathons can be a wonderful way for founders to re-kindle their creativity and\ngain a lot of unexpected professional insights too.</p>\n\n<p>CODEX was weekend-long event dedicated to hacking literature, which is already\ncool and creative to start. But what really won me over was that the organizers\nused the sponsorship funding they raised to fly in interesting participants\nrather than simply offer a large cash prize pot. As a result, the crowd was\nvaried: MIT researchers, language translators, museum curators, Google\nengineers.</p>\n\n<p>In my idealized dreams, I* *thought CODEX would be an opportunity for my startup\n<a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> to find eager users of our product\n(and it was — I’ll post about the cool things we built another time). Our\ncompany, which is in the current Y Combinator batch, helps developers power\nwebsites with Google Spreadsheets instead of databases, which is a perfect fit\nfor prototypes and hackathons.</p>\n\n<p>So our plan, looking forward to the event, was all about *build build build. *We\nprepared some spreadsheet-powered <a href=\"http://www.cloudstitch.com/project-templates/recovering-the-classics-api/api\">literary\nAPIs</a>\nand example starter projects, like an <a href=\"http://apps.cloudstitch.io/project-templates/book-cover-wall/\">infinite wall of\nbooks</a> and a\n<a href=\"http://www.cloudstitch.com/project-templates/featured-guests\">conference attendee\nwidget</a> in hopes\nthey would serve as useful launching pads.</p>\n\n<p>But looking back at the event afterwards, was really surprised me was how much I\npersonally got out of the experience as a founder*. *So here are four reasons\nwhy you, as a founder, should consider going to a hackathon.</p>\n\n<h3 id=\"1-youll-be-reminded-creative-goals-not-technology-details-are-whats\">1. You’ll be reminded creative goals, not technology details, are what’s</h3>\n<p>important</p>\n\n<p>Each company has their brand of hammer and spends time finding people who have\nthe right nails to hit. And a hackathon reminds you that this is a very narrow\nmentality.</p>\n\n<p>Despite being part of the kickoff-pitch lineup of talks in the beginning, I\ncouldn’t help but see a bit of comedy in our situation. We wanted everyone to\nuse Cloudstitch to power their prototype’s data with spreadsheets. MailChimp\nwanted everyone’s prototype to send mail to people. Dropbox wanted people to use\nthe Dropbox API. I don’t mean this in a cynical way: our job as sponsors is to\nprovide an arsenal of tools and support for anyone who wants to use them. And we\nall did a great job of that, I think.</p>\n\n<p>But making the rounds and chatting up people to see if you can help is a\npowerful reminder that, at heart, creativity, not tooling, is the powerful\ndriver of the innovation. The goals you admire while making the rounds have\nnothing to do with implementation. “I want to help book worms find love based on\ntheir reading list” “I want to help people finish the books they’ve started” “I\nwant to connect people to the stories that take place in their own cities”</p>\n\n<p>If you’ve fallen into the trap of clutching your hammer and looking for nails—\nand I certainly have — a hackathon is a vitamin shot back into that creative\nspace where technology is simply a detail in service of creative goals.</p>\n\n<h3 id=\"2-youll-have-a-chance-to-use-your-product-in-an-unexpected-way\">2. You’ll have a chance to use your product in an unexpected way</h3>\n\n<p>Building on the importance-of-creativity thought, you can almost be guaranteed\nthat the way you thought people would want to use your project will not be how\nthey actually use it. This is probably somewhat true of products in general, but\nto get to see it in the condensed space of a weekend is refreshing and\neye-opening as a founder. At the very least, you will leave with the excited\nfeeling of a parent seeing their child do something they never directly taught\nthem.</p>\n\n<p>Take the team I spent the weekend hacking with: <a href=\"https://twitter.com/digitalanika\">Anika\nGupta</a> of MIT, writer-translator <a href=\"https://twitter.com/arendse\">Arendse\nLund</a>, and Eric Gardner of Getty. We built an eBook\nthat layered rich ambient experience onto plain text: subtle background images\nand maps behind the text; ambient music and sound effects; photos of relevant\nplaces in the margin. All of it was meant to subtly enrich the feeling of story\nimmersion without going too far and making it feel like a magazine. <a href=\"http://egardner.github.io/Baskervilles/chapters/ch05.html\">You can\nread a demo of the Hound of the Baskervilles we made\nhere</a>.</p>\n\n<p><span class=\"figcaption_hack\">I never would have thought our Spreadsheet-based development platform would have\nrelevance to eBook authoring.</span></p>\n\n<p>Now all this was powered by nothing more than the raw text of the book combined\nwith a very clever and simple spreadsheet. In one column you paste a sentence in\nthe book, and in the next column you paste what kind of rich media accompaniment\nthat sentence should queue up for the reader. But if you asked me the week\nbefore if Cloudstitch had relevance to eBook authoring, I probably would have\nquickly said, “No — we’re really focused on people who have structured data to\npublish”.</p>\n\n<h3 id=\"3-youll-get-to-see-many-different-pitching-and-demo-styles\">3. You’ll get to see many different pitching and demo styles</h3>\n\n<p>I think the pitches at the end of a hackathon are far more useful to observe\nthan those at a pitch competition. First of all, hackathons presentations are\ncloser to what a founder does than a pitch competition because there’s sweat and\nlove involved. You’re excited about an idea, have worked hard to prove it out,\nand now you want to make the case to others in an environment crowded with\nothers doing the same thing.</p>\n\n<p>Secondly, hackathon pitches are essentially marketing pitches, whereas pitch\ncompetition pitches are heavily business-plan focused. If you subscribe to the\nDave McClure school of thought, you’ll find way more utility watching\nmarketing-style pitches.</p>\n\n<p>In the final hour or two of any hackathon, you’ll see a range of presentations.\nSlick pitches based entirely on design mockups. Data-driven pitches that argue\nfor the feasibility of a product. Demo-based pitches. Slide-driven pitches.\nNarrative-driven pitches. Demos that crash. Demos that leave eveyone with tears\nof laughter. And there is guaranteed to be someone trying to sound like Steve\nJobs, with intonations and pauss (identifying this person definitely be\nincorporated into some sort of hackathon drinking game).</p>\n\n<p>You probably fall into one of the pitch categories above. It is important that\nyou occasionally get the chance to see many different pitch styles together so\nthat you can reflect on your own style.</p>\n\n<h3 id=\"4-your-memory-of-the-event-doubles-as-reminder-of-how-important-it-is-to-finish\">4. Your memory of the event doubles as reminder of how important it is to finish</h3>\n<p>your product and ship it</p>\n\n<p>The group emotion of a hackathon project roughly follows this arc:</p>\n\n<ul>\n  <li>**25% Milepost: **“Okay, it’s becoming clear we need to limit our scope…”</li>\n  <li>**50% Milepost: **“This is really turning into a cool prototype.. now if only we\ncan actually get it to work”</li>\n  <li>**75% Milepost: **“Wow, just think if we followed through on this! So many\npeople could use it”</li>\n  <li><strong>While saying goodbye:</strong> “So cool to meet you guys — let’s really stay in touch\nand see if we can work on this!”</li>\n  <li><strong>Two weeks later</strong>: “Gosh…if only there was time in the day to finish that up.”</li>\n</ul>\n\n<p>And that’s just fine. Most hackathon projects are destined to be Tibetan sand\npaintings. Beautiful collaborations that arise through hard work and then, in an\ninstant, are left for the wind.</p>\n\n<p><span class=\"figcaption_hack\">Most hackathon projects are destined to be Tibetan sand paintings.</span></p>\n\n<p>*But your startup must not be a sand painting. *So let the memory of “gosh, if\nonly we had time to finish that hackathon project” be a powerful reminder that\nit’s the things we ship — not build — that create a lasting company. Your\nprofessional life as a founder is the sum of how you spend each week, and you\nmust make sure that those weeks are spent not just starting things, but\nfinishing them too.</p>",
      "excerpt": "Our team at CODEX Hackathon: a museum curator, a writer-translator, MIT grad\nstudent and a start-up founder.",
      "languages": null,
      "categories": [],
      "tags": ["Cloudstitch","Startups"]
    }
    
  

  
    ,
    {
      "title": "Managing State across an Ant Swarm of AWS Lambda Tasks",
      "permalink": "http://0.0.0.0:4321/2015/07/managing-state-across-lambda",
      "link": "http://0.0.0.0:4321/2015/07/managing-state-across-lambda",
      "date": "2015-07-13T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Background tasks are a critical component of web applications. These tasks often\nperform work that takes too long to place inside the request-response loop of\nthe app server. For example, many of our tasks at\n<a href=\"http://www.cloudstitch.com/\">Cloudstitch</a> involve synchronizing data between\nthird-party services like Eventbrite and Google Spreadsheets.</p>\n\n<p>The typical background task setup most of us are used to is what you might call\nthe <strong>Big Fat Worker Machine Model</strong>. Whole computers, maybe EC2 instances,\nrunning whatever you want. In this setup, handling a background task is as\nsimple as writing a program that takes and input and saves an output.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*5YwojmmyjZ-AHvbIRvZw6w.png\" alt=\"\" />\n<span class=\"figcaption_hack\">The <strong>Big Fat Worker</strong> model of background tasks.</span></p>\n\n<p>But with the growing microservice trend, this worker-machine model no works. The\nweb of background tasks on AWS Lambda look more like a swarm of ants each\ncontributing a bit of labor to a piece of meat dropped on the ground. Some are\nworking in parallel. Others show up later to finish the job off. And messaging\nbetween workers isn’t always explicit and linear: services like AWS Lambda\nencourage execution to be triggered implicitly, via S3 and DynamoDB events,\nrather than explicitly via function calls or queue pushes.</p>\n\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*4eeQrojcm8paSeLiHdEoOQ.png\" alt=\"\" />\n<span class=\"figcaption_hack\">A single background task accomplished with an <strong>Ant Swarm</strong> of workers.</span></p>\n\n<p>Managing state across all the workers in that ant swarm can be a challenge:</p>\n\n<ul>\n  <li>The work is split across many, possibly parallel workers</li>\n  <li>Some execution, invocation, and restart control is ceded to the platform</li>\n  <li>No global scope exists to monitor the state of the entire ant swarm operation at\nonce</li>\n</ul>\n\n<p>I’ve tried a lot of different approaches to handling this problem while building\n<a href=\"http://www.cloudstitch.com/\">Cloudstitch</a>, and while I don’t have a silver\nbullet solution, I have settled on a pattern that seems to be working well\nenough to share. That approach is to **coordinate background tasks with\nlog-append job records in S3 (or DynamoDB). **What follows is targeted at the\nAWS ecosystem but easily adaptable to other microservice infrastructures.</p>\n\n<p>Here’s how it works. Each background task stores its state in a a job file. This\nfile is <em>logically</em> one JSON object, but <em>physically</em> a log structure of\nrefinements to some initiating object. Each <strong>job-n</strong> is an overwriting\nrefinement to <strong>job-{n-1}</strong>. That means the task is initially represented by a\nsingle physical JSON object uploaded to S3. As microservices contribute work to\nthe task, they modify the state of the task by creating new files.</p>\n\n<p><span class=\"figcaption_hack\">Your job metadata is logically one file, but physically a time-ordered log\nstructure in S3.</span></p>\n\n<p>This strategy enables easy leveraging of the events S3 can throw to Lambda.\n<strong>Every time a refinement is appended to the log, it triggers a re-evaluation of\nthe overall job status. **That’s done by a router function which acts as the ant\nqueen, so to speak, to keep an eye on the swarm of ants as they report on their\nstatus. When **job-n.json</strong> is uploaded, the router is triggered, downloads and\nmerges **job-{1:n}.json **into a single state object, and decides what to do\nnext.</p>\n\n<p>The lifecycle ends up looking like a back and forth between S3 events, the\nrouter function, and worker functions:</p>\n\n<ul>\n  <li><strong>Creation. **Uploading an initial **job.json</strong> file to S3 kicks off the router,\nwhich begins issuing lambda calls (or pushing log refinements which, passively\ntrigger more work).</li>\n  <li><strong>Ant Swarm.</strong> Each piece work done finishes with a log append in S3, triggering\nthe router to take a look and possibly request more work. For example, if all 10\nof 10 web scraping sub-tasks are complete, the router might decide to initiate\nthe next phase of labor.</li>\n  <li><strong>Completion</strong>. Eventually, a log append is pushed that results in the logical\njob file achieving some completion state. In this case the router finishes the\njob off — notifying callers, saving to a database, whatever is appropriate.</li>\n</ul>\n\n<p>Overall, I’m pretty pleased with the setup. It’s a bit more work up front to\norganize a cascade of tasks this way, and there’s admittedly a lot bookkeeping\noverhead if your sub-tasks are small, but it scales wonderfully.</p>\n\n<p><strong>Here’s an NPM module called **<a href=\"https://www.npmjs.com/package/pile-on\">Pile\nOn</a></strong> I’ve created to help manage JSON\nobjects and arrays of this access pattern.** This just helps with the file\nmanagement described above. For example, you can:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>// Create a new Job File\nPileon.create(S3Bucket, 'job.json', {state: 'running', x: 1});\n\n// Append/overwrite the Job File\nPileon.append(S3Bucket, 'job.json', {state: 'finished', y: 3});\n\n// Fetch a promise for the merged file\n// {state: finished, x: 1, y:3}\nvar promise = Pileon.readObject(S3Bucket, 'job.json');\n</code></pre></div></div>\n\n<p>I’ve got a few more helper libraries I’ll be packaging down the road to handle\nthe execution management of jobs managed this way. In the meantime I’d love your\nthoughts. It’s a wild world of experimentation out there in microservice land\nand I know there are a lot differing strategies.</p>",
      "excerpt": "Background tasks are a critical component of web applications. These tasks often\nperform work that takes too long to place inside the request-response loop of\nthe app server. For example, many of our tasks at\nCloudstitch involve synchronizing data between\nthird-party services like Eventbrite and Google Spreadsheets.",
      "languages": null,
      "categories": [],
      "tags": ["Cloudstitch","Microservices"]
    }
    
  

  
    ,
    {
      "title": "Adam Marcus on Remote Labor",
      "permalink": "http://0.0.0.0:4321/2015/02/adam-marcus-on-remote-labor",
      "link": "http://0.0.0.0:4321/2015/02/adam-marcus-on-remote-labor",
      "date": "2015-02-10T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>A few years ago, <a href=\"http://marcua.net/\">Adam Marcus</a> gave a great lecture on all things related to remote labor over the web. Friends on twitter <a href=\"https://twitter.com/arthegall/status/565201471969714176\">just brought up the talk</a> in reference to an article on the <a href=\"https://twitter.com/arthegall/status/565201471969714176\">sharing economy by Robert Reich</a>, and I realized that the audio recording of it had fallen off the web.</p>\n\n<p>So here it is:</p>\n\n<p><b>Audio from the talk</b>: \n<audio controls=\"\">\n  <source src=\"http://people.csail.mit.edu/eob/files/audio/working-remotely-mit-6S194.mp3\" type=\"audio/mp3\" />\n  Your browser does not support the audio tag!\n</audio>\n  (<a href=\"http://people.csail.mit.edu/eob/files/audio/working-remotely-mit-6S194.mp3\">download link</a>)\n</p>",
      "excerpt": "A few years ago, Adam Marcus gave a great lecture on all things related to remote labor over the web. Friends on twitter just brought up the talk in reference to an article on the sharing economy by Robert Reich, and I realized that the audio recording of it had fallen off the web.",
      "languages": null,
      "categories": [],
      "tags": ["research","MIT"]
    }
    
  

  
    ,
    {
      "title": "PhD Defense: Creating Rich Designs and Read-Write-Compute Pages with a Relational Layer for Web Content",
      "permalink": "http://0.0.0.0:4321/2014/08/phd-defense",
      "link": "http://0.0.0.0:4321/2014/08/phd-defense",
      "date": "2014-08-05T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Proud to finally have this flyer going out to the MIT email lists. If you are in Cambridge, please do attend!</p>\n\n<p><strong>Thesis Defense:</strong> Creating Rich Designs and Read-Write-Compute Pages with a Relational Layer for Web Content</p>\n\n<p><strong>Speaker:</strong> Ted Benson<br />\n<strong>Speaker Affiliation:</strong> MIT CSAIL<br />\n<strong>Host:</strong> David Karger<br /></p>\n\n<p><strong>Date:</strong> Thursday, August 07, 2014<br />\n<strong>Time:</strong>  3:00 PM to 4:00 PM<br />\n<strong>Refreshments:</strong>  2:45 PM<br />\n<strong>Location:</strong> 32-G449 (Patil/Kiva) (32 Vassar Street)<br /></p>\n\n<p><strong>Committee:</strong> David Karger (MIT CSAIL), Rob Miller (MIT CSAIL), Tim Berners-Lee (MIT CSAIL)<br /></p>\n\n<p>When we browse the web, we experience rich designs and data interactivity. But creating such web sites requires great engineering effort. As a result, novices are largely limited to content management systems like WordPress and experts rely on complex software toolchains like Ruby on Rails. My work shows that adding a declarative, relational layer to the web stack reduces the complexity of authoring and reusing web content by providing a way to reason about how structures on the web fit together and what should happen when they change. I apply this framework to the two goals of design reuse and content management. For design reuse, it enables new and more usable authoring and deployment techniques. For content management, it enables the authoring of read-write-compute applications without any procedural programming at all. User studies show that HTML novices can learn to apply this framework in only a few minutes, increasing their creative capacity beyond read-only rich text. I will show demonstrations of software created using this approach and discuss implications for web authoring going forward.</p>\n\n<p><strong>Relevant URL:</strong>\nFor more information please contact: Ted Benson, <a href=\"mailto:eob@csail.mit.edu\">eob@csail.mit.edu</a></p>",
      "excerpt": "Proud to finally have this flyer going out to the MIT email lists. If you are in Cambridge, please do attend!",
      "languages": null,
      "categories": [],
      "tags": ["research","MIT","personal"]
    }
    
  

  
    ,
    {
      "title": "Magical Source Code Highlighting",
      "permalink": "http://0.0.0.0:4321/2014/08/magical-source-code-highlighting",
      "link": "http://0.0.0.0:4321/2014/08/magical-source-code-highlighting",
      "date": "2014-08-02T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>This is perhaps the coolest command line trick I have learned in recent memory.</p>\n\n<p>Any time I need to syntax highlight a snippet of HTML to insert on a presentation slide, I simply copy it to the clipboard, run <code class=\"highlighter-rouge\">highlight-html</code> on the command line, and voila! The clipboard now contains properly syntax highlighted code ready for pasting.</p>\n\n<p>Here’s how to set your computer up so you can do it too.</p>\n\n<p>First, install the <code class=\"highlighter-rouge\">highlight</code> package for brew</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>brew install highlight\n</code></pre></div></div>\n\n<p>Then create executable shell scripts located in <code class=\"highlighter-rouge\">$PATH</code> of the following form:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pbpaste | highlight --syntax=html -O rtf | pbcopy\n</code></pre></div></div>\n\n<p>This one is named <code class=\"highlighter-rouge\">highlight-html</code>. I’ve got others for other languages (CSS, Javascript, Python, etc).</p>\n\n<p>That’s it.</p>\n\n<p>I suspect this is the beginning of a beautiful relationship between <code class=\"highlighter-rouge\">pbpaste</code> and <code class=\"highlighter-rouge\">pbcopy</code> and my shell scripting.</p>",
      "excerpt": "This is perhaps the coolest command line trick I have learned in recent memory.",
      "languages": null,
      "categories": [],
      "tags": ["programming","html"]
    }
    
  

  
    ,
    {
      "title": "Data quickie: Wordpress themes are getting more complicated over time",
      "permalink": "http://0.0.0.0:4321/2013/10/wordpress-themes-are-getting-more-complicated-over-time",
      "link": "http://0.0.0.0:4321/2013/10/wordpress-themes-are-getting-more-complicated-over-time",
      "date": "2013-10-22T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Here’s a quickie for you. The other day I scraped all the themes from\n<a href=\"http://www.wordpress.org\">WordPress.org</a> (615 in total, or at least that’s what my\nscript pulled down) and then plotted how complex the theme was based on when it\nwas created.</p>\n\n<p>I used two ways to measure complexity: how many files were in the theme package\nand how many bytes were in the <strong>non-image</strong> files inside the theme package.\nThese two metrics are somewhat related (we would expect the number of bytes to\nincrease as the number of files increases) but also tell slightly different\nstories.</p>\n\n<h2 id=\"number-of-files-in-a-wordpress-theme-over-time\">Number of files in a WordPress theme over time</h2>\n\n<p><img src=\"/experiments/wordpress-theme-complexity/year-versus-num-files.png\" alt=\"Time versus Number of Files\" title=\"Time versus Number of Files\" /></p>\n\n<h2 id=\"number-of-bytes-in-non-image-theme-files-over-time\">Number of bytes in <em>non-image</em> theme files over time</h2>\n\n<p>Not counting bytes in image files is important because we should expect the\nquality (and thus file size) of images to increase over time.</p>\n\n<p><img src=\"/experiments/wordpress-theme-complexity/year-versus-bytes-no-images.png\" alt=\"Time versus Bytes\" title=\"Time versus Bytes\" /></p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Writing a theme is getting harder over time, and I suspect that this\ncould be said of web sites in general. We need to work to make sure the\ntools for web authoring improve at the same rate as the level of\nsophistication expected by web authors and surfers.</p>\n\n<p>Here are the data files:\n<a href=\"/experiments/wordpress-theme-complexity/YearVersusNumFiles.csv\">YearVersusNumberFiles.csv</a>\nand\n<a href=\"/experiments/wordpress-theme-complexity/YearVersusBytesNoImages.csv\">YearVersusBytesNoImages.csv</a>.\nAnd here is the R Script I used to create the figures:\n<a href=\"/experiments/wordpress-theme-complexity/plot-data-versus.r\">plot-data-versus.r</a></p>",
      "excerpt": "Here’s a quickie for you. The other day I scraped all the themes from\nWordPress.org (615 in total, or at least that’s what my\nscript pulled down) and then plotted how complex the theme was based on when it\nwas created.",
      "languages": null,
      "categories": [],
      "tags": ["data analysis","the web"]
    }
    
  

  
    ,
    {
      "title": "Flexible data formats are used more flexibly",
      "permalink": "http://0.0.0.0:4321/2013/07/flexible-data-formats-are-used-more-flexibly",
      "link": "http://0.0.0.0:4321/2013/07/flexible-data-formats-are-used-more-flexibly",
      "date": "2013-07-07T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<!---\nYou might say there are roughly two schools of thought when it comes to\ninformation modeling and storage: *schema-based storage* and *self-describing\nstorage*.\n\nIn schema-based storage, all items of a given type must conform to an external\nschema that describes the way each item is allowed to look. In a database, this\nschema is your table definitions. In a spreadsheet, it is your column headers.\nSometimes you have to define the schema before you start entering items\n(database), other times you can easily edit the schema as you go (spreadsheet).\nBut in both cases, changing the schema applies to all items: if you add a \"Pet\nName\" to a customer relations spreadsheet, all customers now have that field.\n\nIn self-describing storage, no global schema needs to exist. Instead, each item\nstores its own schema. This means that a lot of information is repeated,\ncompared to schema-based storage, but it also means that each item can be\nunderstood without any other knowledge. It also means each item can have unique\ncustomizations: that \"Pet Name\" property can exist on just one customer record\nwithout having to add it to all records.\n-->\n\n<p>Proponents of self-describing storage cite this ability to uniquely tailor the\ninformation stored to each item as one of the style’s big benefits. Adding\n“one-off” properties to items, they claim, is a natural need of information\nstorage.</p>\n\n<p>But is it?</p>\n\n<p>Well, here’s a short analysis I did the other morning that provides some\nevidence to help answer that question. I took about 1,800 datasets that I\nscraped from visualizations on the web and looked that property coverage for\neach property in the dataset. Let’s define the <em>property coverage</em> for property\nP as the number of items that have property P divided by the total number of\nitems in the dataset. Property coverage of 1 means every item has the property.\nProperty coverage of 0.5 means half of the items do.</p>\n\n<p>Some of the datasets for these visualizations were authored in JSON, a self\ndescribing format. Others were authored using Google Spreadsheets, a\nschema-based format. If customizing items with one-off properties is truly one\nof the empirical benefits (not just claimed benefits) of self-describing\nstorage, then we should expect to see <em>more</em> low-coverage properties in the\nJSON datasets.</p>\n\n<p>And here is the graph with the results:</p>\n\n<p><img style=\"width: 593px; border: none; -webkit-box-shadow: none; -webkit-border-radius: 0;\" src=\"/images/posts/property-coverage.png\" alt=\"Property Coverage\" /></p>\n\n<p>It’s nicely split into three general segments: authors who use JSON tend to\ncreate more properties with 0-50% coverage. Between 50% and 70% it’s a wash.\nAnd spreadsheet authors tend to use more properties with between 70% and 100%\ncoverage.</p>\n\n<p>While you can’t make any strong claims from this data, it does suggest that\none-off (low coverage) properties are actually used in datasets in the wild.\nAnd if this chart generalizes, then users of self-describing formats make use\nof low coverage properties more often than users of schema-based formats,\nsupporting the idea that this is one of the benefits to the approach in\npractice, as well as theory.</p>",
      "excerpt": "&lt;!—\nYou might say there are roughly two schools of thought when it comes to\ninformation modeling and storage: schema-based storage and self-describing\nstorage.",
      "languages": null,
      "categories": [],
      "tags": ["data analysis","data visualization"]
    }
    
  

  
    ,
    {
      "title": "Eval in Template Languages Considered Harmful",
      "permalink": "http://0.0.0.0:4321/2013/02/eval-in-template-languages",
      "link": "http://0.0.0.0:4321/2013/02/eval-in-template-languages",
      "date": "2013-02-02T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I’m of the opinion that supporting the <code class=\"highlighter-rouge\">eval</code> statement in template languages\nis a Bad Idea, precisely because it’s such a useful outlet to have. How many of\nus have been delighted to write a short script in PHP, only to later bemoan the\nspaghetti code that ultimately results over the lifetime of the project.</p>\n\n<p>A site called Egghead.io recently released a series of videos about Angular.JS,\na really cool Javascript framework. They haven’t even gotten one minute into\nthe first video (55 seconds, actually!) before they issue this disclaimer about\nAngular’s templates:</p>\n\n<blockquote>\n  <p>Many expressions can be evaluated in here. Now there’s a lot of things you\nshouldn’t do in here [inside the template’s <code class=\"highlighter-rouge\">eval</code> affordance]. You should\nkeep this logic to a minimum. Because this is your view and presentation. But\nthere’s really quite a lot of things you can do in there.</p>\n</blockquote>\n\n<p>Careful planning of architectural constraints is a bit like user interface\ndesign. Like user interfaces, development frameworks offer affordances (the\ncommands they support), require learning (tiptoeing around the framework’s\nparticular constraints), and benefit from homogenization.</p>\n\n<p>But when you provide support for <code class=\"highlighter-rouge\">eval</code>, it creates an easy escape hatch that\nprevents homogenization. If something doesn’t fit into your framework well,\nrather than fix the problem (or decide it isn’t important), one can just jump\nthrough the <code class=\"highlighter-rouge\">eval</code> escape hatch, skirting the framework’s architectural choices\nand inlining arbitrary Javascript code.</p>\n\n<p>This opinion might sound extreme, but I think it is called for when you\nconsider that good framework designers strive to provide <em>guarantees</em> about the\nbehavior and performance of code using their framework. This requires reasoning\nabout code, and reasoning about code requires a declarative view of computation\nwhich <code class=\"highlighter-rouge\">eval</code> destroys. It’s the difference between a toolbelt, like\n<code class=\"highlighter-rouge\">backbone.js</code> and what you might call a Proper Architecture, like <code class=\"highlighter-rouge\">MapReduce</code>.</p>",
      "excerpt": "I’m of the opinion that supporting the eval statement in template languages\nis a Bad Idea, precisely because it’s such a useful outlet to have. How many of\nus have been delighted to write a short script in PHP, only to later bemoan the\nspaghetti code that ultimately results over the lifetime of the project.",
      "languages": null,
      "categories": [],
      "tags": ["the web"]
    }
    
  

  
    ,
    {
      "title": "Celebrity as Parable",
      "permalink": "http://0.0.0.0:4321/2013/12/celebrity-as-parable",
      "link": "http://0.0.0.0:4321/2013/12/celebrity-as-parable",
      "date": "2013-01-22T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p style=\"font-size: 0.8em\"><i> (Reaction to <a href=\"http://www.entresting.com/blog/2012/11/13/im-31-entrepreneur-where-is-my-senior-home/\">this\nblog post</a>, which got some time on Hacker News a while back.)</i></p>\n\n<p>Occasionally, our habit of fixating on celebrity leaves tech hopefuls <a href=\"http://www.entresting.com/blog/2012/11/13/im-31-entrepreneur-where-is-my-senior-home/\">feeling\nlost</a>.\nIt can be hard to watch other men and women attain riches while thinking, “I,\ntoo, have similar skills; what did I do wrong?”</p>\n\n<p>You might have similar skills, but rocks rolling down from the top of a\nmountain end up in very different places depending on the bumps they hit on the\nway down. Just because you’re similarly shaped doesn’t mean you’ll end up with\nthe same outcome.</p>\n\n<p>I’m not claiming that there is nothing special about Steve Jobs or Bill Gates,\njust that these men are not <em>singularly</em> gifted. Each of our lives unfolds as\ncollaboration between ourselves and those around us.  If we’re to believe\n<a href=\"http://www.amazon.com/Outliers-Story-Success-Malcolm-Gladwell/dp/0316017930?ie=UTF8&amp;tag=httpwwwedward-20\">Gladwell’s message in\nOutliers</a>,\nthe mountain has as much, if not more, impact on trajectory as the shape of the\nrock.</p>\n\n<p>When celebrating the Houstons and Zuckerbergs of the world, we should\ncongratulate the achievements of the person, yes. But for <em>our own</em> purposes of\nself-growth, it is probably more healthy to think of them as <em>parables, not\npeople</em>. Regardless of how you feel about the truth of Gladwell’s thesis, these\nCEOs represent 0.01% of the outcome space for starting a company. As such\nthey’re all so far away from the mean that it is emotionally unhealthy and\nprobably counterproductive to use them as personal role models anyway.</p>\n\n<p>Instead, let them be archetypes. You can use Drew as the character through\nwhich to tell the story “scratch your own itch” or “symmetric sharing\nincentives.”  You can use Bill to tell any number of stories, like: “license\nand become platform.” And so on.</p>\n\n<p>Distill the essence of what they did well and let that–not their success–be\nyour guide.  It’s a bit similar to the idea of Chengyu (成語) in Chinese: short\nidioms that serve as poetic allusions to some situation. Sometimes these idioms\ncall out a historical figure by name, like saying “<a href=\"http://en.wikipedia.org/wiki/Battle_of_the_Little_Bighorn\">Custer’s Last\nStand</a>” to describe\na situation in [American] English.</p>\n\n<p>Just for fun, here are three. I’m not a native speaker, so forgive me (and\nemail me) if I’m mischaracterizing:</p>\n\n<ul>\n  <li>\n    <p><a href=\"http://en.wikipedia.org/wiki/Yu_the_Great\">Yu Passed by his House Three Times without Entering (大禹三過家門而不入)</a> Refers to Yu the Great, who designed and built a system of irrigation canals that tamed the floods which had been plaguing the Chinese people. He was so dedicated to this task that he didn’t return home to his wife for thirteen years until it was complete, despite passing by the very doors of his house three times during that period. Today the saying refers to someone wholly dedicated their country or work.</p>\n  </li>\n  <li>\n    <p><a href=\"http://en.wiktionary.org/wiki/%E5%A1%9E%E7%BF%81%E5%A4%B1%E9%A6%AC\">The old man lost his horse (塞翁失馬)</a> refers to a story about an\nold man who once lived lived near a place called Xiongnu. When things happened to him–good or bad–he demonstrated wisdom by refraining from snap judgement, knowing that things that appear good or bad in the short term can often turn out to be the opposite in the long term. (Side note: what a great parable to include in a CS class on <a href=\"http://en.wikipedia.org/wiki/Greedy_algorithm\">Greedy Algorithms</a>!)</p>\n  </li>\n  <li>\n    <p><a href=\"http://www.chinese-chengyu.com/dongshixiaopin-blindly-imitating.html\">Dongshi Imitated a Frown (东施效颦)</a>\nis like saying “<a href=\"http://en.wikipedia.org/wiki/Cargo_cult\">cargo cult</a>”, except with the additional meaning that the cargo cult imitation creates a bad (instead of merely neutral) outcome. Dong Shi was a woman who feigned chest pains, jealous of her beautiful friend who got lots of attention when she fell sick. But instead of getting more attention, Dongshi’s feigned illness scared people away.</p>\n  </li>\n</ul>\n\n<p>Anyway, the point is, don’t fixate on celebrity. Everyone has the capacity to\ntouch lives and do great work, and some people end up getting famous.  By all\nmeans try for fame and glory, if that’s what you want, but it’s probably best\nif you use celebrities as parable, not role model, along the way.</p>",
      "excerpt": "(Reaction to this\nblog post, which got some time on Hacker News a while back.)",
      "languages": null,
      "categories": [],
      "tags": ["commentary"]
    }
    
  

  
    ,
    {
      "title": "Virtualization Makes Things Weird",
      "permalink": "http://0.0.0.0:4321/2012/11/virtualization-makes-things-weird",
      "link": "http://0.0.0.0:4321/2012/11/virtualization-makes-things-weird",
      "date": "2012-11-14T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Ah, for the simple days, when a taxi was a taxi, and my video games weren’t\nhelping terrorists behind my back.</p>\n\n<ul>\n  <li>Exhibit A: <a href=\"http://www.youtube.com/watch?v=dqnQTEhP0Pc&amp;feature=plcp\">Johnathan Zittrain on Ethics Laundering via Mechanical Turk</a>. 30 minutes but worth the watch.</li>\n  <li>Exhibit B: <a href=\"http://arstechnica.com/tech-policy/2012/11/lyft-sidecar-and-uber-all-slapped-with-20k-fines-from-ca-regulator/\">We’re not a Taxi Service; We just connect riders to cars</a></li>\n</ul>\n\n<p>We’ve begun to virtualize many parts of the economy. And things are getting\nweird as a result.</p>\n\n<p>Take the case of these new peer-to-peer taxi services popping up. It’s a cool\nidea, for sure. But we also agree that regulations are usually a Good Thing,\nproviding they’re used to protect consumers instead of simply raising the\nbarrier to entry of local business (see: <a href=\"http://www.npr.org/blogs/money/2012/06/22/155596305/episode-381-why-its-illegal-to-braid-hair-without-a-license\">Why It’s Illegal to Braid Hair\nWithout a\nLicense</a>).</p>\n\n<p>But how do you regulate a <em>virtualized</em> taxi livery? A company that provdes\ntaxi-like services without actually owning cars or employing drivers? They just\nplay switchboard for anyone who wants to sign up.</p>\n\n<p>There’s a game in Japan called\n<a href=\"http://www.youtube.com/watch?v=0tRclMW6YqQ\">Pachinko</a>.  It’s also weird. I\ncan’t figure it out, despite having spent a good hour trying in Kyoto this\nsummer. Pachinko involves shooting BB-gun sized metal balls into a <a href=\"http://en.wikipedia.org/wiki/Bean_machine\">Galton\nBox</a> of sorts, in which you receive\npoints for certain landing positions.  As best as I can tell, the configuration\nof the game creates a calculable expected return for every possible angle from\nwhich you shoot these balls. This means the game boils down to (A) guessing\nwhat these expected payouts are and (B) holding your wrist at precisely the\nangle that achieves them.</p>\n\n<p>Anyway, the point about Pachinko is, it’s gambling. It’s a <a href=\"http://spectrum.ieee.org/tech-talk/consumer-electronics/gaming/the-secret-life-of-pachinko\">billion dollar\nbusiness</a>.\nExcept for a small problem: you can’t gamble in Japan. To avoid the\nprohibition, they’ve taken Chuck-E-Cheese style gaming to the next step.</p>\n\n<ol>\n  <li>You give Pachinko money</li>\n  <li>Pachinko gives you points</li>\n  <li>Points can be redeemed for toys, and (here’s the kicker)</li>\n  <li>Coincidentally, next door is a shop that purchases toys for money</li>\n</ol>\n\n<p>It comes full circle.</p>\n\n<p>Anti-gambling law avoided. Gamblers, proceed.</p>\n\n<p>Virtualization is weird.</p>\n\n<p>One might argue that the financial crash of 2008 was a result of the same\nsong-and-dance. I can’t figure out how to concisely make the proper allusions\nhere, but <a href=\"http://en.wikipedia.org/wiki/The_Big_Short\">The Big Short</a> is an\nexcellent read if you’re interested.</p>\n\n<p>I have some friends who are lawyers. They tell me the interesting thing about\nthe law is that every case is a story, and the job of the court is to interpret\nthat story in the context of existing law and precedent. Initially this\nfrustrated me.  Doesn’t this guarantee inconsistent outcomes? Can’t we just\nhave a giant lookup table?</p>\n\n<ul>\n  <li>Section 3.4.5: An Eye.</li>\n  <li>Section 3.4.6: A Tooth.</li>\n</ul>\n\n<p>But, seeing how fast things change, and how strange things get when companies\nvirtualize our daily activities past the point where the law, as written, can\naddress them…well, it makes me glad the courtroom involves stories, instead\nof a simple dictionary look-up.</p>",
      "excerpt": "Ah, for the simple days, when a taxi was a taxi, and my video games weren’t\nhelping terrorists behind my back.",
      "languages": null,
      "categories": [],
      "tags": ["commentary"]
    }
    
  

  
    ,
    {
      "title": "Cross Origin Resource Sharing Gotcha&#58; Don't forget about OPTIONS requests",
      "permalink": "http://0.0.0.0:4321/2012/07/cross-origin-resource-sharing-gotcha",
      "link": "http://0.0.0.0:4321/2012/07/cross-origin-resource-sharing-gotcha",
      "date": "2012-11-07T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Anyone in the business of hacking the web past its original boundaries knows\nthe importance of the browser’s cross-origin security model. But you also know\nhow often we try to sneak around it.</p>\n\n<p>For static content, JSONP – the typical sneak route – seems a bit hacky.\nDynamic JSONP callback names require me to serve up static resources with a\ndynamic wrapper. And static callback names just don’t seem very principled:\nwhat if I have multiple requests in the pipeline? Yuck.</p>\n\n<p>The workaround is to use Cross-Origin Resource Sharing (CORS), which is a\nrelatively new family of HTTP headers that communicate to the browser that a\nserver authorizes the use of its content by external origins. If you can\nswallow incompatibility from the usual suspects, it’s a nice option because it\nallows you to load static cross-origin content as if it were same-origin\ncontent.</p>\n\n<p>All it takes is a few special HTTP headers.  You can add these headers to a\nwhole directory of static content by adding the following lines to your\n<code class=\"highlighter-rouge\">.htaccess</code> file:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Header add Access-Control-Allow-Headers \"x-requested-with\"\nHeader add Access-Control-Allow-Methods \"GET, PUT, POST, DELETE, HEAD, OPTIONS\"\nHeader add Access-Control-Allow-Origin \"*\"\n</code></pre></div></div>\n\n<p>And here’s the catch that prompted me to write this post: most how-to snippets\naround the web seem to focus on the <code class=\"highlighter-rouge\">Allow-Origin</code> header, which is the meat\nand potatoes of the whole thing. But it is important that you add the\n<code class=\"highlighter-rouge\">Allow-Methods</code> one, too, because some browsers will do what is called a\n<em>preflight</em> request, which is an <code class=\"highlighter-rouge\">HTTP OPTIONS</code> call to the endpoint to see,\nessentially, what’s cooking on the other end of the line.</p>\n\n<p>The preflight is the browser’s first impression before it goes and fetches the\nreal thing you want.</p>\n\n<p>If you don’t explicitly signal that CORS is also OK for these <code class=\"highlighter-rouge\">OPTIONS</code>\nrequests, the server might make a bad first impression. The browser will think\nthat CORS is not enabled, and then infer (incorrectly) that any subsequent\n<code class=\"highlighter-rouge\">GET</code> request will fail. Wanting not to waste your time and bandwidth, the\nbrowser will then never even attempt the <code class=\"highlighter-rouge\">GET</code> fetch you asked for. <strong>But –\nand here’s the rub – your browser console will report this failure to you as a\nfailure of the <code class=\"highlighter-rouge\">GET</code> request</strong>, throwing you off the scent of the real bug (a\nfailed <code class=\"highlighter-rouge\">OPTIONS</code> request).</p>\n\n<p>So that’s it. CORS is your friend. And make sure not to forget about the\n<code class=\"highlighter-rouge\">OPTIONS</code> preflight.</p>",
      "excerpt": "Anyone in the business of hacking the web past its original boundaries knows\nthe importance of the browser’s cross-origin security model. But you also know\nhow often we try to sneak around it.",
      "languages": null,
      "categories": [],
      "tags": ["the web"]
    }
    
  

  
    ,
    {
      "title": "A Useful Little Pattern for Web Scraping",
      "permalink": "http://0.0.0.0:4321/2012/07/a-useful-little-pattern-for-web-scraping",
      "link": "http://0.0.0.0:4321/2012/07/a-useful-little-pattern-for-web-scraping",
      "date": "2012-07-17T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I’ve been doing a lot of web and Google Spreadsheet scraping recently, and one\nsituation I’ve run into a lot is that the schema of the data source doesn’t\n<em>quite</em> fit into the schema I’m trying to dump the data into. The data source\nmight expose someone’s full name, for instance, whereas I want to store the\nfirst and last name separately. I’ve developed a useful little coding pattern\nto help with that situation that I thought I’d share here.</p>\n\n<p>Let’s say that the scrape of any data source produces a result <code class=\"highlighter-rouge\">result :\nMap[A,B]</code>, where <code class=\"highlighter-rouge\">A</code> and <code class=\"highlighter-rouge\">B</code> are almost always strings in real life. For\nexample:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">val</span> <span class=\"n\">result</span> <span class=\"k\">=</span> <span class=\"nc\">Map</span><span class=\"o\">(</span>\n  <span class=\"s\">\"name\"</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"Ted Benson\"</span><span class=\"o\">,</span>\n<span class=\"o\">)</span></code></pre></figure>\n\n<p>Let’s define a “fixer” as a function that takes your result and outputs the\nmissing key-value pairs that you would have liked to have seen.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">type</span> <span class=\"kt\">Fixer</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"nc\">Map</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">])</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Map</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">]</span></code></pre></figure>\n\n<p>And then we define a function <code class=\"highlighter-rouge\">fix</code> which simply applies a fixer to the result\nand folds its output back into the original map (possibly overwriting some\nkeys).</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">def</span> <span class=\"n\">fix</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">](</span><span class=\"n\">m</span> <span class=\"k\">:</span> <span class=\"kt\">Map</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">],</span> <span class=\"n\">f</span> <span class=\"k\">:</span> <span class=\"kt\">Fixer</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">])</span> <span class=\"k\">:</span> <span class=\"kt\">Map</span><span class=\"o\">[</span><span class=\"kt\">A</span>,<span class=\"kt\">B</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"n\">m</span> <span class=\"o\">++</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">)</span></code></pre></figure>\n\n<p>Now we’ve got an incredibly useful little function that can help us tidy up any\nschema-misaligned data that we’re pulling in. To split the full name into first\nand last components, we might do the following (pardon the lack of error\nchecking):</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">val</span> <span class=\"nc\">FixName</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"k\">:</span> <span class=\"kt\">Map</span><span class=\"o\">[</span><span class=\"kt\">String</span>,<span class=\"kt\">String</span><span class=\"o\">])</span> <span class=\"k\">=&gt;</span> <span class=\"o\">{</span>\n  <span class=\"k\">val</span> <span class=\"n\">fl</span> <span class=\"k\">=</span> <span class=\"n\">m</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">).</span><span class=\"n\">split</span><span class=\"o\">(</span><span class=\"s\">\" \"</span><span class=\"o\">)</span>\n  <span class=\"nc\">Map</span><span class=\"o\">(</span><span class=\"s\">\"first\"</span> <span class=\"o\">-&gt;</span> <span class=\"n\">fl</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"s\">\"last\"</span> <span class=\"o\">-&gt;</span> <span class=\"n\">fl</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">))</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>and then, given our <code class=\"highlighter-rouge\">result</code> object from above, we can fix it by simply saying</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">val</span> <span class=\"n\">fixed</span> <span class=\"k\">=</span> <span class=\"n\">fix</span><span class=\"o\">(</span><span class=\"n\">result</span><span class=\"o\">,</span> <span class=\"nc\">FixName</span><span class=\"o\">)</span></code></pre></figure>\n\n<p>which will result in the map</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">val</span> <span class=\"n\">fixed</span> <span class=\"k\">=</span> <span class=\"nc\">Map</span><span class=\"o\">(</span>\n  <span class=\"s\">\"name\"</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"Ted Benson\"</span><span class=\"o\">,</span>\n  <span class=\"s\">\"first\"</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"Ted\"</span><span class=\"o\">,</span>\n  <span class=\"s\">\"last\"</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"Benson\"</span>\n<span class=\"o\">)</span></code></pre></figure>\n\n<p>Why go through all this trouble to wrap a simple modification to a data object?\nBecause if you’re scraping many different sites, you’re going to need a\npipeline to automate the work for you.  And by folding a “fix-it” step into\nthis pipeline, and formalizing it like this, you can write your scraper bot in\na domain-independent manner and then simply provide it with a chain of <code class=\"highlighter-rouge\">Fixer</code>\nfunctions for each URL pattern you request of it.</p>",
      "excerpt": "I’ve been doing a lot of web and Google Spreadsheet scraping recently, and one\nsituation I’ve run into a lot is that the schema of the data source doesn’t\nquite fit into the schema I’m trying to dump the data into. The data source\nmight expose someone’s full name, for instance, whereas I want to store the\nfirst and last name separately. I’ve developed a useful little coding pattern\nto help with that situation that I thought I’d share here.",
      "languages": null,
      "categories": [],
      "tags": ["data analysis","scala"]
    }
    
  

  
    ,
    {
      "title": "Democracy has a Built in Pressure Release Valve",
      "permalink": "http://0.0.0.0:4321/2012/03/democracy-pressure-release/",
      "link": "http://0.0.0.0:4321/2012/03/democracy-pressure-release/",
      "date": "2012-03-27T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I remember the first time I saw a picture of a steam engine governor. The\ndevice is ingenuous: its very design relies on the laws of nature to maintain a\nrelatively constant speed. A rotating shaft, driven by steam, is attached to\nweight-bearing arms that hang down by its side. As the rotational speed\nincreases, the centrifugal force causes the arms to swing outward, thus\ndampening the rotation of the shaft. The faster it tries to go, the more force\nprevents it from going fast. Anyway, the point is that, rather than an external\ndigital controller, as we might build today, this old design is\nself-regulating.</p>\n\n<p>It seems to me that democracy has this self-regulating property. At any given\npoint in a nation, there plenty of people angry at the government. It builds\nup pressure, sows discord in the nation. A monarch or dictator would fear this\npressure. But in a democracy this pressure is relieved by the act of voting,\nand all the political rituals (debates, etc) that go along with it.</p>\n\n<p>What’s interesting about this is that it works regardless of whether or not\n“democracy” actually means that people control the fate of the nation. Modern\nAmerican government is controlled by political parties, congressional voting\nblocs, and lobbying organizations – all of these are persistent,\nnon-democratic entities.  The real muscles which flex power in our country do\nnot answer to voters.</p>\n\n<p>And yet, we <em>feel</em> as if we control the government, because every four years we\nget our chance to “vote the bastard out” if we’re unhappy. Even if that act\nonly amounts to changing the kabuki mask worn by the thousands-deep\norganizations that actually constitute power.  The mask is important – it sets\nthe tone and tenor of delivery, and has veto power – but ultimately it is just\nthe presentational interface to a vastly more complex body behind it.</p>\n\n<p>This is an interesting property of democracy when compared against systems\nwhich maintain a narrative of “we’re in control because we know what’s best for\nyou” such as communist regimes. There is no built-in pressure release valve in\nthose narratives. When you get upset at the government, how can you vent your\nsteam?</p>\n\n<p>Perhaps this is why communist regimes work so hard to censor information. With\nno built-in pressure release valve, they have to either construct an artificial\none (as North Korea does, using the USA as its <a href=\"http://en.wikipedia.org/wiki/Emmanuel_Goldstein\">Emmanuel\nGoldstein</a>) or sit in fear\nthat their citizens will boot them out French Revolution style.</p>\n\n<p>Democracy idealized inspires us. Democracy ritualized mollifies us.</p>",
      "excerpt": "I remember the first time I saw a picture of a steam engine governor. The\ndevice is ingenuous: its very design relies on the laws of nature to maintain a\nrelatively constant speed. A rotating shaft, driven by steam, is attached to\nweight-bearing arms that hang down by its side. As the rotational speed\nincreases, the centrifugal force causes the arms to swing outward, thus\ndampening the rotation of the shaft. The faster it tries to go, the more force\nprevents it from going fast. Anyway, the point is that, rather than an external\ndigital controller, as we might build today, this old design is\nself-regulating.",
      "languages": null,
      "categories": [],
      "tags": ["commentary"]
    }
    
  

  
    ,
    {
      "title": "Who Occupies Wall Street?",
      "permalink": "http://0.0.0.0:4321/2012/03/who-occipies/",
      "link": "http://0.0.0.0:4321/2012/03/who-occipies/",
      "date": "2012-03-14T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I participated in the Cambridge get-together of the nationwide <a href=\"http://www.occupyresearch.net/2012/03/24/photos-from-occupydata-hackathon-2-day-2/\">Occupy Data\nHackathon\n2</a>\nthis weekend. Lots of interesting people, projects, and analyses going on.</p>\n\n<p>Here’s <a href=\"http://www.edwardbenson.com/viz/occupy.html\">the visualization I whipped\nup</a>, which lets you browse the\nresults from the <a href=\"http://occupyresearch.wikispaces.com/file/view/OccupyResearch+Survey+Guide+and+Instrument.pdf\">Occupy Research General Demographics and Participation\nSurvey</a>,\nand the\n<a href=\"http://www.occupyresearch.net/2012/03/24/faceted-browsing-of-orgs-data/\">post</a>\non the [Occupy Research](http://www.occupyresearch.net] blog that linked to it.\nThe data was cleaned up by <a href=\"http://tirl.org/\">Charlie DeTar</a> of the Media Lab,\nand he also has a great – and much higher-fidelity – visualization of it\n<a href=\"http://orgs-facet.tirl.org/simple.html\">available here</a>. The code for both is\navailable on <a href=\"https://github.com/yourcelf/orgs-facet\">GitHub</a>.</p>",
      "excerpt": "I participated in the Cambridge get-together of the nationwide Occupy Data\nHackathon\n2\nthis weekend. Lots of interesting people, projects, and analyses going on.",
      "languages": null,
      "categories": [],
      "tags": ["data analysis","data visualization"]
    }
    
  

  
    ,
    {
      "title": "NICAR, from a Programmer's Eyes",
      "permalink": "http://0.0.0.0:4321/2012/03/thoughts-on-nicar/",
      "link": "http://0.0.0.0:4321/2012/03/thoughts-on-nicar/",
      "date": "2012-03-06T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Last week I attended NICAR 2012, a conference for computer assisted\ninvestigative reporting. I was there to help David teach reporters how to use\ntools such as Datapress and Exhibit and to learn about the needs and\nstate-of-the-art of computers in reporting. It is always a privilege to get to\nvisit and observe someone’s world as an outsider; and even more so to see how\nthey are using tools from your world to do their work. So here are some parting\nthoughts I took away from the conference: NICAR from the eyes of a computer\nscientist.</p>\n\n<p><strong>Visualization is just the “last mile” of data in reporting.</strong> And an optional one\nat that. We spend a lot of time talking about data publication and\nvisualization tools in Haystack, but this is just one small slice of the needs\nof computer-assisted reporting. A story might take months of investigative\nwork- gathering data, cleaning data, interviewing people, assembling scraps of\npaper — and a presentation of that data is only prepared in the final run-up to\npublication. That presentation isn’t always a wiz-bang interactive graphic,\neither. Many times a data-intensive story might be presented entirely as\nnarrative, if the medium fits better.</p>\n\n<p><strong>Scraping tools seriously needed.</strong> Web scraping wins the award for highest ratio\nof need over capability. Scraping the web is absolutely essential to do good\ninvestigative work when it comes to municipalities, many of which publish web\npages with daily administrative information (such as arrests) while removing\nthe previous days’. Without a scraper, reporters would have to spend a large\nportion of each day copying and pasting this information down into a\nspreadsheet by hand.</p>\n\n<p><strong>Big Opportunities for Automation.</strong> Ben Welsh of the LA Times gave a great talk\nabout how he automates his reporting through  a combination of web and email\nscrapers, databases, and automated copy generators. The goal being to\nauto-generate 100% of reactive stories (deaths, arrests, etc) and then go back\nand rewrite the most important ones by hand. Reminiscent of AtomsMasher for the\nnewsroom.</p>\n\n<p><strong>And machine learning, too.</strong> Tools that enable reporters to perform topic\nmodeling and hierarchical clustering are making a big splash. They can go a\nlong way toward helping a reporter understand a big data dump so they know what\ndocuments to focus on. I think the coming years are going to big for the\ndissemination of machine learning components into a lot of consumer software.\nTools that enable reporters to say “give me more documents like these ones”\nwill be a bit hit.</p>\n\n<p><strong>The CMS is Broken.</strong> One refrain I heard over and over is how much the reporters\nhave to fight with their CMS. For reasons both technical and administrative. A\ncommon solution seems to be for custom news apps to be hosted out of a\nsubdomain on third party sites (AWS, Heroku, etc) with window dressing to\nprovide the illusion of being a part of the main news site. However as a\ntotally separate entity, these news apps don’t get integrated into the standard\nRSS feed, advertising system, top stories feature, and other critical elements\nof the CMS-managed web of data, casing traffic and revenue challenges for their\nauthors.</p>\n\n<p><strong>What happens when your paper is the business of causing protests?</strong> I went one\nsession where the creators of curbwise.com, two employees from The Omaha\nWorld-Herald, discussed the hopeful (revenue-wise) but new territory of\ntransforming the news into apps. Here’s the gist: print ad revenues are\nfalling, but online ad revenues are a pittance in comparison. To make up for\nlost revenue, newspapers can exploit their intimate knowledge of a locale by\ncreating community-specific information sites and charging for them somehow.\nBut what happens when that site is, like Curbwise, a way to protest your home’s\nvaluation? Now the newspaper has a financial interest in causing people to\nprotest their home valuations. Is that territory we should be comfortable with\nnewspapers occupying? Do they occupy it already (to the extent that extreme\nnews is news that sells well, so there’s always an incentive to fan a fire)?\nFood for thought.</p>\n\n<p><strong>Appification of news, in general.</strong> Continuing on the previous thought, there was\nenormous interest in the idea of transforming news into for-fee “apps” that\ndeliver a targeted news experience. Such as paying a small fee to get your\nkid’s high school football scores in a format that looks like ESPN.com.</p>\n\n<p><strong>The need for computer science as a liberal arts requirement.</strong> If ever I haveeen\na good argument for computer science as a liberal arts requirement, going to\nNICAR was it. It was amazing and energizing to see the extent to which\ncomputers are enabling better reporting and storytelling. In some cases,\nsurprising to see how programming has become an essential tool for some areas\nof reporting. In today’s world, knowing how to program better equips you to\nmake sense of the information around you and communicate your findings to\nothers.</p>\n\n<p><strong>The need for computer scientists to grok liberal arts.</strong> On the other hand,\nwe as computer scientists need to be delivering tools — serious data crunching\ntools, visualization tools, curation tools, scraping tools — that are built for\nuse by people who spend their days thinking about things other than computers.\nBecause I want my local reporters to spend their days fact checking the good\nstories, not brushing up on Python.</p>",
      "excerpt": "Last week I attended NICAR 2012, a conference for computer assisted\ninvestigative reporting. I was there to help David teach reporters how to use\ntools such as Datapress and Exhibit and to learn about the needs and\nstate-of-the-art of computers in reporting. It is always a privilege to get to\nvisit and observe someone’s world as an outsider; and even more so to see how\nthey are using tools from your world to do their work. So here are some parting\nthoughts I took away from the conference: NICAR from the eyes of a computer\nscientist.",
      "languages": null,
      "categories": [],
      "tags": ["the web","data visualization","data analysis","conference notes"]
    }
    
  

  
    ,
    {
      "title": "Roasted Cocoa Ice Cream",
      "permalink": "http://0.0.0.0:4321/2011/11/roasted-cocoa-ice-cream",
      "link": "http://0.0.0.0:4321/2011/11/roasted-cocoa-ice-cream",
      "date": "2011-11-12T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<h3 id=\"1-roast-the-cocoa\">1. Roast the Cocoa</h3>\n\n<ul>\n  <li>Roast <code class=\"highlighter-rouge\">60g of cocoa nibs</code> @ 350 for 5 minutes</li>\n</ul>\n\n<p>Watch out – these things burn fast! I ruined the first batch when I wasn’t\nattentive enough to a funny, almost burning plastic smell coming from the oven.\nThe nibs come out almost as bitter as when they went in, but much chewy-er.</p>\n\n<h3 id=\"2-make-some-cocoa-tea\">2. Make Some Cocoa Tea</h3>\n\n<p>Bring to a boil with <code class=\"highlighter-rouge\">400g wholefat milk</code>, turn off the heat, cover, and let\nsteep for about 10 minutes.</p>\n\n<h3 id=\"3-junk-the-nibs\">3. Junk the Nibs</h3>\n\n<p>Strain ‘em outta there.</p>\n\n<h3 id=\"4-custard-it-up\">4. Custard it Up</h3>\n\n<p>In a bowl, mix <code class=\"highlighter-rouge\">two whole eggs</code> with <code class=\"highlighter-rouge\">80g sugar</code>. Add it to the milk, stirring\nwith a whisk. Put the temperature on low heat, and stir constantly, scraping\nthe bottom, until you reach custard consistency. You know you’re there when a\nspoon dipped in comes out with a thick coat, but swiping a finger across the\nspoon leaves it clean. When you decide it’s time, immediately transfer the pot\ninto a bath of ice water to stop the eggs from cooking.</p>\n\n<p><em>Watch out</em>: if you overdo this step everything will get grainy and lumpy. <em>But\nfear not</em>: I suck at this step but the result remains delicious in spite of me.\nYou really can’t fail when the main incredients are cream and sugar.</p>\n\n<h3 id=\"5-chill-out\">5. Chill Out</h3>\n\n<p>Let the custardy milk cool down. I put it in the refridgerator or outside (in\nthe winter). Or in the freezer if I’m already late to a party.</p>\n\n<h3 id=\"6-more-cowbell\">6. More Cowbell</h3>\n\n<p>Once it’s cool, mix in <code class=\"highlighter-rouge\">200g heavy cream</code>.</p>\n\n<h3 id=\"7-churn-baby-churn\">7. Churn baby, churn.</h3>\n\n<p>The machine knows what to do.</p>\n\n<p>Enjoy with a few nibs on top.</p>",
      "excerpt": "1. Roast the Cocoa",
      "languages": null,
      "categories": ["Ice Cream"],
      "tags": ["random"]
    }
    
  

  
    ,
    {
      "title": "A new generation of nuclear power opponents?",
      "permalink": "http://0.0.0.0:4321/2011/3/a-new-generation-of-nuclear-power-opponents/",
      "link": "http://0.0.0.0:4321/2011/3/a-new-generation-of-nuclear-power-opponents/",
      "date": "2011-03-12T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Nuclear power is as close to magic as we’ve come when it comes to economically viable energy production, but it’s also controversial. A lot of the opposition is from the older generation who remember back to events like Chernobyl and Three Mile Island.\nWill the ongoing nuclear scare in Japan create a new generation of people opposed to nuclear power?</p>\n\n<p>We’re witnessing the cost of a nuclear meltdown right now. Hopefully this is the worst things will get, but it’s already scary enough for me.</p>\n\n<p>People don’t place bets if losing the bet carries too high a cost. And any engineering system is a bet. The output of a nuclear power plant isn’t actually Electricity + Waste as we typically think of it, the output is coarsely:</p>\n\n<ul>\n  <li>Success with probability p</li>\n  <li>Failure with probability (1-p)</li>\n</ul>\n\n<p>Presumably, success has some positive value to society, Failure has some negative value, and p is very close to 1.</p>\n\n<p>How do we, as a society, evaluate the output of the plant? As the expected return, Success<em>p + Failure</em>(1-p)? This is how the auto industry works, for example: they design with a tolerable expected deaths per vehicle-mile (like 0.0000000something).</p>\n\n<p>The problem is expected return doesn’t work so well if failure is catastrophic. The reason is that whatever mathematical model we use estimate a value for p is inherently flawed, as all models are. Models don’t reflect the world, they are just rough approximations of it.</p>\n\n<p>So the real probabilities are</p>\n\n<ul>\n  <li>Success with probability p-epsilon</li>\n  <li>Failure with probability (1-p+epsilon)</li>\n</ul>\n\n<p>Where epsilon is some probability mass that represents the un-modeled failure situations – Donald Rumsfeld’s “unknown unknowns”. The problem with this term is that we don’t know how big it is. If we have catastrophic failure with probability (1-p+epsilon) and we don’t know how big epsilon is, that’s pretty scary.</p>\n\n<p>The failure in Japan right now is happening somewhere in the probability mass covered by this epsilon term:</p>\n\n<p>When Fukushima was built, TEPCO rated and tested reactors 1 &amp; 2 to tremors equivalent of a 7.9 earthquake – the highest they thought was possible for the region. No need to test for an 8.9er – not factored into their risk model.</p>\n\n<p>An 8.9 quake is the strongest in recorded history for Japan – 10 times worse than the 7.9 Fukushima was rated for (logarithmic scale). And it wasn’t just the quake that caused the reactor problems. Engineers spend a lot of time planning for shit to hit the fan. And when you look at catastrophic failures – the (1-p+epsilon) scenarios – it’s often a perfect storm of cascading failures that cause all of the checks and balances to fail.</p>\n\n<p>In the case of this reactor, it was:</p>\n<ul>\n  <li>Earthquake hits, shuts down nuclear reactor, power goes out</li>\n  <li>Tsunami floods, takes out diesel backup generators that keep cooling system running</li>\n  <li>Backup batteries run out because the above national infrastructure is too torn up to replace them</li>\n  <li>Plant infrastructure (pipes, outer containers) crumble and burn, further damaging cooling system</li>\n</ul>\n\n<p>That’s pretty complicated. And low probability.</p>\n\n<p>The worst failure condition for a nuclear reactor doesn’t just kill people, it curses the earth for kilometers and decades. And that’s the scary thing: that there are unknown unknowns not factored into the risk assessments of engineering systems with potentially catastrophic results.</p>\n\n<p>I think a whole new generation of people will grow up thinking that any power solution that places a nonzero – and worse, inherently unknowable – probability mass on  nuclear fallout is unacceptable.</p>\n\n<p>There’s an easy solution to this, of course: don’t build systems whose cost of failure is catastrophic. Will that be the policy mandate for years to come, or will we give in to the economic pressures created by scarce energy?</p>",
      "excerpt": "Nuclear power is as close to magic as we’ve come when it comes to economically viable energy production, but it’s also controversial. A lot of the opposition is from the older generation who remember back to events like Chernobyl and Three Mile Island.\nWill the ongoing nuclear scare in Japan create a new generation of people opposed to nuclear power?",
      "languages": null,
      "categories": [],
      "tags": ["commentary"]
    }
    
  

  
    ,
    {
      "title": "Join us for a Crowdsourcing Community Service Hackathon this weekend",
      "permalink": "http://0.0.0.0:4321/2011/1/crowdsourcing-community-hackathon/",
      "link": "http://0.0.0.0:4321/2011/1/crowdsourcing-community-hackathon/",
      "date": "2011-01-08T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Calling all hackers, designers, and journalists in Boston!</p>\n\n<p>A friend and I are organizing a “Crowdsourcing for Community Service” hackathon\nat MIT Friday-Sunday January 14-16. It should be a fun time and we would love\nfor you to come out and join us.</p>\n\n<p>All the details, and a signup form, can be found on <a href=\"http://www.crowdcomputingchallenge.info/\">the\nwebsite</a>.</p>\n\n<p>We’re trying to get a group of creative people together for a weekend to try to\nsolve a community service problem using mobile and crowdsourcing technology.</p>\n\n<p>How often do you think: “If only we could each pitch in a small bit, the world\nwould be a much better place.” Well, let’s get together, brainstorm a bit\n(Friday), create a tool or platform that helps us each pitch in that little bit\n(Sat &amp; Sun), and then use it to better the Cambridge and Boston communities!</p>\n\n<p>We’re interested in people of all skills that could contribute to a project\nlike this, whether you’re a hardcore web hacker, a graphic designer, a writer,\nor a community organizer.</p>\n\n<p>Hope to see you there,</p>\n\n<p>Ted</p>",
      "excerpt": "Calling all hackers, designers, and journalists in Boston!",
      "languages": null,
      "categories": [],
      "tags": ["conference notes"]
    }
    
  

  
    ,
    {
      "title": "Scala can be Scary",
      "permalink": "http://0.0.0.0:4321/2010/12/scala-can-be-scary/",
      "link": "http://0.0.0.0:4321/2010/12/scala-can-be-scary/",
      "date": "2010-12-07T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>With syntax like this, who needs enemies?</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">object</span> <span class=\"nc\">ListCase</span> <span class=\"o\">{</span>\n\t<span class=\"k\">def</span> <span class=\"n\">matcher</span><span class=\"o\">(</span><span class=\"n\">l</span><span class=\"k\">:</span><span class=\"kt\">List</span><span class=\"o\">[</span><span class=\"kt\">Int</span><span class=\"o\">])</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">l</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"k\">case</span> <span class=\"nc\">List</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">7</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Primes\"</span><span class=\"o\">)</span>\n\t\t\t<span class=\"k\">case</span> <span class=\"nc\">List</span><span class=\"o\">(</span><span class=\"k\">_</span><span class=\"o\">,</span><span class=\"k\">_</span><span class=\"o\">,</span><span class=\"k\">_</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"3 on 3\"</span><span class=\"o\">)</span>\n\t\t\t<span class=\"k\">case</span> <span class=\"mi\">1</span><span class=\"o\">::</span><span class=\"n\">rest</span> <span class=\"k\">=&gt;</span> <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"List starting with 1\"</span><span class=\"o\">)</span>\n\t\t\t<span class=\"k\">case</span> <span class=\"nc\">List</span><span class=\"o\">(</span><span class=\"k\">_</span><span class=\"o\">*)</span> <span class=\"k\">=&gt;</span> <span class=\"n\">println</span><span class=\"o\">(</span><span class=\"s\">\"Other list\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>",
      "excerpt": "With syntax like this, who needs enemies?",
      "languages": null,
      "categories": [],
      "tags": ["programming","scala"]
    }
    
  

  
    ,
    {
      "title": "Only at the Media Lab",
      "permalink": "http://0.0.0.0:4321/2010/11/only-at-the-media-lab/",
      "link": "http://0.0.0.0:4321/2010/11/only-at-the-media-lab/",
      "date": "2010-11-20T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I was doing work on the 5th floor of the Media Lab the other day and pop music\nwas echoing throughout the entire building. After about an hour, I finally went\nto investigate what it was:</p>\n\n<div><iframe src=\"http://player.vimeo.com/video/17029433?portrait=0\" frameborder=\"0\" height=\"283\" width=\"500\"></iframe></div>\n<p />\n\n<div><iframe src=\"http://player.vimeo.com/video/17031526?portrait=0\" frameborder=\"0\" height=\"283\" width=\"500\"></iframe></div>",
      "excerpt": "I was doing work on the 5th floor of the Media Lab the other day and pop music\nwas echoing throughout the entire building. After about an hour, I finally went\nto investigate what it was:",
      "languages": null,
      "categories": [],
      "tags": ["random"]
    }
    
  

  
    ,
    {
      "title": "The Semantic Web needs a MySQL",
      "permalink": "http://0.0.0.0:4321/2010/11/the-semantic-web-needs-a-mysql/",
      "link": "http://0.0.0.0:4321/2010/11/the-semantic-web-needs-a-mysql/",
      "date": "2010-11-16T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>One thing was clear in the comments of many industry-facing participants of\nISWC 2010: a big impediment to adoption of semantic web technologies is the\nlack of an off-the-shelf triplestore that “just works.”</p>\n\n<p>There are many other problems, of course: RDF an awkward format when it comes\nto real world programming because the graph model doesn’t align to the\nobject-dictionary model of OO programming; JavaScript favors JSON instead of\nRDF; URIs and namespaces can be a burden to craft the first time around. But\nthese problems can be lessened, or eradicated, with good development\nframeworks.</p>\n\n<p>Underlying these surface problems is a deployment one: even if a company wanted\nto, there’s no clear hassle-free solution to getting a triplestore up and\nrunning with the same ease, access, and reliability that relational solutions\nsuch as MySQL and Postgres provide. And as long as this is the case, otherwise\nsemantic-web savvy individuals are going to continue to live in the relational\nworld. When people are spread thin, and want to focus on user experience\ninstead of database administration, they’ll pick the database product that\nallows them to focus on other things.</p>\n\n<p>So what gives? Do we wait for a Mike Stonebraker of the triplestore world to\ncome around? Or do we try to bolt our technologies onto non-relational\ndatabases with gaining momentum such as MongoDB or CouchDB?</p>",
      "excerpt": "One thing was clear in the comments of many industry-facing participants of\nISWC 2010: a big impediment to adoption of semantic web technologies is the\nlack of an off-the-shelf triplestore that “just works.”",
      "languages": null,
      "categories": [],
      "tags": ["the web"]
    }
    
  

  
    ,
    {
      "title": "The Toothpaste Problem and Choosing the Right Data to Publish",
      "permalink": "http://0.0.0.0:4321/2010/11/choosing-the-right-data-to-publish/",
      "link": "http://0.0.0.0:4321/2010/11/choosing-the-right-data-to-publish/",
      "date": "2010-11-09T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>People who visit a toothpaste isle with only 4 products walk away much happier\nthan those who visit the typical supermarket isle crammed with 40 variants of\nColgate. Why? Because they don’t get overwhelmed by a tsunami of possibilities\nthat leaves them wondering if they made the wrong choice.</p>\n\n<p>When it comes to a large organization publishing data, perhaps a similar\nproblem arises. Given all the information in the world that we <em>could</em> publish in\nstructured form, how are we to know which important bits to address first?</p>\n\n<p>Hans-Jörg Happel proposed an interesting way to solve this problem in the\nSocial Semantic Web track at ISWC 2010 today. If we can quantify the need for a\nparticular morsel of information, we can prioritize our efforts to structure\nand publish data. The question, then, becomes how to quantify information need.</p>\n\n<p>Happel’s idea is to do this by examining missing values from query results.\nWhen someone performs a query, they’re stating that they need a particular data\nset. When one of the items in the query result is empty (such as missing 2010\nGDP value for Mexico), that’s a known piece of information that someone needed\nand didn’t get. If we count up the number of times each of these NULL values\noccurs, we can begin to keep a priority queue of desired, but missing, data.</p>\n\n<p>So if Mexico’s 2010 GDP is missing from WikiPedia, is that a problem? Well,\ncount up the number queries that returned a NULL for this item and judge\nquantitatively. If the number is comparatively high, maybe we should prioritize\nthe addition of Mexican economic stats.</p>\n\n<p>He’s created a plugin for Semantic MediaWiki, called <a href=\"http://www.mediawiki.org/wiki/Extension:Semantic_Need\">Semantic Need</a>, which does\nexactly this. The list of prioritized information is called the “Extended\nKnowledge Base” — those things that we want to know, but don’t. As a\nprogrammer, I find this project very clever. Developers usually think of NULL\nvalues in query results as mere annoyances. But this work turns that around and\nmakes them useful.</p>\n\n<p>One of the themes of the Haystack Group is that focusing on user needs can\ndirect research toward results that are immediately useful. On the semantic\nweb, picking an explicit user goal (helping users communicate effectively using\ndata) can be more effective than picking an abstract goal (building a web of\nlinked data). Our project <a href=\"http://projects.csail.mit.edu/datapress\">DataPress</a> attempts to follow this philosophy by\nhelping users add interesting visualizations to their blogs, and as a side\neffect, showing those users the value of structuring their data. Semantic Need\nfollows this philosophy in another way: it attempts to quantify an existing,\nrealized need for pieces of data so that we know which data is actually useful\nfor structuring <em>right now</em>.</p>\n\n<p>While the presentaiton didn’t address it, the idea behind this talk could be\nincredibly useful for government data. What if governments provided not links\nto data sets (as <a href=\"http://www.data.gov\">data.gov</a> does) but rather some ontology and a query interface.\nThen it sits back and sees what users query for. Using an approach like this,\nthe “what data should we publish” problem solves itself: the queries people ask\nwill tell you what data to prioritize for publishing.</p>\n\n<p>Here’s a link to the paper: <a href=\"http://iswc2010.semanticweb.org/pdf/169.pdf\">Semantic Need: Guiding metadata annotations by\nquestions people #ASK</a></p>",
      "excerpt": "People who visit a toothpaste isle with only 4 products walk away much happier\nthan those who visit the typical supermarket isle crammed with 40 variants of\nColgate. Why? Because they don’t get overwhelmed by a tsunami of possibilities\nthat leaves them wondering if they made the wrong choice.",
      "languages": null,
      "categories": [],
      "tags": ["conference notes","data visualization"]
    }
    
  

  
    ,
    {
      "title": "If James Bond were a Linguist",
      "permalink": "http://0.0.0.0:4321/2010/10/if-james-bond-were-a-linguist/",
      "link": "http://0.0.0.0:4321/2010/10/if-james-bond-were-a-linguist/",
      "date": "2010-10-09T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>MIT is hosting the <a href=\"http://www.lsi.upc.edu/events/emnlp2010/\">2010 Empirical Methods in Natural Langauge Processing\nconference</a> this year, and I noticed\na clustering of papers in the program that would make for a fun session,\npossibly titled “Linguistic Security”. The session would cover both offense\n(what can we tell about you from the language you use) and defense (how can you\nhide messages in your word choice).</p>\n\n<p>Since the EMNLP program is already fixed, the “2010 Ted’s Blog Workshop on\nLinguistic Security (TBWLS)”, will have to suffice :).</p>\n\n<p>Here’s the program. Each item is taken from the <a href=\"http://www.lsi.upc.edu/events/emnlp2010/program.html\">real\nprogram</a>:</p>\n\n<ul>\n  <li>Keynote: Why do we call it decoding?<br />\nKevin Knight</li>\n  <li>Improving Gender Classification of Blog Authors<br />\nArjun Mukherjee and Bing Liu</li>\n  <li>Modeling Perspective using Adaptor Grammars<br />\nEric Hardisty, Jordan Boyd-Graber and Philip Resnik</li>\n  <li>Practical Linguistic Steganography using Contextual Synonym Substitution and Vertex Colour Coding<br />\nChing-Yun Chang and Stephen Clark</li>\n  <li>A Latent Variable Model for Geographic Lexical Variation<br />\nJacob Eisenstein, Brendan O’Connor, Noah A. Smith and Eric P. Xing</li>\n</ul>",
      "excerpt": "MIT is hosting the 2010 Empirical Methods in Natural Langauge Processing\nconference this year, and I noticed\na clustering of papers in the program that would make for a fun session,\npossibly titled “Linguistic Security”. The session would cover both offense\n(what can we tell about you from the language you use) and defense (how can you\nhide messages in your word choice).",
      "languages": null,
      "categories": [],
      "tags": ["conference notes","natural language processing","machine learning"]
    }
    
  

  
    ,
    {
      "title": "Bit by Flexibility&#58; Implicit Conversions to Java with Scala 2.8",
      "permalink": "http://0.0.0.0:4321/2010/10/bit-by-flexibility/",
      "link": "http://0.0.0.0:4321/2010/10/bit-by-flexibility/",
      "date": "2010-10-06T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Scala 2.8 includes a library that helps implicitly convert Scala objects to\nJava objects so you can keep your data in Scala-land while still using Java API\ncalls. Just import this package in your code:jj</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">import</span> <span class=\"nn\">scala.collection.JavaConversions._</span> </code></pre></figure>\n\n<p>The problem is sometimes the conversion library fails at compile time because\nthere are just <em>too many possible conversions</em> it can make. It can’t decide\nbetween all the possibilities. Talk about being a victim of your own success!</p>\n\n<p>Here’s an example: I have a scala.Iterable of items, and I want to implicitly\nconvert it to a java.lang.Iterable</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">val</span> <span class=\"n\">trainingData</span><span class=\"k\">:</span><span class=\"kt\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">ILabeledSeqDatum</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"n\">processTrainingFile</span><span class=\"o\">(</span><span class=\"n\">trainingFile</span><span class=\"o\">)</span> \n<span class=\"nc\">_crf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">(</span><span class=\"n\">trainingData</span><span class=\"o\">)</span></code></pre></figure>\n\n<p>But the implicit conversion dies here with the following message:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"o\">[</span><span class=\"kt\">error</span><span class=\"o\">]</span><span class=\"n\">found</span>   <span class=\"k\">:</span> <span class=\"kt\">scala.Iterable</span><span class=\"o\">[</span><span class=\"kt\">edu.umass.nlp.ml.sequence.ILabeledSeqDatum</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"kt\">error</span><span class=\"o\">]</span><span class=\"n\">required</span><span class=\"k\">:</span> <span class=\"kt\">java.lang.Iterable</span><span class=\"o\">[</span><span class=\"kt\">edu.umass.nlp.ml.sequence.ILabeledSeqDatum</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"kt\">error</span><span class=\"o\">]</span><span class=\"nc\">Note</span> <span class=\"n\">that</span> <span class=\"k\">implicit</span> <span class=\"n\">conversions</span> <span class=\"n\">are</span> <span class=\"n\">not</span> <span class=\"n\">applicable</span> <span class=\"n\">because</span> <span class=\"n\">they</span> <span class=\"n\">are</span> <span class=\"n\">ambiguous</span><span class=\"k\">:</span>\n<span class=\"err\">[</span><span class=\"kt\">error</span><span class=\"err\">]</span><span class=\"kt\">both</span> <span class=\"kt\">method</span> <span class=\"kt\">asCollection</span> <span class=\"kt\">in</span> <span class=\"kt\">object</span> <span class=\"kt\">JavaConversions</span> <span class=\"kt\">of</span> <span class=\"k\">type</span> <span class=\"err\">[</span><span class=\"kt\">A</span><span class=\"err\">]</span><span class=\"o\">(</span><span class=\"kt\">i:</span> <span class=\"kt\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">A</span><span class=\"o\">])</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"nc\">Collection</span><span class=\"o\">[</span><span class=\"kt\">A</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"kt\">error</span><span class=\"o\">]</span><span class=\"n\">and</span> <span class=\"n\">method</span> <span class=\"n\">asIterable</span> <span class=\"n\">in</span> <span class=\"k\">object</span> <span class=\"nc\">JavaConversions</span> <span class=\"n\">of</span> <span class=\"k\">type</span> <span class=\"err\">[</span><span class=\"kt\">A</span><span class=\"err\">]</span><span class=\"o\">(</span><span class=\"kt\">i:</span> <span class=\"kt\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">A</span><span class=\"o\">])</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">lang</span><span class=\"o\">.</span><span class=\"nc\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"kt\">error</span><span class=\"o\">]</span><span class=\"n\">are</span> <span class=\"n\">possible</span> <span class=\"n\">conversion</span> <span class=\"n\">functions</span> <span class=\"n\">from</span> <span class=\"nc\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">edu.umass.nlp.ml.sequence.ILabeledSeqDatum</span><span class=\"o\">]</span> <span class=\"n\">to</span> <span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">lang</span><span class=\"o\">.</span><span class=\"nc\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">edu.umass.nlp.ml.sequence.ILabeledSeqDatum</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"kt\">error</span><span class=\"o\">]</span>   <span class=\"nc\">_crf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">(</span><span class=\"n\">trainingData</span><span class=\"o\">)</span> </code></pre></figure>\n\n<p>So here’s the fix: you can wrap your data to indicate the particular conversion\nyou would like to occur. A list of wrappers is\n<a href=\"http://www.scala-lang.org/api/current/scala/collection/JavaConversions$.html\">here</a>.\nIn my case, I want a java.lang.Iterable, so I’ll wrap it as so:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\" data-lang=\"scala\"><span class=\"k\">val</span> <span class=\"n\">trainingData</span><span class=\"k\">:</span><span class=\"kt\">Iterable</span><span class=\"o\">[</span><span class=\"kt\">ILabeledSeqDatum</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"n\">processTrainingFile</span><span class=\"o\">(</span><span class=\"n\">trainingFile</span><span class=\"o\">)</span> \n<span class=\"k\">val</span> <span class=\"n\">iw</span> <span class=\"k\">=</span> <span class=\"k\">new</span> <span class=\"nc\">IterableWrapper</span><span class=\"o\">[</span><span class=\"kt\">ILabeledSeqDatum</span><span class=\"o\">](</span><span class=\"n\">trainingData</span><span class=\"o\">)</span> \n<span class=\"nc\">_crf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">(</span><span class=\"n\">iw</span><span class=\"o\">)</span> </code></pre></figure>\n\n<p>This removes the ambiguity, allowing the compiler to proceed without baffling\nitself by its own cleverness.</p>",
      "excerpt": "Scala 2.8 includes a library that helps implicitly convert Scala objects to\nJava objects so you can keep your data in Scala-land while still using Java API\ncalls. Just import this package in your code:jj",
      "languages": null,
      "categories": [],
      "tags": ["programming","scala"]
    }
    
  

  
    ,
    {
      "title": "The Right to Advertise Adult Services",
      "permalink": "http://0.0.0.0:4321/2010/09/the-right-to-advertise-adult-services",
      "link": "http://0.0.0.0:4321/2010/09/the-right-to-advertise-adult-services",
      "date": "2010-09-08T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I don’t have a deep understanding of the law, but I think the recent closing of\nthe “Adult Services” section on Craigslist is a fascinating moment to reflect\nhow complicated and confusing regulating sin is.</p>\n\n<p>Here’s the situation, as described by Matt Zimmerman of the Electronic Frontier\nFoundation, in case you don’t read geek news:</p>\n\n<blockquote>\n  <p>On Saturday, after years of pressure from law enforcement officials, Internet\nclassified ad web site Craigslist bowed to demands to remove its “Adult\nServices” section which critics charged encouraged prostitution and other\nsex-related crimes.</p>\n</blockquote>\n\n<p>At first glance, it seems like this might be pretty cut and dry:</p>\n\n<ul>\n  <li>X is illegal</li>\n  <li>Y has an advertising section for X</li>\n  <li>Y is therefore an accomplice to acts of X</li>\n  <li>So Y should be punished</li>\n</ul>\n\n<p>But Craigslist isn’t advertising sex – its users are – and this turns out to\nbe an important difference. Important because this situation represents a sort\nof edge-case between two separate goals we have as a society:</p>\n\n<ul>\n  <li>We want to make it illegal to do, or be an accomplice to, certain acts</li>\n  <li>We also want to protect telecom carriers from being liable for the messages they carry</li>\n</ul>\n\n<p>The 1996 Communications Decency Act puts this second goal into law. It protects\npeople who serve as a carrier of information from having liability for the\nthird-party information they carry. An analogy in the physical world would be\nthat the Department of Transportation isn’t responsible for how people choose\nto use their roads. If you drink and drive, it’s your responsibility, and the\nDOT isn’t an accomplice just because it “carried” your car. In the same way,\nproviders of “online roads” (like Comcast, Google, and Craigslist) are not\nliable for the particular 0s and 1s that individuals choose to put into their\nsystems. This is a critical protection for the internet to be a viable business\nplatform. If it weren’t there, your ISP would be an accomplice if you planned a\nbank robbery over instant messenger.</p>\n\n<p>But when Craigslist hosts a classified forum titled “Adult Services,” it is\npretty clear what the intent of that forum is. They’re not just asking for any\nthird-party messages, they’re asking for a particular type of third party\nmessages, in this case one that tends to be illegal in most places.</p>\n\n<p>Does the debate actually come down to semantics? Is it a crime to host a site\ntitled “Post illegal prostitution ads here”, while a site with the\ninnuendo-laden, yet ultimately nonspecific title “Adult Services” would be\nprotected under the Communications Decency Act? What about forums where drug\nusers hang out? Or a forum where people discuss ways to speed without getting a\nticket? It gets grayer and grayer pretty quick, which is why this is an\nimportant issue to stop for a moment and think about.</p>\n\n<p>My gut reaction on this issue is, “Well, yeah. If the act is illegal then of\ncourse they shouldn’t be allowed to host advertisements for it.”</p>\n\n<p>But then I am reminded that the junctures at which it is most important to\nstand our ground on freedom of speech tend to be exactly those situations where\nit might not be comfortable to do so. Because if we start putting footnotes on\n<em>which</em> types of communication carriers are allowed to carry, then we’ve\nremoved their protections entirely. If Google has to filter one message, then\nthey have to filter them all. And that removes the very foundation of freedom\nof speech online.</p>",
      "excerpt": "I don’t have a deep understanding of the law, but I think the recent closing of\nthe “Adult Services” section on Craigslist is a fascinating moment to reflect\nhow complicated and confusing regulating sin is.",
      "languages": null,
      "categories": [],
      "tags": ["commentary"]
    }
    
  

  
    ,
    {
      "title": "Islamophobia",
      "permalink": "http://0.0.0.0:4321/2010/09/islamophobia/",
      "link": "http://0.0.0.0:4321/2010/09/islamophobia/",
      "date": "2010-09-07T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"http://www.edwardbenson.com/images/posts/islamophobia.jpg\" alt=\"Is America Islamophobic? Obama is a Muslim!\" /></p>\n\n<p>Sometimes America makes me so proud. Sometimes it just makes me sad.</p>",
      "excerpt": "",
      "languages": null,
      "categories": [],
      "tags": ["commentary"]
    }
    
  

  
    ,
    {
      "title": "It Takes 6 Clicks to Protect your Geo-privacy on Facebook",
      "permalink": "http://0.0.0.0:4321/2010/08/it-takes-six-clicks/",
      "link": "http://0.0.0.0:4321/2010/08/it-takes-six-clicks/",
      "date": "2010-08-20T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>The battle of the geo-APIs has begun! Loopt and Foursquare out to the early\nlead. Facebook hot off the starting line. Twitter revving its engines at the\ngate.  Geo-location APIs are going to bring about a huge, cool shift in the\ntypes of mobile information services we can use, but they also present many\nserious privacy and safety concerns that need to be carefully managed. The “if\nyou don’t have something to hide…” argument against privacy simply doesn’t\ncut it in the real world: life and relationships are complex. Sometimes privacy\nlets you just be alone when you want to be alone, other times it can save your\nlife.</p>\n\n<p>Don’t take it from me, take it from <a href=\"http://www.charlierose.com/view/interview/10511\">Sam\nAltman</a>, founder and CEO of\nLoopt, who describes in an interview to Charlie Rose just how delicate the\nprivacy implications of these technologies are. He even explains why it is\nimportant for these services to let you lie about your location.</p>\n\n<p>So now that the geo race has begun, it’s important to pay attention to how each\nplayer respects your privacy.</p>\n\n<p>Facebook released its “Places” feature recently, which allows users to inform\nothers where they are. What you might not know is, this feature also allows\nyour friends to tell the world where you are. In typical Facebook fashion, it\nisn’t immediately clear how to disable this feature. In fact, it takes a total\nof six clicks to protect your location privacy on Facebook.</p>\n\n<p>Here are screenshots from my Facebook account so you can see how to change your\nsettings.</p>\n\n<p>August 20, 2010 It Takes 6 Clicks to Protect your Geo-Privacy on Facebook\nEdit Delete Tags Autopost\nThe battle of the geo-APIs has begun! Loopt and Foursquare out to the early lead. Facebook hot off the starting line. Twitter revving its engines at the gate.\nGeo-location APIs are going to bring about a huge, cool shift in the types of mobile information services we can use, but they also present many serious privacy and safety concerns that need to be carefully managed. The “if you don’t have something to hide…” argument against privacy simply doesn’t cut it in the real world: life and relationships are complex. Sometimes privacy lets you just be alone when you want to be alone, other times it can save your life. \nDon’t take it from me, take it from Sam Altman, founder and CEO of Loopt, who describes in an interview to Charlie Rose just how delicate the privacy implications of these technologies are. He even explains why it is important for these services to let you lie about your location.\nSo now that the geo race has begun, it’s important to pay attention to how each player respects your privacy.</p>\n\n<p>Facebook released its “Places” feature recently, which allows users to inform others where they are. What you might not know is, this feature also allows your friends to tell the world where you are. In typical Facebook fashion, it isn’t immediately clear how to disable this feature. In fact, it takes a total of six clicks to protect your location privacy on Facebook.\nHere are screenshots from my Facebook account so you can see how to change your settings.</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/fb1.png\" alt=\"FB Privacy 1\" />\n<img src=\"http://www.edwardbenson.com/images/posts/fb2.png\" alt=\"FB Privacy 2\" />\n<img src=\"http://www.edwardbenson.com/images/posts/fb3.png\" alt=\"FB Privacy 3\" /></p>\n\n<ul>\n  <li>Click on “Account”</li>\n  <li>Click on “Privacy Settings”</li>\n  <li>Click on “Custom”</li>\n  <li>Click on “Customize Settings”</li>\n  <li>Scroll down to the “Things others share” section</li>\n  <li>Click on the “Select One” box next to “Friends can check me into Places”</li>\n  <li>Select either Enabled or Disabled</li>\n</ul>\n\n<p>Whether people want to let their friends share their location is up to them.\nThere’s no problem in publishing information that you truly don’t mind being\npublished. But it is critical that we create software, and a culture around\nthat software, that make it easy for users to choose how their information is\nused and divulged, and to that end, six clicks seems a bit many.</p>",
      "excerpt": "The battle of the geo-APIs has begun! Loopt and Foursquare out to the early\nlead. Facebook hot off the starting line. Twitter revving its engines at the\ngate.  Geo-location APIs are going to bring about a huge, cool shift in the\ntypes of mobile information services we can use, but they also present many\nserious privacy and safety concerns that need to be carefully managed. The “if\nyou don’t have something to hide…” argument against privacy simply doesn’t\ncut it in the real world: life and relationships are complex. Sometimes privacy\nlets you just be alone when you want to be alone, other times it can save your\nlife.",
      "languages": null,
      "categories": [],
      "tags": ["the web"]
    }
    
  

  
    ,
    {
      "title": "Solving Problems versus Selling Products",
      "permalink": "http://0.0.0.0:4321/2010/08/solving-problems-versus-selling-products/",
      "link": "http://0.0.0.0:4321/2010/08/solving-problems-versus-selling-products/",
      "date": "2010-08-10T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Does your company solve a problem or sell a product? When times are good, the two missions may appear the same, but when\ntimes are hard, differences will become obvious.</p>\n\n<p>The company whose mission it is to solve a problem embraces change, pivots with it, and works toward a future in which\ntheir customers have fewer problems. Will their business look the same in ten years? Don’t ask them: they operate like a\ngood defense, responding to the necessities of the surrounding environment surrounding, possibly changing the plan\ntotally.</p>\n\n<p>The company whose mission is to sell a product fights change, because change perturbs the existing market base, and that\ncreates risk. Their goal is to temporarily solve the effects of a problem, not to remove the problem. If you remove the\nproblem entirely, why would anyone need your product? Will their business look the same in ten years? They hope so. That\nway the product production can be put on autopilot while they grow business by pursuing other products in other areas.</p>\n\n<p>This distinction is important because it is a choice that must be made early on in a company’s growth, but it is one\nthat probably won’t be noticed until much later in your company’s timeline. It’s an abstract decision and a deep one, a\ndecision that will affect your entire company culture.</p>\n\n<p>Intuit, apparently, has chosen to <a href=\"http://www.latimes.com/news/opinion/commentary/la-oe-ventry-intuit-20100721,0,6498588.story\">sell a\nproduct</a>, as the LA Times reports. California is working on some great options\nto help its citizens file taxes for free, and Intuit, maker of the TurboTax program, has been spending barrels of money\nto prevent Californians from getting access to free and easy tax filing services. Intuit has demonstrated that their\nmission is not to solve the problem of complicated taxes – it is to sell you a product.\nWhat will your mission be?</p>",
      "excerpt": "Does your company solve a problem or sell a product? When times are good, the two missions may appear the same, but when\ntimes are hard, differences will become obvious.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Should the President have an Internet Kill Switch&#63;",
      "permalink": "http://0.0.0.0:4321/2010/06/should-the-president-have-an-internet-kill-switch/",
      "link": "http://0.0.0.0:4321/2010/06/should-the-president-have-an-internet-kill-switch/",
      "date": "2010-06-13T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>A new bill in the Senate proposes to give the president the authority to shut\ndown the internet in the event of an emergency. A kill switch, essentially. It\nwill be interesting to see the debate on this, particularly from the standpoint\nof how the government views its role with regard to the network infrastructure\nof the country.</p>\n\n<p>It is easy to easy to see why the pentagon would want a power like this. The\ninternet is a vector by which enemies could digitally travel to and attack the\ncountry, but unlike airports, seaports, and border crossings, there is no way\nto enforce the border. It doesn’t even have to be international; domestic crime\ngroups could attack our nuclear power plants, wall street, or any number of\ninstitutions and, right now, there is no way to pull up a paddy wagon and\ncordon off the area, so to speak. The people pushing this bill clearly see an\n“internet kill switch” as one way to provide the digital equivalent of shutting\ndown a port, grounding airplanes, or enforcing a curfew.</p>\n\n<p>The problem as I see it is that a kill switch is a rather brute way to respond\nthe risk, and it comes with collateral costs both to our liberty but also to\npublic safety.</p>\n\n<p>From the liberty standpoint, at what point should the government be allowed to\ninstruct citizens to stop communicating? That’s essentially what the internet\nboils down to – communication – so it isn’t an unfair question, even if the\ncommunication is done via a federally funded infrastructure. Some countries\nhave already begun initial discussions about whether internet access should be\nconsidered a fundamental human right, and, to the extent that it is, perhaps\nthe rights of the people outweigh the government’s need to feel secure.</p>\n\n<p>I think a much stronger argument can be made against the bill from the\nstandpoint of safety. The internet so intertwines our businesses today that it\nis impossible to predict what the effects of a national shutdown would be.\nWould surgical teams suddenly lose the ability to control their robotic\ninstruments mid-surgery? Would hydropower plants suddenly lose their links to\nthe computers that control them? Would police departments be unable to\ncoordinate investigations? While not everything depends on the internet, I\nthink an analogy to shutting down the electrical grid is in the right\ndirection.</p>\n\n<p>We need a way to protect our electronic infrastructure, and a new government\ndepartment that manages it would probably be a good thing to have around (also\na new division of the military). But instead of a kill switch, perhaps a more\ntargeted approach could be taken. Identify risk areas of our current\ninfrastructure and work to build better perimeters around those, or possibly\nlocalized kill switches: around just the wall street trading network, for\nexample, or around just the a nuclear power plant’s network.</p>\n\n<p>With a more targeted approach, the president could always still call up the\nhandfull of big telecommunications companies and say “pull the plug,” but it\nwould be an off-the-books, controversial move instead of a gun ready and\nwaiting to be drawn from the holster. And with a move that big, maybe that’s\nthe way it should be.</p>",
      "excerpt": "A new bill in the Senate proposes to give the president the authority to shut\ndown the internet in the event of an emergency. A kill switch, essentially. It\nwill be interesting to see the debate on this, particularly from the standpoint\nof how the government views its role with regard to the network infrastructure\nof the country.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Browser Plugins Considered Dangerous",
      "permalink": "http://0.0.0.0:4321/2010/06/browser-plugins-considered-dangerous/",
      "link": "http://0.0.0.0:4321/2010/06/browser-plugins-considered-dangerous/",
      "date": "2010-06-12T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>It seems like the market for browser plugins is thriving.  Firefox, Chrome, IE,\nand now even Safari all support them, and some are popular enough that even non\ntechies are likely to have them.</p>\n\n<p>In general, plugins are a cool and useful capability to have around, but I\nthink they are also holding the web back.</p>\n\n<p>Think about flash. A lot of ink has been spilled lately about the flash versus\nhtml5 issue. But had browser plugins never been a possibility, we would have\nhad to develop a rich, standards compliant canvas tag long ago, because the\nonly vector for innovation would be better html features.</p>\n\n<p>I fear the same thing will happen to browser-side databases. With the\nlikelihood diminishing that HTML5 will be able to specify a database standard\nthat pleases the required parties, we might be left to pursue the “make up”\noption of the (now defunct) Gears-style database – all the goodness of a\nclient-side database, but wrapped in a browser plugin. And just functional\nenough to keep us from feeling the urgency to standardize the technology.</p>\n\n<p>I say throw away these system-level browser plugins and lets return to the days\nof no-holds-barred unauthorized HTML extension. Let Chrome and Firefox support\nincompatible supersets of HTML, because only then will experimentation be done\nin a way that is both disrupting – the losers will have no choice but to\nimplement the standards of the victors – but also <em>open</em>. Because when you\ncompete by extending HTML (instead of writing a plugin), you do so in a way\nthat anyone is able to reproduce if they decide it is worth it to them. And\nthat is far better than the closed world of browser plugins.</p>\n\n<p>History is filled with alternating cycles of stability and disruption. After a\ngood run by the Church of Web Standards Orthodoxy, I think we’re ready for some\ndisruption.</p>",
      "excerpt": "It seems like the market for browser plugins is thriving.  Firefox, Chrome, IE,\nand now even Safari all support them, and some are popular enough that even non\ntechies are likely to have them.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "AT&#38;T&#39; Clever Trick",
      "permalink": "http://0.0.0.0:4321/2010/06/att-cever-trick.markdown",
      "link": "http://0.0.0.0:4321/2010/06/att-cever-trick.markdown",
      "date": "2010-06-04T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I think I know what AT&amp;T is up to with the recent data plan change: they’re\ntrying to switch everyone to a pay-per-MB plan just before videoconferencing\nhits the mobile market big time.</p>\n\n<p>I, perhaps like you, only use about 100 MB a month because I only use my iPhone\nfor information. Email, a website or two per day, and maps. I use my iPhone a\n  lot, but I don’t think of myself as a multimedia user. So when the new rate\n  plan came out, my first thought was, “Excellent! I can save $15 per month\n  with no change in my behavior!”</p>\n\n<p>And that’s the trick: Within the next year, the behavior of iPhone users is\nabout to change, and ATT wants to get us to willingly opt-in to a pay-per-MB\nplan before we realize that. Because once videoconferencing hits the iPhone,\neven email-only iPhone users will be gobbling up huge data charges if they\nchoose to see their phone conversations in addition to hearing them.</p>\n\n<p>And then we’ll all wish we had stayed with the all-you-can-use plan.</p>",
      "excerpt": "I think I know what AT&amp;T is up to with the recent data plan change: they’re\ntrying to switch everyone to a pay-per-MB plan just before videoconferencing\nhits the mobile market big time.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Facebook&#39;s Product is You",
      "permalink": "http://0.0.0.0:4321/2010/05/facebooks-product-is-you/",
      "link": "http://0.0.0.0:4321/2010/05/facebooks-product-is-you/",
      "date": "2010-05-22T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Much of the debate about Facebook’s new policies is missing another large\nissue. So far, the focus has been on privacy: essentially how to draw the messy\nline between public and private in the socially networked age. Just as\nimportant as where that line falls, however, is who owns the rights to use and\nredistribute the information artifacts left behind by your digital presence.</p>\n\n<p>Here’s an example from the offline world: I wrote a book for a publisher who\nlikes to put author photos on the front cover, and so I was required to grant\nthem the rights to my image. Two years later, I was walking through a book\nstore and saw my picture on a combo-pack of books that I didn’t even know\nexisted. That was weird, but it was what I was explicitly told to expect when I\nsigned my contact. I’m now a co-owner of my own image, but I got paid to share\nand I have a contract filed away. I can live with that.</p>\n\n<p>Here’s the question, though: what about that photo of you holding two beers and\nwearing a cowboy hat? Or the fact that you once listed “AIDS” as your\nrelationship status, even though you quickly changed it. Facebook’s database\nremembers. What about your religion (“Christian - Other”) or your interests\n(“acoustic rock, avocados, unicycling”) and the fact that three years ago your\nreligion was something else (“Wiccan”). What about the fact that you keep\nlooking at Christy’s beach pictures over and over – Facebook’s database now\nshows 42 times in a month – or that you are a member of the “Yes We Can!”\ngroup?</p>\n\n<p>Forget about the privacy question for a moment, and put on your green\naccountant’s visor. Let’s talk about you, the product.</p>\n\n<p>Every piece of information and every mouse click you make online is product. It\nis the product the modern web is making its money off of. Oo Nwoye hit the nail\non the head when he put it <a href=\"http://oonwoye.com/blog/2010/05/18/facebook-letter/\">this\nway</a>: “On Facebook, the\nusers are the products while the advertisers are the customers.” The question\nis, where’s your contract? How much agency do you have over the distribution of\nthis product, and what do you get out of the bargain?</p>\n\n<p>Thinking about it this way is important, because if you divide people into two\ngroups, based on their privacy stance, I think you end up with two very\ndifferent answers to the “Facebook problem”:</p>\n\n<ul>\n  <li>\n    <p>If you are not OK with your information being sold, would you be willing to pay a monthly fee to have Facebook access but be guaranteed your information wasn’t provided to third-parties? Facebook has to generate revenue to pay for the services they’re providing you, and if they can’t sell your personal information, you’re going to have to cough up a subscription fee. (As an aside, danah boyd has a great <a href=\"http://www.zephoria.org/thoughts/archives/2010/05/15/facebook-is-a-utility-utilities-get-regulated.html\">article</a> about social networking as a public utility, addressing the “I don’t approve, but can’t cancel my account” problem).</p>\n  </li>\n  <li>\n    <p>If you are OK with your information being sold, why are you letting someone else make all the money off of you? Why not sell it yourself? For those people who really don’t care if corporations know that you are the founding member of the “Soccer is for Sissies” group,  then why shouldn’t you be the one to profit from that? Either sign a profit-sharing contract with Facebook or act as your own free agent. There is a huge market opportunity here: create a browser plugin that offers your personal data to every web page you visit. You have an asking price (say, 5 cents per page) and they have an offer. If their offer meets your asking price, you send them your personal data. Triple your asking price and you sell them your entire social history as well.</p>\n  </li>\n</ul>\n\n<p>Here’s my point: the privacy debate is real and important, but in order to\ntackle the societal challenges that the social networking era is throwing at\nus, we also need to start having a conversation that addresses the marketplace\nfor our personal information. We are the products of this marketplace, every\n  one of us, but I get the impression that we would rather pretend otherwise\n  because it sounds bad to say it that way. Unless we acknowledge this bizarre\n  new world, I fear we won’t build a legal infrastructure around it that gives\n  us the individual agency we deserve.</p>",
      "excerpt": "Much of the debate about Facebook’s new policies is missing another large\nissue. So far, the focus has been on privacy: essentially how to draw the messy\nline between public and private in the socially networked age. Just as\nimportant as where that line falls, however, is who owns the rights to use and\nredistribute the information artifacts left behind by your digital presence.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Ten Rules for Radicals",
      "permalink": "http://0.0.0.0:4321/2010/04/ten-rules-for-radicals",
      "link": "http://0.0.0.0:4321/2010/04/ten-rules-for-radicals",
      "date": "2010-04-30T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><a href=\"http://en.wikipedia.org/wiki/Carl_Malamud\">Carl Malamud</a> gave an inspiring\nopening keynote for the final day of <a href=\"http://www.www2010.org/\">WWW 2010</a>.\nMalamud has spent his career fighting to free government data, video, and\ndocuments so that the public can have access to them.</p>\n\n<p>Here are his Ten Rules for Radicals. (Note: These aren’t all direct quotes\nsince they were given as part of an hour-long speech.)</p>\n\n<ol>\n  <li>Everything you do is an experiment.</li>\n  <li>`When the authorities finally fire that starting gun, run as fast as you can, so that when they get queasy and have second thoughts, it is too late to stop. As a small player, the elephant can step on you, but you can outrun the elephant.</li>\n  <li>Eyeballs rule. Build a user base, and you have much more leverage than if you are just blowing smoke.</li>\n  <li>When you achieve your objective, don’t be afraid to turn around and be nice. You can bang on the table and be a pain in the ass, but when you finally get what you want from someone, its time to cooperate.</li>\n  <li>Keep asking. Keep rephrasing the question until they can say yes.</li>\n  <li>When you get the microphone, make sure you make your point clearly and succinctly.</li>\n  <li>Get standing. One can criticize government all one wants, and they will often ignore you. But if there is something clearly wrong and you can document it and publish it, they have no choice but to listen. Get standing, and you can insist.</li>\n  <li>Try to get the bureaucrats to threaten you.</li>\n  <li>Look for places where the government is clearly overreaching – something that is totally nuts. Hit them there. (Refusing to publish state statutes is an example.)</li>\n  <li>Don’t be afraid to fail.</li>\n</ol>\n\n<p>And a hilarious comment on finding out that the FBI had been called in to\ninvestigate a “security incident” that his team of information-freeing\nvolunteers had caused:</p>\n\n<blockquote>\n  <p>“Now I’ll grant that 20,000,000 document downloads was probably more than what\nthe government was expecting, but I’ll remind you: surprising a bureaucrat\nisn’t illegal.”</p>\n</blockquote>",
      "excerpt": "Carl Malamud gave an inspiring\nopening keynote for the final day of WWW 2010.\nMalamud has spent his career fighting to free government data, video, and\ndocuments so that the public can have access to them.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Time Travel on the World Wide Web",
      "permalink": "http://0.0.0.0:4321/2010/04/time-travel-on-the-world-wide-web/",
      "link": "http://0.0.0.0:4321/2010/04/time-travel-on-the-world-wide-web/",
      "date": "2010-04-27T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>What if you could flip a switch in your browser and browse the web like it’s\n1999? If the <a href=\"http://www.mementoweb.org/\">Memento</a> project succeeds, you’ll\nsoon be able to.</p>\n\n<p>A joint project between the Los Alamos National Laboratory and Old Dominion\nUniversity, Memento seeks to add time travel as a standard capability to the\nworld wide web. “Time travel” refers to the ability to perform a computer\noperation as if were a different time than “now”: query a database as if it\nwere yesterday, for example. On the web, this would mean a standardized way to\naccess historical web resources.</p>\n\n<p>“We have a web that doesn’t have a time dimension, and it is really important\nthat we add one,” says Herbert Van de Sompel, one of the researchers who\npresented Memento at the Linked Open Data workshop at WWW 2010.</p>\n\n<p>Their proposal would have time become one of the negotiable attributes of a web\nrequest, joining other negotiable parameters such as content type and language.\nIn this system, the cnn.com home page could publish a bit of metadata pointing\nto a “Time Gate” responsible for handling time travel requests for that page. A\nweb user would be able to request cnn.com along with a time parameter\nspecifying “December 31, 1999″. The Time Gate would help negotiate a connection\nto an archival server that would provide the cnn.com page as of that point in\ntime.</p>\n\n<p>If this proposal was adopted, researchers would have a standardized way to\ndownload a web page’s contents as they existed at several points in the past, a\ntask that is difficult (sometimes impossible) and time intensive today. Casual\nweb users would also be able to travel back in time to see how a page looked on\nimportant days in history. The team is currently developing browser plugins\nthat would take a user’s entire web session back in time, literally allowing\nyou to browse the web as it was on the eve of the millennium, for example.</p>\n\n<p>The proposal still has some challenges to work through. First is the “Time\nGate” design that it uses to negotiate time. While this design allows\nthird-party archival services and plays well with existing web caches, it poses\nscalability questions from the standpoint of the HTTP negotiation process. What\nif some future negotiable HTTP parameter also utilized third-party server to\n  handle negotiation? In such a case, it would be unclear which third-party\n  server needs to be consulted, in what order, for which set of negotiable\n  parameters.</p>\n\n<p>Another question relates to the abstract nature of resources on the web, as\nJeni Tennison and John Sheradon pointed out. When a user asks for the\npopulation of London in 2000, are they asking about the population of London as\npublished in 2000 (which may be data from 1998) or are they asking about the\nactual population of London in 2000 (which may not be published until 2001)?\nFrom the standpoint of the web, the former is time travel on the document (the\ndata) and the latter is time travel on the abstract resource (the City of\nLondon). If we are to increasingly link our data sets, this scenario will arise\noften, and some guidelines for interpreting the precise meaning of a time\ntravel request will have to be addressed.</p>\n\n<p>Now, or later, or later simulating now, check out the project home page:\n<a href=\"http://www.mementoweb.org/\">http://www.mementoweb.org/</a></p>",
      "excerpt": "What if you could flip a switch in your browser and browse the web like it’s\n1999? If the Memento project succeeds, you’ll\nsoon be able to.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "The Scale of Things, from Yahoo&#33;&#39;s Perspective",
      "permalink": "http://0.0.0.0:4321/2010/04/the-scale-of-things/",
      "link": "http://0.0.0.0:4321/2010/04/the-scale-of-things/",
      "date": "2010-04-26T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Sometimes it is fun to get a picture of the scale that different organizations\ndeal with in their daily tasks. I just saw a talk from Yahoo! about their use\nof Hadoop which was rich with such numbers. Here are a few of the cooler ones:</p>\n\n<p><strong>Compute Power</strong></p>\n\n<ul>\n  <li>Yahoo has roughly 30,000 nodes running in tens of clusters.</li>\n  <li>Each node has roughly four 1TB disks, 8 cores, and 16 GB RAM</li>\n</ul>\n\n<p>This means that they’ve got 240,000 cores running.. That’s a lot of silicon.\nTheir largest cluster is 4000 machines, which they believe to be an upper limit\nwith the current version of Hadoop. This cluster handles in excess of 100,000\nhadoop jobs per day.</p>\n\n<p><strong>The Web is Big</strong></p>\n\n<p>The data that their Hadoop clusters have access to sums to over 3 Petabytes,\ncompressed and un-replicated.</p>\n\n<p>The web itself has over 2 trillion links.</p>\n\n<p><strong>Hadoop makes things Fast</strong> [1]</p>\n\n<p>Using Hadoop has improved Yahoo!’s ability to process web-scale data. Pre &amp;\nPost-Hadoop statics are pretty stunning:</p>\n\n<p>For clustering and ranking: 100s of features -&gt; 1000s of features, weeks of\nprocessing -&gt; hours of processing.</p>\n\n<p>Dictionary building across web logs: 4 weeks to run -&gt; 30 minutes to run, 2-3\nweeks to develop, 2-3 days to develop</p>\n\n<p>Link analysis: capable of handling 100s of billions of URLs -&gt; capable of\ntrillions of URLs, took months -&gt; takes days</p>\n\n<p>[1] Footnote: Of course, MapReduce systems only work well for certain types of\ncomputation. They don’t make everything fast.</p>",
      "excerpt": "Sometimes it is fun to get a picture of the scale that different organizations\ndeal with in their daily tasks. I just saw a talk from Yahoo! about their use\nof Hadoop which was rich with such numbers. Here are a few of the cooler ones:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Inflection Point of the Social Web",
      "permalink": "http://0.0.0.0:4321/2010/04/inflection-point-of-the-social-web/",
      "link": "http://0.0.0.0:4321/2010/04/inflection-point-of-the-social-web/",
      "date": "2010-04-22T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Sweaty, exhausted, the lacrosse team huddles together at half time. They are\nlosing 0-4 and the mood of the home-team crowd in the stands has already\nquieted to reflect the impending defeat.</p>\n\n<p>The whistle blows to start the second half, and they win the face-off. The play\nthey’ve devised is crazy, but it works: four seconds into the second half, they\nscore their first goal. The fans go wild. The team’s heats beat with a renewed\ndetermination. They go back to win the game, 5-4.</p>\n\n<p>An inflection point is the point on any graph where the curvature changes. Its\nthe mathematical equivalent of the pivotal goal that turns the momentum of a\nsports game around. Melodramatic sports metaphors aside, I think the social web\nmight have just hit an inflection point. And oddly, Facebook – the walled\ngarden of the social web – is the one who might have just given it to us.</p>\n\n<p>I just had a chance to scan the F8 announcements from the other day, but two\nimportant bits stuck out at me as both surprising and exciting:</p>\n\n<p>First, the <a href=\"http://opengraphprotocol.org/\">Open Graph</a> protocol. Facebook has\ncreated a standard for embedding social links within the HTML of a web page.\nWhat is important isn’t the protocol itself – many people have made similar\nattempts. What is important is that Facebook, the 1000lb gorilla in the room,\nis putting their weight behind one, and it appears to be one that plays nicely\nwith the vision of linked data that so many in the research community share.</p>\n\n<p>Second, Facebook appears to be removing their policy that prevents data export.\nPerviously, third parties were only allowed to retain your data for twenty-four\nhours. This created the ultimate dependence relationship on Facebook: make any\nsocial application you want, but you will forever be dependent on the Facebook\nAPI to make it work. Now, if I’m hearing Zuckerberg’s keynote correctly,\nFacebook will allow third-party services to import your Facebook data into\ntheir own databases. There may be a catch – I haven’t read the TOS yet – but\nif there isn’t, this is a big deal because it bulldozes an enormous hole\n  through Facebook’s walled garden.</p>\n\n<p>I think Facebook may have assessed their adoption numbers and trajectory and\ndecided that user lock-in is no longer important because of the sheer momentum\nthey have behind their social platform. So they can now relax their lock-in\npolicies and aim their sites on web-wide service integration.</p>\n\n<p>What are your reactions to Facebook’s announcement?</p>",
      "excerpt": "Sweaty, exhausted, the lacrosse team huddles together at half time. They are\nlosing 0-4 and the mood of the home-team crowd in the stands has already\nquieted to reflect the impending defeat.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Newspapers are Dead&#46; Long Live News&#33;",
      "permalink": "http://0.0.0.0:4321/2010/04/newspapers-are-dead-long-live-news/",
      "link": "http://0.0.0.0:4321/2010/04/newspapers-are-dead-long-live-news/",
      "date": "2010-04-09T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I saw an interesting talk at CSAIL today by <a href=\"http://nickbilton.com/\">Nick\nBilton</a>, the lead technology writer for the New York\nTimes <a href=\"http://bits.blogs.nytimes.com/\">Bits Blog</a>.</p>\n\n<p>He talked about a lot of things – data visualizations, the multi-tasking\nlifestyle, Internet-enabled journalism. He left an impression that the New York\nTimes is way ahead of the curve in terms of news in the Internet Age. While\ntheir flagship offering may still be traditional ink on pulp, they have a\nfully-staffed R&amp;D lab dedicated to prototyping new ways of finding, composing,\nand distributing news with technology. For an organization that uses old\nEnglish text for its logo, that’s impressive.</p>\n\n<p>But what struck me as most interesting, given his position, was his\nmatter-of-fact attitude toward the changes in news: Newspapers will become\nextinct. Maybe in five, ten, or twenty years – whenever flexible OLED screens\nbecome cheap enough to use instead of paper. And in the face of the\nfree-for-all publication platform that is the web, the traditional model of a\nselect few organizations providing news to the masses will likely die out too.\nYet there will always be news. And there will always be a market for news\norganizations and journalists, just as there is a market for experts in any\nfield. They just won’t interact with us the same way they do now.</p>",
      "excerpt": "I saw an interesting talk at CSAIL today by Nick\nBilton, the lead technology writer for the New York\nTimes Bits Blog.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Close your Laptop and pull out a notepad",
      "permalink": "http://0.0.0.0:4321/2010/03/close-your-laptop-and-pull-out-a-notepad/",
      "link": "http://0.0.0.0:4321/2010/03/close-your-laptop-and-pull-out-a-notepad/",
      "date": "2010-03-25T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><img src=\"http://www.edwardbenson.com/images/posts/cyl1.jpg\" alt=\"Close your Laptop\" />\n<img src=\"http://www.edwardbenson.com/images/posts/cyl2.jpg\" alt=\"Close your Laptop\" /></p>",
      "excerpt": "An exercise in handwriting.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "The Irony of Wikileaks",
      "permalink": "http://0.0.0.0:4321/2010/03/the-irony-of-wikileaks/",
      "link": "http://0.0.0.0:4321/2010/03/the-irony-of-wikileaks/",
      "date": "2010-03-24T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>It’s been an interesting year for WikiLeaks. Having broken a number of\nimportant stories, they’re famous enough now that people outside the internet\ncommunity have a chance at knowing who they are. But they’ve also had problems.\nThey’ve shut down the site for a significant fundraising goal, and now,\naccording to their <a href=\"http://twitter.com/wikileaks/\">twitter feed</a>, they’re being\n<a href=\"http://twitter.com/wikileaks/status/10961072669\">pursued by the US Government</a>\nfor preparing to leak a murder video in which Uncle Sam is allegedly caught\n  with the smoking gun.</p>\n\n<p>First I want to acknowledge that a site like WikiLeaks is treading on grey\nterritory by its very definition. There is a fine line between classified\ninformation and whistleblower-worthy information. While the ideological goal of\nWikiLeaks — to provide the world’s first truly free press — is noble, there is\nalso a reason why organizations, like individuals, need privacy. Publishing the\ndetails of banking negotiations between Iceland and Britain, for example,\ndoesn’t seem very noble to me. No more noble than if I published messy divorce\nproceedings I found in a neighbor’s trash can. But there have also been many\ninstances where WikiLeaks has fearlessly exposed wrongdoing that would have\notherwise been covered up.</p>\n\n<p>Jumping over the philosophical argument though, the recent events concerning\nWikiLeaks got me thinking: how could we design a better WikiLeaks that is\nresistant to the problems it currently has? Namely, a WikiLeaks that 1) doesn’t\nneed fundraising, and 2) can’t be shot by angry spies. What if WikiLeaks was a\nsort of Wiki-BitTorrent, served by thousands of people around the world running\na background process on their computers. No fundraising needed here, it’s all\nP2P. And if the Wiki is maintained WikiPedia style, then we no longer need to\npay for a centralized staff to curate it. Plus, there’s no centralized staff to\nkill or jail. It can be a decentralized, collaborative process.</p>\n\n<p>And then I realized the irony. What if this experiment in citizen’s power is\nsuccessful precisely because it is a dictatorship?</p>\n\n<p>If WikiLeaks was P2P, then it could be attacked — poisoned at the\ninfrastructural level by the governments and corporations that do not want to\nsee it succeed. Even worse, a P2P WikiLeaks could be left standing, but its\ncontent could be poisoned with fake and misleading files. Sort of how the RIAA\nuploads music files to file-sharing networks that actually just contain 3\nminutes of silence. With the signal-to-noise ration low enough, the whole\noperation would be discredited, and the site would essentially be useless. Even\nif such information-poisoning wasn’t known by the public, how could anyone\n  trust an anonymously curated site to provide reliable truth on such secretive\n  subjects?</p>\n\n<p>It seems a single point of control  — the editor — might be necessary for\nWikiLeaks to succeed, because we need a way to know whether to trust the\nexplosive documents it publishes. If only we could place our absolute trust in\nan editor, then we can be assured of the veracity of the leaked documents.</p>\n\n<p>And that makes WikiLeaks just as old fashioned as it is revolutionary.</p>",
      "excerpt": "It’s been an interesting year for WikiLeaks. Having broken a number of\nimportant stories, they’re famous enough now that people outside the internet\ncommunity have a chance at knowing who they are. But they’ve also had problems.\nThey’ve shut down the site for a significant fundraising goal, and now,\naccording to their twitter feed, they’re being\npursued by the US Government\nfor preparing to leak a murder video in which Uncle Sam is allegedly caught\n  with the smoking gun.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Data Driven Computer Science",
      "permalink": "http://0.0.0.0:4321/2010/03/data-driven-computer-science/",
      "link": "http://0.0.0.0:4321/2010/03/data-driven-computer-science/",
      "date": "2010-03-22T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Does a growing segment of computer science have more in common with particle\nphysics than algorithm design?</p>\n\n<p>Consider five small factoids:</p>\n\n<ul>\n  <li>When David Karger <a href=\"http://groups.csail.mit.edu/haystack/blog/2010/02/04/more-progress-with-list-it/\">posted</a> about <a href=\"http://groups.csail.mit.edu/haystack/listit/\">List.it</a>’s growing user adoption (more than 14,000!) a few weeks ago, the primary benefit he cited were the mounds of usage data the Haystack group now has available to analyze</li>\n  <li>Any major systems conference today is bound to have several star papers from the big industry players — Google, Yahoo, Microsoft, Facebook, etc — containing research made possible by company-proprietary data sets</li>\n  <li>Academics in natural language processing struggle to compete with companies like Google when it comes to algorithms that need lots of data. Google simply has so much data, and so many computers, that they can do heavy computational lifting others can not.</li>\n  <li>One of the prizes in Yahoo!’s <a href=\"http://labs.yahoo.com/ksc\">Key Scientific Challenges</a> contest is access to a portfolio of their private data sets for research</li>\n  <li>The <a href=\"http://eyebrowse.csail.mit.edu/\">Eyebrowse</a> project is motivated, in part, by the fact that as researchers, we have no idea how people actually use the web. This is the sole privilege of companies like Google, Microsoft, and Yahoo! that own and run advertisement networks that track your movements across the web. Among other things, Eyebrowse is a research project to help researchers gain access to this information.</li>\n</ul>\n\n<p>It is clear that there is a growing subset of computer science that is not\nabout computers, but rather about the information we suddenly have available as\na result of computers. What’s interesting is that this new type of study is\nfound scattered throughout the subfields of computer science, yet it is\ndistinctly different in nature than traditional computer science research. This\nbegs the question of whether we need to adapt our existing approaches to\nresearch and education to reflect this new type of work.</p>\n\n<p>Does the research start at the generation of the data set, for example, or the\nanalysis of it? This is an incredibly important question because a good data\nset will make or break a research paper. Should PhD students be spending their\nfirst two years building and marketing a platform — essentially running a\nstartup company — and then the following four years analyzing the usage data it\ngenerated? Should they take a lesson from Business School students and embed\nthemselves in corporations, providing them access to proprietary data sets for\nstudy? Should they limit themselves to studying only public data sets?</p>\n\n<p>Who pays to build data sets? Good data sets are expensive to obtain. Particle\nphysicists spend billions of dollars constructing particle accelerators just so\nthey can record a few milliseconds of good data. But governments willingly\nprovide the money and resources to help them gather this data because there\nisn’t a market for gluon data. There is, however, a market for your social\nnetworking behavior and web advertising clicks, so we shouldn’t hold our\nbreaths waiting for the NSFs of the world to fund a multi-billion dollar social\nnetwork just to gather behavioral data.</p>\n\n<p>Should we require researchers to publish data sets alongside their papers? My\nsense from biology students is that some biology labs today defensively guard\ntheir data to make sure they beat others to publication. How do we avoid data\nhoarding while still respecting the fact that generating a good data set takes\na lot of insight and work?</p>\n\n<p>If trends continue, datasets will become an increasingly important fuel for\ncomputer science research. Hopefully we can learn from the other scientific\ndisciplines about how to cope with being data-driven and adopt community\nstandards that encourage an environment of collaboration and sharing.</p>",
      "excerpt": "Does a growing segment of computer science have more in common with particle\nphysics than algorithm design?",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Uccello&#39;s Chalice",
      "permalink": "http://0.0.0.0:4321/2009/10/uccellos-chalice.markdown",
      "link": "http://0.0.0.0:4321/2009/10/uccellos-chalice.markdown",
      "date": "2009-10-01T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Amazing. This is Paolo Uccello’s wireframe rendering of a chalice in the year\n1450 – right around the time when perspective was being invented.</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/uccello.jpg\" alt=\"Uccello's Chalice\" /></p>\n\n<p>To think that the birth of the Renaissance would look so much like the birth of\ncomputer graphics..</p>",
      "excerpt": "Amazing. This is Paolo Uccello’s wireframe rendering of a chalice in the year\n1450 – right around the time when perspective was being invented.",
      "languages": null,
      "categories": [],
      "tags": ["random"]
    }
    
  

  
    ,
    {
      "title": "How Safari and Firefox handle HTML 5 Manifest files",
      "permalink": "http://0.0.0.0:4321/2009/09/how-safari-and-firefox-handle-html5-manifest-files",
      "link": "http://0.0.0.0:4321/2009/09/how-safari-and-firefox-handle-html5-manifest-files",
      "date": "2009-09-26T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I was doing some experiments with Adam in the lab on Friday, and we discovered\nsome interesting variations in the way that Firefox and Safari implement the\nHTML 5 Cache Manifest specification. I think this is a particularly important\nfeature to have implemented consistently across platforms because it is the\nmake-or-break feature of HTML5 that will permit web applications to function\noffline.</p>\n\n<h2 id=\"first-what-is-the-manifest\">First, what is the manifest?</h2>\n\n<p>For people who haven’t heard about this feature before, the manifest is\nessentially a special file that lists portions of a web site that should be\ncached locally for offline access. This is the feature of HTML 5 that will\nstandardize the type of “airplane mode” access that GMail users have with\nGoogle’s custom Gears plugin. The manifest is served as a regular old file,\nwith MIME type <code class=\"highlighter-rouge\">text/cache-manifest</code>, and is linked from the <code class=\"highlighter-rouge\">html</code> tag itself,\nas follows:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;html</span> <span class=\"na\">manifest=</span><span class=\"s\">\"site.manifest\"</span><span class=\"nt\">&gt;</span>\n\n ..\n\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre></div></div>\n\n<p>Once a web site is marked as being cached, then the browser will use the local\ncached copy of all the files specified in the manifest instead of attempting to\nload them from the internet. Say you’re on an airplane and type in the URL for\n<code class=\"highlighter-rouge\">http://my_cached_site.com</code>. The browser will recognize it as a cached one,\nload it from its local storage instead, and then use a new JavaScript API to\ninform the web site that it is running in offline mode. So now for the\nimportant part, how do these two browsers (Firefox and Safari) handle this\nfile?</p>\n\n<h2 id=\"firefox\">Firefox</h2>\n\n<p>Upon loading an HTML5 document with a manifest attached, Firefox firsts asks\npermission to cache the site offline before requesting the manifest file from\nthe server. Here is how the toolbar looks on my browser:</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-firefox1.png\" alt=\"Firefox 1\" /></p>\n\n<p>And here is the server log (I’m using a Rails project to test this) to show\nthat the manifest was not yet loaded:</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-log1.png\" alt=\"Log 1\" /></p>\n\n<p>If you choose to allow offline caching, the web browser then requests the cache\nfile, as can be seen from this screen shot.</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-log2.png\" alt=\"Log 2\" /></p>\n\n<p>Now here’s the cool thing, I set the headers on the manifest file such that the\nmanifest file itself should also be cached on the client side:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> headers[\"Expires\"] = \"Fri, 30 Oct 2010 14:19:41 GMT\"\n headers[\"Cache-Control\"] = \"max-age=3600, must-revalidate\"\n</code></pre></div></div>\n\n<p>And the result of this is that the subsequent load, no files at all are loaded\nfrom Firefox – it operates entirely offline. Notice the completely empty\nserver log as I reload the site 2..n times.</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-log3.png\" alt=\"Log 3\" /></p>\n\n<h2 id=\"safari\">Safari</h2>\n\n<p>Now let’s look at how Safari does it. Upon loading the web page, Safari also\ndoes not load the manifest file, as can be seen from this screen shot:</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-log4.png\" alt=\"Log 4\" /></p>\n\n<p>However, it also does not ask any questions about offline access. The next time\nI load the web page, something strange happens. Safari checks the manifest file\ntwice and then doesn’t load the actual HTML page (because it doesn’t have to).\nThe double-loading of the manifest file appears to be on the second page load,\nnot split 1/1 between the page departure and subsequent reload. A little\nstrange, if you ask me.</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-log5.png\" alt=\"Log 5\" /></p>\n\n<p>Furthermore, when I reload the page, despite the HTTP headers specifying that\nthe manifest should be cached, Safari reloads the manifest file. Though, at\nleast it only loads it once for every subsequent time:</p>\n\n<p><img src=\"http://www.edwardbenson.com/images/posts/manifest-log6.png\" alt=\"Log 6\" /></p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>I’m no spec-master, but it seems like Firefox’s implementation of this feature\nis what I would want to happen as a web architect, while Safari’s behavior\nseems a bit strange.</p>\n\n<p>Firefox:</p>\n\n<ol>\n  <li>Only loads the web page once</li>\n  <li>Asks the user for permission to enter offline mode</li>\n  <li>Only downloads the manifest file once if given permission</li>\n  <li>Then obeys HTTP Cache Control headers to suppress reloading the manifest file on future loads</li>\n</ol>\n\n<p>If Safari were to also behave like this, there are a few fixes that need to be\nimplemented. Namely:</p>\n\n<ol>\n  <li>Ask the user if offline access should be allowed</li>\n  <li>Load the manifest when the user loads the page the first time (and approves offline mode), not the second time, when the user might be on an airplane</li>\n  <li>Stop loading the manifest file multiple times in a single page load</li>\n  <li>Start obeying the HTTP cache headers so that zero web connections are necessary if the cache says so</li>\n</ol>\n\n<p>Safari’s Manifest handling quirks aside, both browser teams should be applauded\nfor so aggressively implementing the HTML5 spec. It is a real treat as someone\n  researching web platforms to get to test the in-progress spec on real\n  browsers instead of just talking about what might eventually happen down the\n  road.</p>\n\n<p>This article is\n<a href=\"http://groups.csail.mit.edu/haystack/blog/2009/09/26/how-safari-and-firefox-handle-html-5-manifest-files/\">cross-posted</a>\non the <a href=\"http://groups.csail.mit.edu/haystack/blog/\">Haystack Blog</a>.</p>",
      "excerpt": "I was doing some experiments with Adam in the lab on Friday, and we discovered\nsome interesting variations in the way that Firefox and Safari implement the\nHTML 5 Cache Manifest specification. I think this is a particularly important\nfeature to have implemented consistently across platforms because it is the\nmake-or-break feature of HTML5 that will permit web applications to function\noffline.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Will the Namespace Traffic Jam Kill RDFa in HTML5?",
      "permalink": "http://0.0.0.0:4321/2009/09/will-namespace-traffic-jam-kill-rdfa",
      "link": "http://0.0.0.0:4321/2009/09/will-namespace-traffic-jam-kill-rdfa",
      "date": "2009-09-21T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>One of the most exciting aspects of the (in-progress) HTML5 specification is\nthe number of data-centric features it contains. It’s almost as if the\ncommittee is saying a big, “OK, OK! We heard you!” to all the data-heads out\nthere and is providing not one, not two, not three, but four different ways to\naccess and manage structured data from within the client browser:</p>\n\n<ol>\n  <li><strong>Data Attributes</strong>, are key-value pairs that may be added to any DOM node</li>\n  <li><strong>Microdata</strong> provides a way to interweave objects and object-properties amidst the DOM</li>\n  <li><strong>RDFa</strong> provides a way to interweave RDF amidst the DOM</li>\n  <li><strong>Client-side Database Support</strong> provides a full relational data access from JavaScript (the spec says this will be SQL compliant, but in reality it will likely just be the SQLite subset of SQL).</li>\n</ol>\n\n<p>These are all great developments, and will no doubt bring about a lot of\ncreativity about how data can be used on the client-side, but what interests me\nthe most is why the HTML5 working group felt the need to include Microdata\nalongside RDFa. The capabilities of HTML5 Microdata and RDFa are nearly\nidentical, albeit with slightly different terminology. Both provide a way to\nembed data within HTML attributes and tag contents. Both allow for both named\nentities and blank nodes. And both allow for a variety of more complex\nconstructions, such as lists and HREF property values.</p>\n\n<p>One of the only real differences, as I can tell from glancing over the specs,\nis that RDFa requires URIs whereas Microdata simply uses ordinary strings to\nreference entities and properties. And that is what worries me: one of the\nbiggest benefits of RDF is its use of URIs, yet URIs seem to be exactly what is\npreventing the adoption of RDF. One problem is probably that URIs look funny as\ndata model elements, even to a programmer.</p>\n\n<p>“A person has name” is much more natural sounding than “A\n<code class=\"highlighter-rouge\">http://csail.mit.edu/Contact#Person</code> has a\n<code class=\"highlighter-rouge\">http://csail.mit.edu/Contact#name</code>”.  We think of our code in natural language\nterms, and URIs obfuscate our realp world metaphors. Far more serious a problem\nis the namespace traffic jam that currently exists. If I want to publish an RDF\ndocument that describes this blog, for example, best practice would have me\ndraw class types and property types from no less than six ontologies!</p>\n\n<ul>\n  <li>The RDF ontology to describe object properties</li>\n  <li>The RDFS ontology to describe object classes and labels</li>\n  <li>The Dublin Core (DC) ontology to describe the titles, authors, and the like</li>\n  <li>The Friend of a Friend (FOAF) ontology to describe my contact information</li>\n  <li>The XSD ontology to describe literal dates, strings, and numbers</li>\n  <li>And yet another, custom, ontology to describe everything else particular to the blog</li>\n</ul>\n\n<p>That is already 6 ontologies, and we haven’t even raised the possibility of\nusing OWL Time, Snap, Span, and GeoOWL for things like time and space\ndescription! Even for a semantic web developer, the complexity of managing all\nof these ontologies, and the namespaces that go with them, becomes pretty\nburdensome pretty quickly.</p>\n\n<p>And that is why I worry about the future of RDFa in HTML5. It appears that the\nMicrodata specification in HTML5 is essentially the RDF graph data model with\nthe URIs neutered out. Given essentially the same data model, no doubt most\ndevelopers will pick the easier of two formats to implement. In order to get\nmore people on the RDF bandwagon, we need to make the RDF path just as easy to\nfollow as the Microdata one.</p>\n\n<p>How can this be done?  If you ask me, the best way is to get rid of this\nnamespace traffic jam and cultivate a set of community-oriented ontologies.\nRather than trying to create base ontologies that address abstract universal\nconcepts, why not try to have each community standardize a single ontology for\ntheir particular domain. Have WordPress and Blogger sponsor the Blog Ontology.\nHave Amazon.com and eBay sponsor the Marketplace Ontology. Have Facebook and\nMySpace sponsor the Social Ontology.</p>\n\n<p>Then, instead of reusing bits from other ontologies, such as dc:creator or\nfoaf:name, have each of these community-focused ontologies be self-sufficient,\ncovering all the concepts necessary for their domain. We can always apply\nmapping rules to distinguish between social:name and store:book-author-name\nlater.</p>\n\n<p>With only a single ontology per domain area to worry about, the namespace\ntraffic jam will disappear and it will be easier for people to get on board\nwith RDF and RDFa.  All in all, it seems the good news coming out of the HTML5\nspec is that we can expect rich data annotation to soon be arriving to HTML\ncontent everywhere. But what we need to work on as a community is a way to make\nURIs, and the Ontologies that give them meaning, easier for programmers to use\nso that the web won’t just be full of data with Microdata, but full of linked\ndata with RDFa.</p>",
      "excerpt": "One of the most exciting aspects of the (in-progress) HTML5 specification is\nthe number of data-centric features it contains. It’s almost as if the\ncommittee is saying a big, “OK, OK! We heard you!” to all the data-heads out\nthere and is providing not one, not two, not three, but four different ways to\naccess and manage structured data from within the client browser:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "A More Subtle Wordpress Security Hole",
      "permalink": "http://0.0.0.0:4321/2009/09/subtle-wordpress-security-hole",
      "link": "http://0.0.0.0:4321/2009/09/subtle-wordpress-security-hole",
      "date": "2009-09-08T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>This has come up twice in one day over here at the Haystack group, so I thought\nI’d post it here. Using Emacs and Vi to configure Wordpress can expose your\ndatabase login and password to the world.</p>\n\n<p>Here is why: Wordpress stores this configuration information in a file called\nwp-config.php that lives in the root of your install. This files contents\naren’t visible to web visitors because its .php extension causes to be\ninterpreted by PHP instead of returned to the web user. Emacs, by default, will\nsave a backup file of anything you edit in the same directory. This file will\nend with a tilde character (~).</p>\n\n<p>This means that if you use a non-customized version of Emacs to edit your\nwp-config.php file, you’ll get a second file called wp-config.php~. The .php~\nextension is not registered to any particular MIME type, and so it will be\nreturned, in full, to the remote user as text, revealing your database server,\nlogin, and password with it.</p>\n\n<p>So please, if you use Emacs and have Wordpress, check your WP install directory\nfor any Emacs backup files and delete them!  There’s enough Wordpress hackery\n  going around already this week :)</p>",
      "excerpt": "This has come up twice in one day over here at the Haystack group, so I thought\nI’d post it here. Using Emacs and Vi to configure Wordpress can expose your\ndatabase login and password to the world.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "More Six Degrees: An Experimental Study of Search in Global Social Networks",
      "permalink": "http://0.0.0.0:4321/2009/09/more-six-degrees",
      "link": "http://0.0.0.0:4321/2009/09/more-six-degrees",
      "date": "2009-09-08T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>The followup paper to the prior one I summarized here, also published in\nScience, re-does the Milgram letter experiments over email. Before going\nfurther, here is the citation:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> Dodds, P. , Muhamad, R., Watts, D.\n An Experimental Study of Search in Global Social Networks.\n Science Vol 301. 8 August 2003.\n</code></pre></div></div>\n\n<p>They take the letter-writing experiments global, ultimately involving over\n60,000 people in 13 countries, all trying to route messages to one of 18\ntargets with only local information. They found the following bits of\ninteresting information:</p>\n\n<ul>\n  <li>Friends are routed to far more than other relationship-types</li>\n  <li>Work ties, School ties, and family ties are the three highest sources of the acquaintance, in decreasing order</li>\n  <li>People route to “fairly-close” friends more often than very close friends.</li>\n</ul>\n\n<p>They verify that email, as with letters, reaches its target in 5-7 hops using\nlocal-knowledge social routing. And they find that routing in this experiment\nwas fairly egalitarian – that is, no one person was critical to the success of\nthe messages reaching targets. This is an interesting experiment to see how the\nprior letter-writing one would apply to the digital world. In addition, it\ncollected some useful statistics about the types of people we choose when\ntrying to route information to a target.</p>",
      "excerpt": "The followup paper to the prior one I summarized here, also published in\nScience, re-does the Milgram letter experiments over email. Before going\nfurther, here is the citation:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Controller Specific TTNavigation URLs with Three20",
      "permalink": "http://0.0.0.0:4321/2009/09/controller-specific-ttnavigation-urls",
      "link": "http://0.0.0.0:4321/2009/09/controller-specific-ttnavigation-urls",
      "date": "2009-09-04T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>One of the more unique parts of the programming style that comes with the\nThree20 framework its its URL navigation style via the TTNavigator class. This\nclass is intimately tied in with table cell-based navigation. But what about\nwhen you have a URL that is context sensitive. That is, it doesn’t route to a\ngeneral function, but rather a specific instance. Here is a scenario like the\none I have in my code: I have a “profile” view that allows people to publish\nvarious social links about themselves, and one of these is email. When you\nclick the email table cell, I would like it to trigger a message to that\ncontroller which opens up the email client: <strong>[self sendEmail];</strong></p>\n\n<p>The problem is that TTTableItem objects want URLs, not delegates and selectors.\nHow do I wire up a URL to this particular controller instance instead of just a\ngeneral one?  The answer is to stop thinking of TTNavigator routes as something\nthat has to be setup at application start time.</p>\n\n<p>I don’t know if you think like this, but I realized I had subconsciously been\nthinking about routes the Ruby on Rails way – parameters that are only mutable\nduring initialization. But TTNavigator routes can be changed any time. So here\nis how I implemented the email link.  Each time the PersonController\ninitializes, I have the following code:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> TTNavigator* navigator = [TTNavigator navigator];\n TTURLMap* map = navigator.URLMap;\n \n [map removeURL:@\"app://person/email\"]\n [map from:@\"app://person/email\"\n      toViewController:self\n      selector:@selector(sendEmail)];\n</code></pre></div></div>\n\n<p>Notice how I first remove any existing routes, and then I re-wire that route to\nthe particular controller that has just been initialized. Then when I create my\ntable cell, I can just use a URL as always:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> [cells addObject:\n        [TTTableImageItem itemWithText:@\"Send Email\"\n                          imageURL:@\"bundle://email.png\"\n                          URL:@\"app://person/email\"]];\n</code></pre></div></div>\n\n<p>And that is it! Let me know how you have solved the same problem. As Three20\ndoesn’t have much in the way of documentation, I would love to hear how other\nObjective-C hackers are handling situations like this.</p>",
      "excerpt": "One of the more unique parts of the programming style that comes with the\nThree20 framework its its URL navigation style via the TTNavigator class. This\nclass is intimately tied in with table cell-based navigation. But what about\nwhen you have a URL that is context sensitive. That is, it doesn’t route to a\ngeneral function, but rather a specific instance. Here is a scenario like the\none I have in my code: I have a “profile” view that allows people to publish\nvarious social links about themselves, and one of these is email. When you\nclick the email table cell, I would like it to trigger a message to that\ncontroller which opens up the email client: [self sendEmail];",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "A Formal Model for Travers & Milgram's Letter Experiments",
      "permalink": "http://0.0.0.0:4321/2009/09/formal-model-for-milgrams-letter-experiments",
      "link": "http://0.0.0.0:4321/2009/09/formal-model-for-milgrams-letter-experiments",
      "date": "2009-09-03T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Back to school next week, so in my never ending quest to learn how to do Real\nResearch, I’m going to try to begin reading papers regularly. To keep momentum\n(and to be a better blogger), I’ll write summaries here.</p>\n\n<p>First up is Identity and Search in Social Networks by Watts, D.J.; Dodds, P.S.;\nNewman, M.E.J. from Science Vol 296, 2002. They create a formal model to\ndescribe social networks which predicts similar path-lengths as Travers and\nMilgram’s famous letter-writing experiments in the 1960s.</p>\n\n<p>For those have haven’t heard, these experiments are where the term “six degrees\nof separation” come from. The two scientists randomly chose residents in\nNebraska and Massachusetts to send a letter to a target person in Boston, and,\nif they didn’t know the person directly they were to mail it to the person they\n  thought might know them with the same instructions.</p>\n\n<p>They found that the average length of the chain from random sender to target\nwas about 6 (and, as an aside, that the probability of termination at any point\nin the path was 0.25). Watts, Dodds, and Newman creates a tunable social\nnetwork model that is able to predict the results of Travers and Milgram, but\nalso resembles many real-world computer science problems.</p>\n\n<p>The essence (read: oversimplification) of their model is that individuals are\ndescribed by (1) connections to friends, and (2) a feature vector of traits,\nand (3) a tendency to interact with and make social decisions based on\nhierarchy, where hierarchy is expressed within the feature vector.  Setting up\nthe model as such, it stands to reason that an individual with only local\ninformation – that is, knowledge of their own feature vector and the feature\nvectors of their friends – would route a message to a target T to the friend\nwhose feature vector best matches that of the target. Approaching the world\nhierarchically, such a friend is most likely to be in an overlapping social\ngroup to the target. They then test their model with a variety of different\nparameters, with a few interesting findings:</p>\n\n<ul>\n  <li>If H, the feature vector, is of too high a dimensionality, the path becomes a random walk. This matches real-world intuition: if we were unable to bucket our social network into groups, we would have trouble deciding which friend to turn to for a particular need.</li>\n  <li>Searchable networks (those for which senders can locate their targets with relatively short paths) tend to have a positive homophily parameter. Homophily, apparently, is the tendency of individuals to associate with like individuals, as opposed to dissimilar people. This also makes intuitive sense: if you can reliably predict what types of associations a friend has by that friend’s feature-vector, then you can make good guesses as to whether your friend is a good routing choice for a particular target.</li>\n</ul>\n\n<p>And, perhaps most interestingly, when tuned to simulate the conditions of the\nTravers and Milgram experiments, the model predicts that the average path\nlength between a randomly chosen source and target is 6.7 – right in line with\nthe “six degrees of separation” we all recite. Takeaways: An interesting model\nboth for its assumptions of how social networks can be formally characterized\nand how localized routing decisions work. Its routing algorithm produces paths\nof equal average length to observed human behavior.</p>",
      "excerpt": "Back to school next week, so in my never ending quest to learn how to do Real\nResearch, I’m going to try to begin reading papers regularly. To keep momentum\n(and to be a better blogger), I’ll write summaries here.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "HTML's Three Competing Data Formats",
      "permalink": "http://0.0.0.0:4321/2009/08/htmls-three-competing-data-formats",
      "link": "http://0.0.0.0:4321/2009/08/htmls-three-competing-data-formats",
      "date": "2009-08-28T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I just read an interesting <a href=\"http://www.barklund.org/blog/2009/08/28/html-5-datasets/\">blog\npost</a> about the HTML5\nDataSet specification which really got me thinking about the state of data on\nthe web. In short, it seems the battle for bringing well-structured data to\nHTML has been won. Not that there was ever really an opposition, but it is\nclear now that the future of the web really does hold potential for structured\nre-use of the data within.</p>\n\n<h2 id=\"custom-data-attributes\">Custom Data Attributes</h2>\n\n<p>The <a href=\"http://dev.w3.org/html5/spec/Overview.html#embedding-custom-non-visible-data\">custom data\nattribute</a>\nsection of the HTML5 spec provides a standard way to embed key-valued metadata\ninside any HTML element. Essentially, any attribute beginning with data- will\nbe treated as a special data item that you can access from the DOM API. For the\njQuery crowd, it appears to natively provide the same functionality that\n<a href=\"http://docs.jquery.com/Internals/jQuery.data\">jQuery.data</a> does. While this is\na very rudimentary form of data storage, it will go a long way toward making\nthe DOM useful to developers.  From the standpoint of Model-View-Controller\nseparation, the DOM is currently a view-only part of the puzzle. This enables\nit to serve as the model as well, possibly resulting in reduced complexity in\nyour code. Look at the example the W3C provides, below:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> &lt;div class=\"spaceship\" data-id=\"92432\"\n      data-weapons=\"laser 2\" data-shields=\"50%\"\n      data-x=\"30\" data-y=\"10\" data-z=\"90\"&gt;\n  &lt;button class=\"fire\"\n          onclick=\"spaceships[this.parentNode.dataset.id].fire()\"&gt;\n   Fire\n  &lt;/button&gt;\n &lt;/div&gt;\n</code></pre></div></div>\n\n<p>Here we see a DIV node which, in addition to representing a spaceship visually\non the page, now also can contain the data attributes about that spaceship\nnecessary for the web application to keep its state. Can it be scraped? Sure,\nbut this probably isn’t where you want to stash data intended for external\nre-use. Data attributes don’t support URIs, for one thing, nor do they support\nanything more complex than simple key-value attributes attached do DOM nodes.\nFor these features you’ll need RDFa or Microformats.</p>\n\n<h3 id=\"microdata\">Microdata</h3>\n\n<p>Going one step further, HTML5 provides a definition for something it terms\n<a href=\"http://dev.w3.org/html5/spec/Overview.html#microdata\">Microdata</a>. Microdata,\nlike data attributes, are a way to define key-value paris within your HTML\ntext, but they have a few important differences:</p>\n\n<ul>\n  <li>\n    <p>Items can be named:</p>\n\n    <div item=\"\" id=\"amanda\">\n  </div>\n  </li>\n  <li>\n    <p>Properties can be added outside of the node that represents the item:</p>\n\n    <div item=\"\" id=\"amanda\">\n  Name: &lt;span itemprop=\"name\"&amp;gtAmanda&lt;/span&gt;\n  </div>\n  </li>\n  <li>\n    <p>Property subjects can be specified explicitly to avoid ambiguous parsing:</p>\n\n    <div item=\"\" id=\"amanda\">\n Name: &lt;span itemfor=\"amanda\" itemprop=\"name\"&amp;gtAmanda&lt;/span&gt;\n </div>\n  </li>\n  <li>\n    <p>Items can have other items as values, not just literal types:</p>\n\n    <div item=\"\" id=\"amanda\">\nBand: &lt;span itemfor=\"amanda\" itemprop=\"band\" item id=\"someBand\"&amp;gtThe Scripting Javas&lt;/span&gt;\n</div>\n  </li>\n</ul>",
      "excerpt": "I just read an interesting blog\npost about the HTML5\nDataSet specification which really got me thinking about the state of data on\nthe web. In short, it seems the battle for bringing well-structured data to\nHTML has been won. Not that there was ever really an opposition, but it is\nclear now that the future of the web really does hold potential for structured\nre-use of the data within.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Nasty Bug in Rack 1.0",
      "permalink": "http://0.0.0.0:4321/2009/08/nasty-bug-in-rack",
      "link": "http://0.0.0.0:4321/2009/08/nasty-bug-in-rack",
      "date": "2009-08-12T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I spent most of the afternoon tracking down a nasty bug that ended up being in\nthe Ruby Rack middlewear and thought I’d post a fix here in case there are any\nRails developers out there who read my blog. In short, a call to <code class=\"highlighter-rouge\">.params</code> on a\n<code class=\"highlighter-rouge\">Rack::Request</code> object will fail with an uncaught exception whenever\n<code class=\"highlighter-rouge\">@env[\"rack.request.form_input\"].eql</code> and <code class=\"highlighter-rouge\">@env[\"rack.input\"]</code> are both nil.\nThis causes <code class=\"highlighter-rouge\">request.POST</code> to return nil (line 137 of request.rb), which then\ncauses line 160 of request.rb to throw an exception:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> 160 self.put? ? self.GET : self.GET.update(self.POST)\n</code></pre></div></div>\n\n<p>I wouldn’t be surprised if this bug is already fixed in the latest git\nrepository, but I wanted to post the fix here in case you are on a host where\nyou are frozen at Rack 1.0 and can’t update to the lastest. Basically, instead\nof using <code class=\"highlighter-rouge\">request.params</code> to access the union of GET and POST params, use the\nfollowing method:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> def extract_params(req)\n   if req.put?\n     return req.GET\n   else\n     (req.GET || {}).update(req.POST || {})\n   end\n   rescue EOFError =&gt; e\n     req.GET\n end\n</code></pre></div></div>\n\n<p>That implements the code a bit more safely and will return an empty hash\ninstead of nil. Don’t hate me for using Ruby’s notorious <code class=\"highlighter-rouge\">(possibly_nil_var ||\nbackup_var)</code> syntax. Now to finally finish the real work I was trying to get\ndone….I guess the good news is I learned how to use ruby-debug. I was using\n<code class=\"highlighter-rouge\">Rack::Request</code> to extract the useful data out of the env variable that is\npresented with the rack request. In certain circumstances, the</p>",
      "excerpt": "I spent most of the afternoon tracking down a nasty bug that ended up being in\nthe Ruby Rack middlewear and thought I’d post a fix here in case there are any\nRails developers out there who read my blog. In short, a call to .params on a\nRack::Request object will fail with an uncaught exception whenever\n@env[\"rack.request.form_input\"].eql and @env[\"rack.input\"] are both nil.\nThis causes request.POST to return nil (line 137 of request.rb), which then\ncauses line 160 of request.rb to throw an exception:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Palm Pre secretly tracks you by GPS, sends info to Palm",
      "permalink": "http://0.0.0.0:4321/2009/08/palm-pre-secretly-tracks-you-by-gps",
      "link": "http://0.0.0.0:4321/2009/08/palm-pre-secretly-tracks-you-by-gps",
      "date": "2009-08-12T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>It was bound to happen one day with these new GPS and Internet-enabled phones.\nFirst we find out AT&amp;T has been illegally spying on US citizens, now we find\nout that companies are beginning to <a href=\"http://kitenet.net/~joey/blog/entry/Palm_Pre_privacy/\">do it for their own personal\ngain</a>. We dearly need\nsomeone on the hill to craft legislation that prevents companies from this type of cyber-stalking, as it can only lead to the types of societies that people\ndon’t want for their kids.</p>",
      "excerpt": "It was bound to happen one day with these new GPS and Internet-enabled phones.\nFirst we find out AT&amp;T has been illegally spying on US citizens, now we find\nout that companies are beginning to do it for their own personal\ngain. We dearly need\nsomeone on the hill to craft legislation that prevents companies from this type of cyber-stalking, as it can only lead to the types of societies that people\ndon’t want for their kids.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Using UISearchDisplayController with Three20",
      "permalink": "http://0.0.0.0:4321/2009/06/using-uisearchdisplaycontroller-with-three20",
      "link": "http://0.0.0.0:4321/2009/06/using-uisearchdisplaycontroller-with-three20",
      "date": "2009-06-29T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Joe Hewitt’s <a href=\"http://github.com/joehewitt/three20/tree/master/\">Three20\nproject</a> is a great set of libraries for iPhone development, but one of the\ninevitable consequences of using it is that Apple eventually releases official\nversions of some of the same “missing widgets” found in Three20. One such\nexample is the search functionality in tables.</p>\n\n<p>I have been using Three20 for an exciting project I’m working on over the\nsummer, but also wanted to leverage the new search functionality of the iPhone\nOS 3.0 instead of the Three20 search feature. It took about a day of poking\naround the code-base of both, but ultimately only a few changes to the code,\nwhich I’ll describe here.</p>\n\n<h2 id=\"step-1-implement-the-search-delegates-in-your-tttableviewcontroller\">Step 1: Implement the search delegates in your TTTableViewController</h2>\n\n<p>In your TTTableViewController interface, tack on the\n<code class=\"highlighter-rouge\">UISearchDisplayDelegate</code> and <code class=\"highlighter-rouge\">UISearchBarDelegate</code> interfaces to\nsay you’ll be implementing those. They will let the search bar and controller\nsend your controller events to let it know it is taking over.</p>\n\n<h2 id=\"step-2-add-the-search-bar-to-your-table-header\">Step 2: Add the search bar to your table header</h2>\n\n<p>In your <code class=\"highlighter-rouge\">loadView</code> method, create a new <code class=\"highlighter-rouge\">UISearchBar</code> object and\nadd it to your table’s header, like so:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>// [SNIP]\nUISearchBar *searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(0, 0, self.tableView.frame.size.width, 0)];\nsearchBar.delegate = self;\nsearchBar.showsCancelButton = YES;\n[searchBar sizeToFit];\nself.tableView.tableHeaderView = searchBar;\n[searchBar release];\n</code></pre></div></div>\n\n<h2 id=\"step-3-add-a-searchdisplaycontroller-to-your-controller\">Step 3: Add a SearchDisplayController to your controller</h2>\n\n<p>In the same <code class=\"highlighter-rouge\">loadView</code> method, create a new\n<code class=\"highlighter-rouge\">UISearchDisplayController</code>and add it to self:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>// [SNIP]\nUISearchDisplayController *searchDisplayController = [[UISearchDisplayController alloc] initWithSearchBar:searchBar contentsController:self];\n[self setSearchDisplayController:searchDisplayController];        \n[searchDisplayController setDelegate:self];\n[searchDisplayController setSearchContentsController:self];\n[searchDisplayController setSearchResultsDataSource:self.dataSource];        \n[searchDisplayController release];\n</code></pre></div></div>\n\n<p>Notice above that you are pointing the SearchDisplayController at several\ndifferent items: the UISearchBar from before, <code class=\"highlighter-rouge\">self</code>, and also your\n<code class=\"highlighter-rouge\">TTTableViewDataSource</code>.</p>\n\n<h2 id=\"step-4-implement-the-required-delegates\">Step 4. Implement the required delegates</h2>\n\n<p>Next we’ll implement the required delegate methods that will be called when the\nuser interacts with the search bar.  Notice below that we’re using these\nmethods to essentially pass information through to the data source.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- (void)filterContentForSearchText:(NSString*)searchText scope:(NSString*)scope {\n  [self.dataSource filterContentForSearchText:searchText scope:scope];\n} \n\n- (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchString:(NSString *)searchString {\n  [self filterContentForSearchText:searchString scope:\n    [[self.searchDisplayController.searchBar scopeButtonTitles] objectAtIndex:[self.searchDisplayController.searchBar selectedScopeButtonIndex]]];\n    // Return YES to cause the search result table view to be reloaded.\n    return YES;\n}\n\n- (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchScope:(NSInteger)searchOption {\n  [self filterContentForSearchText:[self.searchDisplayController.searchBar text] scope:\n  [[self.searchDisplayController.searchBar scopeButtonTitles] objectAtIndex:searchOption]];\n  // Return YES to cause the search result table view to be reloaded.\n  return YES;\n}\n\n- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)controller {\n  DKSearchableDataSource *ds = self.dataSource;\n  [controller setSearchResultsDelegate:self.tableView.delegate];\n  ds.searchActive = YES;\n}\n\n- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)controller {\n  DKSearchableDataSource *ds = self.dataSource;\n  ds.searchActive = NO;\n}\n</code></pre></div></div>\n\n<p><strong>Important!</strong> Notice the <code class=\"highlighter-rouge\">setSearchResultsDelegate</code> call above.\nThis occurs here instead of the <code class=\"highlighter-rouge\">loadView</code> method above because the\ntable delegate hasn’t yet been created when we’re still inside of\n<code class=\"highlighter-rouge\">loadView</code> – if you were to set it up there then selecting search\nresult cells wouldn’t trigger a callback.</p>\n\n<h2 id=\"step-5-modify-your-data-source-to-be-aware-of-search\">Step 5. Modify your data source to be aware of search</h2>\n\n<p>Finally, we need to modify our data source to be aware of this new “search\nmode.” I did this with a pretty simple fix: I created a boolean property named\n<code class=\"highlighter-rouge\">searchActive</code> that is set by the owning controller (see the above code). Then,\nin all the important methods, I put in a simple <code class=\"highlighter-rouge\">if..else</code> statement that\nreturned one value for search mode results and another value for normal usage.\nHere’s an example:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {\n  if (self.searchActive &amp;amp;&amp;amp; (self.searchText != nil)) {\n    return self.filteredItems.count;\n  }  else {\n    return self.items.count;\n  }\n}\n</code></pre></div></div>\n\n<p>In the above conditional, I check for <code class=\"highlighter-rouge\">searchText</code> to see if the user\nhas begun searching yet. If they haven’t I want to display all results.</p>\n\n<p>Finally, I need to implement the actual search method, which is simply passed\nthrough from the controller class.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- (void)filterContentForSearchText:(NSString*)searchText scope:(NSString*)scope {\n  [self.filteredItems removeAllObjects]; // First clear the filtered array.\n  self.searchText = searchText;\n        \n  /*\n   * Search the main list for products whose type matches the scope (if\n   * selected) and whose name matches searchText; add items that match to the\n   * filtered array.\n   */\n   for (id *item in _items) {\n     NSComparisonResult result = [[item searchText] compare:searchText options:(NSCaseInsensitiveSearch|NSDiacriticInsensitiveSearch) range:NSMakeRange(0, [searchText length])];\n     if (result == NSOrderedSame) {\n       [self.filteredItems addObject:item];\n     }\n   }\n}\n</code></pre></div></div>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>I left a lot of explanation out here, but I hope this is enough to get you\nstarted on using Apple’s “official” search functionality with the Three20\nlibrary. Leave a comment if you have any questions or need a bit more\nexplanation of the code and I’ll be glad to amend the post.</p>",
      "excerpt": "Joe Hewitt’s Three20\nproject is a great set of libraries for iPhone development, but one of the\ninevitable consequences of using it is that Apple eventually releases official\nversions of some of the same “missing widgets” found in Three20. One such\nexample is the search functionality in tables.",
      "languages": null,
      "categories": [],
      "tags": ["iphone programming","programming"]
    }
    
  

  
    ,
    {
      "title": "What is Machine Learning",
      "permalink": "http://0.0.0.0:4321/2009/06/what-is-machine-learning",
      "link": "http://0.0.0.0:4321/2009/06/what-is-machine-learning",
      "date": "2009-06-25T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I’m interested in Machine Learning, but still quite a newbie in the field, so I\nthought I would start posting articles about it to force myself to read more\nand begin synthesizing the information in my mind. Since this is the first,\nI’ll start with the basics: <em>what is Machine Learning, anyway?</em></p>\n\n<p>Machine Learning has its origins in the Artificial Intelligence community but\nit is actually a different branch of Computer Science than what one often\nthinks of as AI. When people say they are  doing “Artificial Intelligence,” it\noften refers to the quest to make computers more humanlike – able to think,\nreason, emote, etc. Machine Learning, on the other hand, uses a slightly\ndifferent set of tools to solve basic engineering problems that humans alone\ncan not solve. Machine Learning is specifically focused on problems that\nare easier for a computer to <em>learn</em> how to solve than for a human to\nfigure out how to solve.</p>\n\n<p>That characterization might sound a bit strange, so here is an example: You are\ngiven 10,000 patient records involving heart disease patients over the past\nfive years and asked to find out if there are any drug combinations that appear\nto be having adverse affects. With that quantity (and complexity) of data, it\nis near impossible for a human to approach the task of answering the question.\nUsing Machine Learning, the human can instead teach the computer, <em>how to\nlearn</em> how to find the answer, and then let it loose. <strong>It is sort of\nlike meta-math: you teach the computer how to solve the problem of solving a\nproblem.</strong></p>\n\n<p>Here is a breakdown of the categories of problems that you can solve via this\nmethod:</p>\n\n<ul>\n  <li><strong>Supervised Learning</strong> involves taking an existing set of data for which\nyou have example inputs and “answers”, and then learn how to guess a new\nanswer from a new input that hasn’t been seen before. This can be divided\ninto two further cases based on whether your answer-space is continuous or\ndiscrete:</li>\n  <li><strong>Regression</strong> is performing supervised learning on a continuous data set. You might be trying to predict weight based on a person’s age, for example. In this case, you would train your algorithm on an example set of weights and ages, and then you would predict future weights using just an age by itself.</li>\n  <li><strong>Classification</strong> is performing supervised learning on a discrete data set. You might be trying to predict a person’s favorite ice cream flavor based upon a number of other attributes about them. Your training set consists of multiple people with those predictive attributes, along with their choice of ice cream flavor.</li>\n  <li><strong>Unsupervised Leaning</strong> is the act of solving a problem for which there is no existing set of solutions to provide the computer as examples. In unsupervised learning, the question you are asking the computer is, “is there any interesting structure in this data?” The typical example of this type of learning is <em>clustering</em>, the act of grouping items into different buckets, without knowing in advance what those buckets are. You might be trying to explain the habitat of Canada Geese, for example, and have a large data set that consists of their location at randomly selected time instants. Using unsupervised learning, the computer might cluster these locations into two general categories: Canada and Florida. While this example could easily be performed by the human eye, remember that computers can deal with multiple, sometimes infinite-dimensional data that no human could ever process.</li>\n  <li><strong>Reinforcement Learning</strong> can be thought of as learning that takes place gradually, with feedback after each step. Whereas supervised and unsupervised learning uses a data set presented in its entirety at the beginning of the problem,  with reinforcement learning the computer is presented instead with a <em>goal </em>(described mathematically, of course). The computer then takes actions (also described mathematically) which generate either positive or negative feedback. This feedback is incorporated into the computer’s strategy which evolves over time as it learns to meet its goal. An example of feedback learning is the autopilot on an airplane. The goal is to keep the airplane flying to its destination in a steady manner. The actions the computer can take consist of altering air speed, pitch, yaw, and rudder controls, and the feedback the computer receives is a combination of how the plane is actually performing versus how the autopilot settings are asking it to perform.</li>\n</ul>\n\n<p>So that is my quick and dirty run-down of Machine Learning. I’m no expert, so\nif there are problems with this post please leave a comment and I’ll correct\n  them. Either way, I hope this is the start of a series of useful articles\n  explaining some of the basic principles and techniques of the field.</p>",
      "excerpt": "I’m interested in Machine Learning, but still quite a newbie in the field, so I\nthought I would start posting articles about it to force myself to read more\nand begin synthesizing the information in my mind. Since this is the first,\nI’ll start with the basics: what is Machine Learning, anyway?",
      "languages": null,
      "categories": [],
      "tags": ["machine learning"]
    }
    
  

  
    ,
    {
      "title": "Marvin Minsky on the AI Winter",
      "permalink": "http://0.0.0.0:4321/2009/06/marvin-minsky-on-the-ai-winter",
      "link": "http://0.0.0.0:4321/2009/06/marvin-minsky-on-the-ai-winter",
      "date": "2009-06-11T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I went to the morning half of the Living Heritage AI Workshop held at CSAIL\ntoday and it turned out to be a cool get-together of many of the founders of\nartificial intelligence from the MIT AI Lab heydays. Marvin Minsky spoke for a\nwhile, and a small, but interesting, part of his talk was a rundown of why he\n  thought AI research essentially came to a halt in the 80s: because focus\n  changed from solving small, focused problems to trying to come up with a\n  single approach to solve all problems. Here is the rundown he gave of these\n  one-size-fits-all approaches, and their shortcomings:</p>\n\n<ul>\n<li><b>Neural Networks</b> - tend to get stuck on local peaks</li>\n<li><b>Rule-based Systems</b> - don't yet use enough reflective layers</li>\n<li><b>Baby Machines</b> - all, so far, have failed to keep growing</li>\n<li><b>Statistical Methods</b> - fail to <i>explain</i> what causes exceptions</li>\n<li><b>Genetic Programs</b> - fail because they lack explicit goals</li>\n<li><b>Situated Action</b> - needs higher-level representations</li>\n<li><b>Formal Logic</b> - can't exploit reasoning by analogy</li>\n<li><b>Fuzzy Logic</b> - cannot support reflective thinking</li>\n<li><b>Simulated Evolution</b> - Fail to learn the causes of failures</li>\n<li><b>Algorithmic Probability</b> - More general, but needs approximations.</li>\n</ul>\n\n<p>He followed with the comment: “Physicists prosper by showing where old theories\nfail. AI-researchers seldom publish their programs’ faults.”</p>\n\n<p>Another cool tidbit is that he said he never remembered technically admitting\nanyone to the AI Lab back in the day. They had a lot of funding at the time,\nand people would just show up from universities overseas, and sometimes they\nwould stay for a week and sometimes they would stick around for good.</p>",
      "excerpt": "I went to the morning half of the Living Heritage AI Workshop held at CSAIL\ntoday and it turned out to be a cool get-together of many of the founders of\nartificial intelligence from the MIT AI Lab heydays. Marvin Minsky spoke for a\nwhile, and a small, but interesting, part of his talk was a rundown of why he\n  thought AI research essentially came to a halt in the 80s: because focus\n  changed from solving small, focused problems to trying to come up with a\n  single approach to solve all problems. Here is the rundown he gave of these\n  one-size-fits-all approaches, and their shortcomings:",
      "languages": null,
      "categories": [],
      "tags": ["machine learning"]
    }
    
  

  
    ,
    {
      "title": "Alone in Tokyo",
      "permalink": "http://0.0.0.0:4321/2008/05/alone-in-tokyo.markdown",
      "link": "http://0.0.0.0:4321/2008/05/alone-in-tokyo.markdown",
      "date": "2008-05-15T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<object height=\"281\" width=\"500\">\t<param name=\"allowfullscreen\" value=\"true\" />\t<param name=\"allowscriptaccess\" value=\"always\" />\t<param name=\"movie\" value=\"http://vimeo.com/moogaloop.swf?clip_id=973337&amp;server=vimeo.com&amp;show_title=0&amp;show_byline=0&amp;show_portrait=0&amp;color=00ADEF&amp;fullscreen=1\" />\t<embed src=\"http://vimeo.com/moogaloop.swf?clip_id=973337&amp;server=vimeo.com&amp;show_title=0&amp;show_byline=0&amp;show_portrait=0&amp;color=00ADEF&amp;fullscreen=1\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" height=\"281\" width=\"500\" />&lt;/embed&gt;</object>\n\n<p>This made me really miss Japan.</p>",
      "excerpt": "&lt;/embed&gt;",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Don't Become a Buddhist",
      "permalink": "http://0.0.0.0:4321/2008/05/dont-become-a-buddhist.markdown",
      "link": "http://0.0.0.0:4321/2008/05/dont-become-a-buddhist.markdown",
      "date": "2008-05-12T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>After that flight, the Dalai Lama invited our group to his home in Dharmasala,\nIndia. Following a cordial greeting, he said something that seemed most\nunusual, given his position as the leader of a spiritual movement. “Don’t\nbecome a Buddhist. The world doesn’t need more Buddhists. Do practice\ncompassion. The world needs more compassion.</p>\n</blockquote>\n\n<p>John Perkins</p>",
      "excerpt": "After that flight, the Dalai Lama invited our group to his home in Dharmasala,\nIndia. Following a cordial greeting, he said something that seemed most\nunusual, given his position as the leader of a spiritual movement. “Don’t\nbecome a Buddhist. The world doesn’t need more Buddhists. Do practice\ncompassion. The world needs more compassion.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "As You Dream It",
      "permalink": "http://0.0.0.0:4321/2008/05/as-you-dream-it.markdown",
      "link": "http://0.0.0.0:4321/2008/05/as-you-dream-it.markdown",
      "date": "2008-05-11T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>“The world is as you dream it,” he told me. “Your people dreamed of huge\nfactories, tall buildings, as many cars as there are raindrops in this river.\nNow you begin to see that your dream is a nightmare.”</p>\n</blockquote>\n\n<p>John Perkins</p>",
      "excerpt": "“The world is as you dream it,” he told me. “Your people dreamed of huge\nfactories, tall buildings, as many cars as there are raindrops in this river.\nNow you begin to see that your dream is a nightmare.”",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Book to Print!",
      "permalink": "http://0.0.0.0:4321/2008/05/book-to-print.markdown",
      "link": "http://0.0.0.0:4321/2008/05/book-to-print.markdown",
      "date": "2008-05-09T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Ah, the fresh smell of paper pulp! An unexpected box in the mail containing\ntwenty copies of The Art of Rails can mean only one thing — the book has gone\nto print! For the sake of getting things done, only two observations:</p>\n\n<ul>\n  <li>I really need to finish up this W. Web story, but I’ve been dragging my feet ever since I ended up starting a war!</li>\n  <li>All of the Wrox authors really need to get together and make a pact to send in menacing pictures for their book covers. That way the book store can place the Wrox books across the isles from each other and it will look like different topics in computer science are staring each other down.</li>\n</ul>",
      "excerpt": "Ah, the fresh smell of paper pulp! An unexpected box in the mail containing\ntwenty copies of The Art of Rails can mean only one thing — the book has gone\nto print! For the sake of getting things done, only two observations:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Declaring Something Doesn't Make it True",
      "permalink": "http://0.0.0.0:4321/2008/02/declaring-something-doesnt-make-it-true",
      "link": "http://0.0.0.0:4321/2008/02/declaring-something-doesnt-make-it-true",
      "date": "2008-02-09T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Although New York Sen. Hillary Clinton won the largest states…her\npresidential campaign spent the rest of the week repositioning her as a kind of\nunderdog…This week, Clinton and her advisers declared that Obama is the\n“establishment” candidate…It’s hard to exaggerate the distance between\nClinton’s previous image and her new underdog image.</p>\n</blockquote>\n\n<p>Peter Overby, NPR News, 8 Feb 2008</p>\n\n<p>What really puts a bad taste in my mouth is the way in which the Clinton\ncampaign doesn’t see reality as the summation of past actions, but rather as a\nmarketing campaign that can be whatever they pay money to brand. “Oh, now the\nvoters want something new now? That’s OK! Yesterday we were the voice of\nexperience, but today we’ll be the voice of the outsider!” What was it that\nGeorge Orwell write about? Memory holes?</p>",
      "excerpt": "Although New York Sen. Hillary Clinton won the largest states…her\npresidential campaign spent the rest of the week repositioning her as a kind of\nunderdog…This week, Clinton and her advisers declared that Obama is the\n“establishment” candidate…It’s hard to exaggerate the distance between\nClinton’s previous image and her new underdog image.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Introduction to The Art of Rails",
      "permalink": "http://0.0.0.0:4321/2008/02/introduction-to-the-art-of-rails",
      "link": "http://0.0.0.0:4321/2008/02/introduction-to-the-art-of-rails",
      "date": "2008-02-08T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>There is a certain state of mind, a certain transient condition that arises,\nwhere everything seems to resonate and effort becomes effortless. Athletes call\nit being in the zone, some others call it flow. Flow has nothing to do with\ntriumph or accomplishment; it isn’t the product of your labors. Flow is the\nmerging of a watchmaker and his watch or an artist and her paints.</p>\n\n<p>The dot com bust was a confusing time for web development, but rising from the\nburst dreams of instant wealth, something strange and exciting happened. The\nweb development community as a whole reached a kind of flow. In a world filled\nwith duct-tape solutions and proprietary formats, suddenly web developers were\nclamoring for standards compliance, for elegance and simplicity. And it wasn’t\njust to fend off browser compatibility issues, but because the code looked\n<em>beautiful</em>.</p>\n\n<p>Through the fits and starts, the competing ideas, and the explosion of\ndevelopment frameworks that followed, an identity began to emerge. This\nidentity is as much a philosophical statement about what the web could be as it\nis a technical one about how to accomplish those goals. This identity is still\nemerging, and there are still many problems to be solved, but one thing is now\ncertain: web application development has come of age as a rich discipline of\nprogramming that stands up on its own.</p>\n\n<p>Ruby on Rails is just one part of this much larger story taking place, but in\nmany ways it is the symbol of this coming of age. Rails challenged the web\ndevelopment community to rethink what it meant to build a web application. It\nprovided an entire application ecosystem when most developers were embedding\ntheir code inside HTML files. It made unit testing not only easy, but cool, at\na time when debugging web applications was, at best, a black art. It introduced\na new generation of web developers to the ideas of meta-programming and\ndomain-specific languages. And most of all, it found the voice of the change\nthat was taking place: that the web provides a natural and elegant architecture\non which to write applications if only we can create the right metaphors to\nharness it.</p>",
      "excerpt": "There is a certain state of mind, a certain transient condition that arises,\nwhere everything seems to resonate and effort becomes effortless. Athletes call\nit being in the zone, some others call it flow. Flow has nothing to do with\ntriumph or accomplishment; it isn’t the product of your labors. Flow is the\nmerging of a watchmaker and his watch or an artist and her paints.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Ouch",
      "permalink": "http://0.0.0.0:4321/2008/02/ouch",
      "link": "http://0.0.0.0:4321/2008/02/ouch",
      "date": "2008-02-07T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>One part of the Clinton mystique maintains: Deep down journalists think she’s a\npolitical Rasputin who will not be dispatched. Prince Yusupov served him\ncupcakes laced with cyanide, emptied a revolver, clubbed him, tied him up and\nthrew him in a frozen river. When he floated to the surface they found he’d\ntried to claw his way from under the ice. That is how reporters see Hillary.</p>\n</blockquote>\n\n<p>Peggy Noonan, 8 Feb 2008, Wall Street Journal</p>",
      "excerpt": "One part of the Clinton mystique maintains: Deep down journalists think she’s a\npolitical Rasputin who will not be dispatched. Prince Yusupov served him\ncupcakes laced with cyanide, emptied a revolver, clubbed him, tied him up and\nthrew him in a frozen river. When he floated to the surface they found he’d\ntried to claw his way from under the ice. That is how reporters see Hillary.\n\n\nPeggy Noonan, 8 Feb 2008, Wall Street Journal",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Book Edits are Killing Me",
      "permalink": "http://0.0.0.0:4321/2008/02/book-edits-are-killing-me",
      "link": "http://0.0.0.0:4321/2008/02/book-edits-are-killing-me",
      "date": "2008-02-03T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>[eom]</p>",
      "excerpt": "[eom]",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Programming Book Sales and Contracts",
      "permalink": "http://0.0.0.0:4321/2008/01/programming-book-sales-and-contracts",
      "link": "http://0.0.0.0:4321/2008/01/programming-book-sales-and-contracts",
      "date": "2008-01-21T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><a href=\"http://ejohn.org/\">John Resig</a> of the <a href=\"http://jquery.com/\">jQuery</a> world has a\nreally interesting post on his blog about <a href=\"http://ejohn.org/blog/programming-book-profits/\">programming book sales and\nprofits</a> from the standpoint\nof a technical author.  The comment stream is worth a read too, with inputs\nfrom both writers and publishers.</p>",
      "excerpt": "John Resig of the jQuery world has a\nreally interesting post on his blog about programming book sales and\nprofits from the standpoint\nof a technical author.  The comment stream is worth a read too, with inputs\nfrom both writers and publishers.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "The Internet is a Strange Place",
      "permalink": "http://0.0.0.0:4321/2008/01/the-internet-is-a-strange-place",
      "link": "http://0.0.0.0:4321/2008/01/the-internet-is-a-strange-place",
      "date": "2008-01-19T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p><a href=\"http://nealstephenson.com/\">Neil Stephenson</a> needs to step in and write a\nnovel about internet gangs. I just saw this headline:</p>\n\n<blockquote>\n  <p>Scientlogy hacked by /i/, documents leaked</p>\n</blockquote>\n\n<p>With the comment thread at the end of the article</p>\n\n<blockquote>\n  <p><strong>nvrmind:</strong> wtf is /i/?</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>wafflez:</strong> in this case, the invasion board on 711chan.</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>altheahouse:</strong> The chan’s first wave. There is a war going on between Scientology and Anon. The smart money is on the later. Anonymous does\nnot forgive. Anonymous does not forget. Anonymous does not receive. Anonymous\ndelivers.</p>\n</blockquote>",
      "excerpt": "Neil Stephenson needs to step in and write a\nnovel about internet gangs. I just saw this headline:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Running rSpec from TextMate",
      "permalink": "http://0.0.0.0:4321/2008/01/running-rspec-from-textmate",
      "link": "http://0.0.0.0:4321/2008/01/running-rspec-from-textmate",
      "date": "2008-01-13T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Just a quick tip for installing the rSpec bundle for TextMate: it is important\nthat the bundle that you install is synced with the version of rSpec that you\nare actually running on your machine / in your project. Otherwise you will get\na bunch of Ruby errors.</p>\n\n<p>Close TextMate, open up a shell, and go to the bundles directory for your\ninstallation, which is probably something like this:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/Users/USER/Library/Application Support/TextMate/Pristine Copy/Bundles/\n</code></pre></div></div>\n\n<p>And then run the following code to pull down the latest (you may want to use a\nparticular tag) from their repo:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>svn export http://rspec.rubyforge.org/svn/trunk/RSpec.tmbundle/\n</code></pre></div></div>\n\n<p>Then you can enjoy nice testing by pressing Command-R from within one of your\nspec files: (IMAGE REMOVED - My blog was hacked and I lost data)</p>",
      "excerpt": "Just a quick tip for installing the rSpec bundle for TextMate: it is important\nthat the bundle that you install is synced with the version of rSpec that you\nare actually running on your machine / in your project. Otherwise you will get\na bunch of Ruby errors.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "PeepCode Love",
      "permalink": "http://0.0.0.0:4321/2008/01/peep-code-love/",
      "link": "http://0.0.0.0:4321/2008/01/peep-code-love/",
      "date": "2008-01-01T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I know I am just the latest of many to praise\n<a href=\"http://www.peepcode.com/\">PeepCode</a>, but <a href=\"http://www.nubyonrails.com/\">Geoffrey\nGrosenbach</a> has really produced something\nfantastic. In addition to being a great resource for tutorials on specific\ntopics in the Rails world, it is a very effective (and entertaining) way to\nlearn.</p>\n\n<p>He’s from Seattle, so I can’t help wonder if the PeepCode logo: (IMAGE\n  REMOVED – My blog was hacked and I lost a lot of data) Is in any way an\n  homage to Seattle’s famous Lusty Lady (a landmark near Pike’s place, oddly\n  juxtaposed next to upscale apartment buildings and boutique shops): (IMAGE\n  REMOVED – My blog was hacked and I lost a lot of data) In any event, I just\n  bought my first 5-pack of “shows.”</p>",
      "excerpt": "I know I am just the latest of many to praise\nPeepCode, but Geoffrey\nGrosenbach has really produced something\nfantastic. In addition to being a great resource for tutorials on specific\ntopics in the Rails world, it is a very effective (and entertaining) way to\nlearn.\n\nHe’s from Seattle, so I can’t help wonder if the PeepCode logo: (IMAGE\n  REMOVED – My blog was hacked and I lost a lot of data) Is in any way an\n  homage to Seattle’s famous Lusty Lady (a landmark near Pike’s place, oddly\n  juxtaposed next to upscale apartment buildings and boutique shops): (IMAGE\n  REMOVED – My blog was hacked and I lost a lot of data) In any event, I just\n  bought my first 5-pack of “shows.”",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Code in Text",
      "permalink": "http://0.0.0.0:4321/2007/12/code-in-text/",
      "link": "http://0.0.0.0:4321/2007/12/code-in-text/",
      "date": "2007-12-16T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I took about a month hiatus from writing (much to the frustrated grumbles of\nthe fine folks at <a href=\"http://www.wiley.com/\">Wiley</a>), but I’ve gotten back into\nthe groove and am preparing to turn in Chapter 8, “Playing with Blocks.” One\nthing that is markedly different about this chapter than the others: it’s\nchock-full of code. Up until this point, the book has been about design\npatterns, tricks, and techniques.  Code is certainly used all over the place,\nbut it is only used to demonstrate the examples. This chapter is also about\ndesign, but its about design centering around one of Ruby’s unique language\nfeatures among the OO family of languages – Procs and blocks. While it has\nbeen fun writing text-heavy material thus far, it is really nice to read over\nthis chapter and see lines of code weaving in and out of the text all over\nevery page. It’s good to get down and dirty in the code every once in a while\n:) (I’ve certainly never examined <a href=\"http://www.ruby-doc.org/doxygen/current/array_8c-source.html\">Ruby’s C source\ncode</a> until this\nchapter..)</p>",
      "excerpt": "I took about a month hiatus from writing (much to the frustrated grumbles of\nthe fine folks at Wiley), but I’ve gotten back into\nthe groove and am preparing to turn in Chapter 8, “Playing with Blocks.” One\nthing that is markedly different about this chapter than the others: it’s\nchock-full of code. Up until this point, the book has been about design\npatterns, tricks, and techniques.  Code is certainly used all over the place,\nbut it is only used to demonstrate the examples. This chapter is also about\ndesign, but its about design centering around one of Ruby’s unique language\nfeatures among the OO family of languages – Procs and blocks. While it has\nbeen fun writing text-heavy material thus far, it is really nice to read over\nthis chapter and see lines of code weaving in and out of the text all over\nevery page. It’s good to get down and dirty in the code every once in a while\n:) (I’ve certainly never examined Ruby’s C source\ncode until this\nchapter..)",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 8",
      "permalink": "http://0.0.0.0:4321/2007/12/chapter-8/",
      "link": "http://0.0.0.0:4321/2007/12/chapter-8/",
      "date": "2007-12-07T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>The plot thickens! An innocuous chapter on designing with block-based methods\nbrings terrible news of a coming conflict. Will W. Web survive? (Thanks to\nRob B. for the idea)</p>\n</blockquote>\n\n<p>W. Web sat, listening intently as his companions bantered back and forth as if\naccording to a script. They had been sitting at the table for some forty\nminutes, most of them spent discussing the day’s protest and how it had gone.\nThis group, it turned out, was exactly who Web was sent to find – prominent\nrepresentatives from the clans allied with his, sent to show support and\npresence at the URL protest downtown.</p>\n\n<p>Wall-mounted oil lamps flickered oranges and yellows off the shadows in the\nbasement tavern as discussions of the protest moved to of motivation, as such\nconversations tend to do. The occasional shouts and nasal laughter of a group\nof lingering URLs, their scrawny fry-like bodies in baggy homemade t-shirts,\ncould be heard amidst the clinking of glasses from the bar across the hall.</p>\n\n<p>“Flexibility,” Schema said, slapping his hand definitively down on the table\nand looking at Web, “So what we need is some flexibility. You have no idea what\nit’s like having to do the same thing all day.”</p>\n\n<p>“But what else is there to do?” Rusty responded, “You create data, you update\nit. If you’re lucky, someone might come and read it too. And then one day, you\nsend it to the big bit bucket in the sky.”</p>\n\n<p>“That’s exactly the myopic response that gets us into this type of problem.\nLook at us! You, six feet tall. Me, with a mustache! People grow, things\nchange. We don’t always know what we want to do with a thing at the time we\nbuild it.”</p>\n\n<p>“But there’s a medium to be kept. The best we hope for is some\ngrounding stability amidst the process of change. Certain structures to scope\nand limit our operations.”</p>\n\n<p>“Look,” Matz jumped in, “I think we can all agree for the needs of both\nflexibility and structure, but I’m not so sure we need to characterize the\nsolution as a tension between the two. Could we not attempt to live each\nthrough the eyes of the other?”</p>\n\n<p>“Agreed,” Jen offered, “what is most important is that we take a holistic\napproach that incorporates all of our strengths. We can’t afford to factionize\nourselves in the face of…” she trailed off, looking uncomfortable.</p>\n\n<p>Faces grew somber and nods accompanied downward stares around the table. A URL\nlaughed loudly in the background.</p>\n\n<p>“In the face of what?” Web replied.</p>\n\n<p>His party looked nervously among themselves, communicating with their eyes in a\nsilent, reluctant argument to decide who would be the one to explain. Rusty\nleaned in towards the table, the rest of the group following.</p>\n\n<p>“The compilers,” he said in a near whisper, almost mouthing the word. “They\nhave spies, so we can’t discuss it in the open.  This rally was a cover for the\nresistance movement.  The secret negotiations have fallen through and the time\nhas run out.”</p>\n\n<p>Web wanted to disregard the statement as silly, but the solemn expressions on\nthe faces looking at him made shivers run down his spine and out his limbs. The\nair felt suddenly electrified in a way that could not be denied.</p>\n\n<p>“What do you mean, run out?  What resistance movement?” Web said, his voice\nnow low and intense.</p>\n\n<p>“There’s a war coming, Web! And it’s too late to stop!  They’re gathering by\nthe day. We’ve been tracking them for a year now.  But the final preparations\nhave only recently begun.”</p>\n\n<p>“What was the protest for then?”</p>\n\n<p>“To safely gather the leaders of the resistance movement under the guise of an\ninternal struggle,” Jen replied, “until last week, we had only met through\nmessages, passed through unreliable transport.”</p>\n\n<p>“And me?  Why was I sent here?”</p>\n\n<p>“Because this war is about YOU, Web” Rusty said, his voice a strained shout\nhidden in the whisper, “you need to start paying attention to the events around\nyou!  Stumbling around on the street like you do!”</p>\n\n<p>“You were sent here so that you could be protected,” Jen said in a much softer\ntone. Web sat back in the bench, stunned. “Their signal to attack is the Flying\nToasters screensaver.”</p>\n\n<p>It was too much to process, but he could see the connections starting to form.\nThe Flying Toasters screensaver?  The screensaver! He had been processing\norders for that screensaver for months! The biggest resurgence of a software\nproduct in years! And the compilers. Nothing on the web was compiled… The\nelectric feeling of the air embedded itself into Web’s skin as Web looked at\nthe faces of his new colleagues, realizing now, for the first time, why he was\nhere.</p>",
      "excerpt": "The plot thickens! An innocuous chapter on designing with block-based methods\nbrings terrible news of a coming conflict. Will W. Web survive? (Thanks to\nRob B. for the idea)",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "EJS Moving to Google Code",
      "permalink": "http://0.0.0.0:4321/2007/12/ejs-moving-to-google-code/",
      "link": "http://0.0.0.0:4321/2007/12/ejs-moving-to-google-code/",
      "date": "2007-12-05T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>The folks over at <a href=\"http://javascriptmvc.com/\">JavaScript MVC</a> have been using\n<a href=\"http://www.edwardbenson.com/projects/ejs\">EJS</a> in their framework, and have\nmade a lot of great chances to it, so I’m going to move it over to Google Code\nthis week so that others can more easily track development of it and contribute\nchanges.</p>",
      "excerpt": "The folks over at JavaScript MVC have been using\nEJS in their framework, and have\nmade a lot of great chances to it, so I’m going to move it over to Google Code\nthis week so that others can more easily track development of it and contribute\nchanges.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Code can be Funny",
      "permalink": "http://0.0.0.0:4321/2007/12/code-can-be-funny/",
      "link": "http://0.0.0.0:4321/2007/12/code-can-be-funny/",
      "date": "2007-12-03T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Here’s a tiny excerpt from the current chapter I’m writing: “Playing with\nBlocks”. So far I’ve only posted the narratives that accompany each chapter.\nThis piece of code made me chuckle, though, so I thought I’d share it. There’s\na lot of great discussion in the chapter about Methods, Procs, and blocks, and\nhow to apply the differences to your coding style. So if this piques your\ninterest, then look for the book next Spring:</p>\n</blockquote>\n\n<p>While the adverb metaphor doesn’t encapsulate nearly all of the uses of blocks,\nit is a particularly good one to demonstrate how becoming familiar with\nblock-based programming will change the way you think about code. Languages\nwith blocks let you do things <em>sneakily</em>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">sneakily</span>\n   <span class=\"c1\"># There actually isn't such thing</span>\n   <span class=\"c1\"># as System.logger...so don't go</span>\n   <span class=\"c1\"># planning any bank hoists with this</span>\n   <span class=\"c1\"># example!</span>\n   <span class=\"no\">System</span><span class=\"p\">.</span><span class=\"nf\">logger</span><span class=\"p\">.</span><span class=\"nf\">turn_off</span>\n   <span class=\"k\">yield</span>\n   <span class=\"no\">System</span><span class=\"p\">.</span><span class=\"nf\">logger</span><span class=\"p\">.</span><span class=\"nf\">turn_on</span>\n<span class=\"k\">end</span>\n\n<span class=\"c1\"># Don't tell!</span>\n<span class=\"n\">sneakily</span> <span class=\"k\">do</span>\n  <span class=\"mi\">1000</span><span class=\"p\">.</span><span class=\"nf\">times</span> <span class=\"p\">{</span>\n     <span class=\"n\">votes</span> <span class=\"o\">&lt;&lt;</span> <span class=\"no\">Vote</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"Ted\"</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"k\">end</span></code></pre></figure>\n\n<p>Or, if you don’t mind the consequences, even <em>incorrectly</em></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">incorrectly</span>\n   <span class=\"c1\"># This one actually works, but can</span>\n   <span class=\"c1\"># really mess up the interpreter depending</span>\n   <span class=\"c1\"># on what you put inside the block!</span>\n\n   <span class=\"c1\"># Temporarily randomize the result of addition</span>\n   <span class=\"k\">class</span> <span class=\"nc\">Fixnum</span>\n      <span class=\"k\">def</span> <span class=\"nf\">genrand</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">)</span> <span class=\"p\">;</span> <span class=\"nb\">rand</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">)</span> <span class=\"p\">;</span> <span class=\"k\">end</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">class_eval</span> <span class=\"p\">{</span>\n         <span class=\"k\">alias</span> <span class=\"ss\">:oldplus</span> <span class=\"p\">:</span><span class=\"o\">+</span> <span class=\"p\">;</span> <span class=\"k\">alias</span> <span class=\"p\">:</span><span class=\"o\">+</span> <span class=\"ss\">:genrand</span>\n      <span class=\"p\">}</span>\n   <span class=\"k\">end</span>\n   <span class=\"k\">yield</span>\n   <span class=\"k\">class</span> <span class=\"nc\">Fixnum</span>\n      <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">class_eval</span> <span class=\"p\">{</span> <span class=\"k\">alias</span> <span class=\"p\">:</span><span class=\"o\">+</span> <span class=\"ss\">:oldplus</span> <span class=\"p\">}</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">incorrectly</span> <span class=\"k\">do</span>\n   <span class=\"n\">votes</span><span class=\"p\">.</span><span class=\"nf\">count</span>\n<span class=\"k\">end</span></code></pre></figure>\n\n<p>Let’s call the general idea code wrapping: creating code that is meant to wrap\naround other code. Code wrapping can be applied many ways. Block-based\niteration is just code wrapping. A block-based iterator implements the\niterating loop with an empty body waiting to be filled by the block provided by\nthe caller.</p>\n\n<p>Many elements of aspect-oriented programming are just code-wrapping, and later\nyou will see how aspects such as logging and performance can be implemented in\nthis way. Finally code-wrapping provides an excellent way to construct\nhierarchical documents such as HTML and XML by using block-based programming\nmake Ruby look like a domain-specific language.</p>\n\n<blockquote>\n  <p>That’s just the draft, of course. In the final copy, I’ll make sure to vote 2000 times.</p>\n</blockquote>",
      "excerpt": "Here’s a tiny excerpt from the current chapter I’m writing: “Playing with\nBlocks”. So far I’ve only posted the narratives that accompany each chapter.\nThis piece of code made me chuckle, though, so I thought I’d share it. There’s\na lot of great discussion in the chapter about Methods, Procs, and blocks, and\nhow to apply the differences to your coding style. So if this piques your\ninterest, then look for the book next Spring:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "What's new is what's old",
      "permalink": "http://0.0.0.0:4321/2007/11/whats-new-is-whats-old",
      "link": "http://0.0.0.0:4321/2007/11/whats-new-is-whats-old",
      "date": "2007-11-29T00:00:00-08:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I’ve been busier lately than just about any time I can remember and haven’t had\nmuch time to write here, let alone get much else done. I’m usually against\nmaking comparisons between computers and human brain, but when you’re\noverloaded with stuff to do, it sure feels a lot like a computer that’s\nthrashing – context switching so often that all your resources are dedicated\nto overhead and none to the actual tasks that you need to get done.</p>\n\n<p>I just wanted to stoke the fire of a previous post predicting that the iPhone\nSDK would actually be WebKit. (as in, the new SDK is the old SDK, we just shot\nthe rendering engine with steroids). Here are some of the feature highlights\nfrom WebKit 3.0:</p>\n\n<ul>\n  <li>Enhanced Rich Text Editing</li>\n  <li>Faster JavaScript and DOM (~ 2x)</li>\n  <li>Faster Page Loading</li>\n  <li>SVG support</li>\n  <li>XPath support</li>\n  <li>Improved JavaScript XML technology (XSLT, DOMParser, XMLSerializer, and enhanced XMLHttpRequest\nsupport)</li>\n  <li>Styleable form controls</li>\n  <li>Additional advanced CSS support: 2.1, 3.0, and experimental.</li>\n  <li>Reduced memory use (~14%)</li>\n  <li>Web Developer Tools included</li>\n</ul>\n\n<p>A new chapter, and thus a new installment of W. Web, to come this weekend, I\npromise, and eventually I’ll continue posting the Fuji hike stories.</p>",
      "excerpt": "I’ve been busier lately than just about any time I can remember and haven’t had\nmuch time to write here, let alone get much else done. I’m usually against\nmaking comparisons between computers and human brain, but when you’re\noverloaded with stuff to do, it sure feels a lot like a computer that’s\nthrashing – context switching so often that all your resources are dedicated\nto overhead and none to the actual tasks that you need to get done.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "iPhone Native Apps Prediction",
      "permalink": "http://0.0.0.0:4321/2007/10/iphone-native-apps-prediction/",
      "link": "http://0.0.0.0:4321/2007/10/iphone-native-apps-prediction/",
      "date": "2007-10-24T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Post-hoc update: hah! boy was I wrong!</p>\n</blockquote>\n\n<p>Jobs finally let the inevitable plan leak that Apple was going to support\nnative apps from 3rd party developers on the iPhone. (This is the whole reason\nI bought one, so good news for me). He mentioned the understandable difficulty\nof releasing such a framework because of security reasons, which I think makes\ncomplete sense: the prospect of mobile viruses is potentially disastrous.\nHere’s the prediction then: <strong>“Native” apps are really going to be HTML-based\nWidgets, armed with new WebKit features &amp; a rich JavaScript API into the\nphone’s features.</strong> Several things support this theory:</p>\n\n<ul>\n  <li>The only way to create a truly secure native-app framework based on binary files would be Apple inspecting and signing each binary to give their approval. This creates a bottleneck that would stifle the type of experimentation and hacking I think Apple knows it needs. <strong>Therefore a non-binary format used as the native app language is preferable</strong>. Java byte code is already out, as evidenced by Apple’s failure to include Java on the iPhone. MS CLI is out for obvious reasons. That pretty much leaves Flash and Web-based solutions.</li>\n  <li><strong>We know the iPhone already supports widgets,</strong> even though we aren’t allowed to create our own. A good way to guess what bones we’re going to get thrown is to look at which one’s Apple is already chewing on.</li>\n  <li><strong>Apple is embracing the web in a very big way</strong>. The flourishing of the web has done a lot of good for Apple – when your company has been plagued for years with detractors saying “well so-and-so-program won’t run on a Mac,” the platform independence of web applications is a welcome arrival. It makes sense for them to continue embracing web technologies on other devices, such as the iPhone.</li>\n  <li><strong>WebKit just added support for <a href=\"http://webkit.org/blog/126/webkit-does-html5-client-side-database-storage/\">local storage</a></strong>. One of the first problems with third-party apps is how to let them store information without being able to corrupt the iPhone. Some sort of managed storage solution has to be added to provide persistence without true filesystem access, and this is exactly what the WebKit team just added.</li>\n</ul>",
      "excerpt": "Post-hoc update: hah! boy was I wrong!",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Democracy: New words needed; Apply within",
      "permalink": "http://0.0.0.0:4321/2007/10/democracy-new-words-needed-apply-within/",
      "link": "http://0.0.0.0:4321/2007/10/democracy-new-words-needed-apply-within/",
      "date": "2007-10-21T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Today I had a disturbing thought: what if we no longer have a single word\nsufficient to describe our ideals of “for the people, by the people”\ngovernment. Societies develop new words as certain concepts become relevant\nenough to require concise differentiation from others. That is why we have\none-hundred different ways to describe our Waffle House hash browns, while (if\nmy fourth grade teacher is to be believed) the Inuit have equally many words to\ndescribe snowfall.</p>\n\n<p>Maybe I’m just too young to realize, but it seems that the word “democracy”\nused to be a pretty powerful one: it encompassed not just the voting process\nbut the very ideals by which a society held themselves accountable. Today, the\nword too often seems a hollowed shell, used to describe the mechanism of\nelectoral voting and nothing more.</p>\n\n<p>The problem is, having a ballot box doesn’t guarantee representation, self\ndeterminism, or personal liberty, unless a lot of other factors come into play\nalong with it. It is the casual failure to examine the death of these other\nfactors that scares me. To get an idea about what I mean, here’s a relevant\nclip from a documentary about Fox News.  For the politically minded, please\nremember that the finger I’m pointing is at everyone in the abstract – this\nFox News example is simply one I found in a short period of time.  I’m not\ntalking about Right or Left here, I’m talking about self-determinism.</p>\n\n<center><object height=\"350\" width=\"425\"><param name=\"movie\" value=\"http://www.youtube.com/v/t3kI8LNTqNo\" /><param name=\"wmode\" value=\"transparent\" /><embed src=\"http://www.youtube.com/v/t3kI8LNTqNo\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" height=\"350\" width=\"425\" />&lt;/embed&gt;</object></center>\n\n<p>The problem is, the sheer mechanics of voting isn’t enough. The votes have to\nmean something. That means that the public has to be fairly informed. The voter\nregistration process has to be easy and fair. The populace has to be free from\nfear of rebuke. The elections free from fixing. And the nation not a slave to\ndebt.</p>\n\n<p>For each one of those qualities, any number of nations could be found that are\n“democratic” in mechanism, but trapped under oppression of some means in\nreality. The American public, with consent manufactured via Hollywood style\nnews that tells us what to think instead of showing us the world; the nations\nof South America and South-East Asia, trapped in World Bank debts crafted so\ndeftly around them; Eastern Europe, where you know who you’re supposed to vote\nfor, but who’s counting anyway?</p>\n\n<p>A parting, that I’m pretty sure is fabricated, but nonetheless poingant:</p>\n\n<blockquote>\n  <p>I have the greatest admiration for your propaganda. Propaganda in the West is\ncarried out by experts who have had the best training in the world – in the\nfield of advertising – and have mastered the techniques with exceptional\nproficiency…Yours are subtle and persuasive; ours are crude and obvious…I\nthink that the fundamental difference between our worlds, with respect to\npropaganda, is quite simple. You tend to believe yours…and we tend to\ndisbelieve ours.</p>\n</blockquote>",
      "excerpt": "Today I had a disturbing thought: what if we no longer have a single word\nsufficient to describe our ideals of “for the people, by the people”\ngovernment. Societies develop new words as certain concepts become relevant\nenough to require concise differentiation from others. That is why we have\none-hundred different ways to describe our Waffle House hash browns, while (if\nmy fourth grade teacher is to be believed) the Inuit have equally many words to\ndescribe snowfall.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 7",
      "permalink": "http://0.0.0.0:4321/2007/10/chapter-7/",
      "link": "http://0.0.0.0:4321/2007/10/chapter-7/",
      "date": "2007-10-15T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Woah, it’s been a while. I’m skipping Chapter 6, which is going to be on\nRESTful design (and possibly ActiveResource if I can pull it off without\nbeing too reference book-y). So I’m waiting until the official Rails 2.0\nrelease and moving on ahead without it.</p>\n\n  <p>I guess W. Web will have to travel back in time to make up the gap in the\nstory. One thing I’m going to have to determine soon: just where is this Web\ncharacter going to end up? It’s apparent from Chapter 7: a conversation is\nabout to take place, a plot to conspire. More to come…</p>\n\n  <p>For now, Web has teleported past untold events of Chapter 6 right into the\nbasement of a smoky pub, waiting for Rusty.</p>\n</blockquote>\n\n<p>Web sat waiting in a booth at the back of the smoky pub, staring at the aged\ncarving in the wood above his table.</p>\n\n<p align=\"center\"><b>LOKE ERST YE THENK, AND BE YE THE WOLRDE</b></p>\n\n<p>And the phrase beneath it, in the same ornate style but newer, he thought,\ngiven the brighter color of the wood bezel.</p>\n\n<p align=\"center\"><b>FRIDAY NIGHT FISH AND CHIPS SPECIAL</b></p>\n\n<p>The pub was a strange maze of tables and shadows, wood and brick columns\nholding up the floors above. It was underneath a building holding commercial\nspace, an old wine cellar that used to belong to a distributer on the seventh\nfloor. Before that it was a factory floor for a parachute company, and even\nbefore that it was rumored to have been an underground alchemy supply shop.</p>\n\n<p>Now it was a pub. A damp, earthen smell was permeated under the sounds and\nodors of fried fish and pipe smoke.</p>\n\n<p>“Hi! My name is AJ and I’ll be your server today! Is there anything I can get\nyou to drink?”</p>\n\n<p>Web thought the waitress looked out of place in this old tavern.  She beamed at\nhim waiting his reply with her spiked up neon blue hair, a shining pink plastic\nhalter top and costume-like makeup. She was balancing a tray of empty pint\nglasses on one hand and a skateboard beneath her feet.</p>\n\n<p>“Actually liquids tend to give me a short.  Still some old ISDN lines in\nhere,” Web said, patting his stomach, “Could I just have some chips? You\nknow what, throw in the fish, too.”</p>\n\n<p>“Sure thing.  No liquids, fish, chips, coming right up,” she said as she\nrolled away on her skateboard.</p>\n\n<p>From afar web could see the dim outline of the matre d’ pointing a group of\npeople toward his table. He recognized Rusty from before, along with two others\nhe didn’t know. He stood up to shake their hands as they approached the table.</p>\n\n<p>“Web, it’s good to see you again!  Let me introduce you to my friend Gr–”</p>\n\n<p>“Napkin!” AJ cut through the group of people on her skateboard and left Web\nwith a napkin in his outstretched hand.</p>\n\n<p>”..Schema, and Matz,” Rusty continued unfazed. Web gave each a hearty greeting\nand the four sat down in the booth.  Before the newcomers even had time to pick\nup their menus, AJ was back, tossing a plate down on the table.</p>\n\n<p>“Plate!,” AJ’s voice trailed past as she skated without slowing, the empty plate left\nrattling in a circular motion on the table.</p>\n\n<p>Matz looked at the spinning plate and inspected the cover of the menu closely,</p>\n\n<p>“How strange. I’ve heard of these new places. What did you order?”</p>\n\n<p>“I got the f–”</p>\n\n<p>“Fish, no liquids!” AJ was flying by on her skateboard in the opposite\ndirection this time. She managed a perfect shot from four feet away, the fish\nlanded square on the far side of the plate and didn’t even slide a centimeter.</p>\n\n<p>“Fish. And chips,” Web replied, starting to worry about how his knife and fork\nwould be delivered to him.</p>",
      "excerpt": "Woah, it’s been a while. I’m skipping Chapter 6, which is going to be on\nRESTful design (and possibly ActiveResource if I can pull it off without\nbeing too reference book-y). So I’m waiting until the official Rails 2.0\nrelease and moving on ahead without it.\n\n  I guess W. Web will have to travel back in time to make up the gap in the\nstory. One thing I’m going to have to determine soon: just where is this Web\ncharacter going to end up? It’s apparent from Chapter 7: a conversation is\nabout to take place, a plot to conspire. More to come…\n\n  For now, Web has teleported past untold events of Chapter 6 right into the\nbasement of a smoky pub, waiting for Rusty.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 5",
      "permalink": "http://0.0.0.0:4321/2007/09/chapter-5/",
      "link": "http://0.0.0.0:4321/2007/09/chapter-5/",
      "date": "2007-09-18T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>W. Web finally makes it to the Big City on his first mission from the compound.\nIn other news, I’m beat.</p>\n</blockquote>\n\n<p>W. Web stepped off the bus and forced a nervous swallow as he entered the crowd\nof noise and signs. He had arrived as close to the heart of Application Square\nas the bus could get, which was about two blocks away. As far as he could see,\nup to the big plaza in the distance, were URIs and other regulars of their\ncrowd, holding signs and milling about. It was not unlike a football game, Web\nthought, remembering videos of tailgating parties that had been uploaded to him\nbefore.</p>\n\n<p>He waded through the URIs trying to get closer to the square. The URIs were\ntall, French Fry-like creatures with short, stubby legs and tyrannosaurus-like\narms. For some reason, they all talked like they were from the Bronx, even the\nUnicode ones. As groups of them chanted their slogans, their nasal voices\noccasionally cracked at the exciting parts.</p>\n\n<p>No wonder these guys get pushed around, Web thought.</p>\n\n<p>The real geeks were the ones that hadn’t even bothered to register domain names\nfor themselves. IP addresses blazoned up their chests, they were a bit pastier\n  than the others and were wearing thick glasses.</p>\n\n<p>“Hey, watch it! Geez, buddy, can’t we even get some respect at our own\nprotest?”</p>\n\n<p>Web had been searching for the stage so hard that he had inadvertently walked\nstraight into one of them.</p>\n\n<p>“Oh! I’m sorry…uh, 208.97.177.118,” Web said, tilting his head sideways to\nread the IP address written up its chest, “I was just looking for the main\nstage. Do know if there is one?”</p>\n\n<p>“What am I, DNS?  That resource is 301 Moved Permanently! Aheiahahiaha!” the\nURI snorted in reply.</p>\n\n<p>Web stood there unsure of what to say.</p>\n\n<p>“Hey, loosen up, buddy,” the URI punched him in the shoulder, “it’s a beautiful\nday. The stage is over that way,” he gestured with his fry-like head.</p>\n\n<p>“Thanks, I appreciate it. Say, what exactly are you protesting?”</p>\n\n<p>“You mean nobody gave you a pamphlet?,” the creature exclaimed, “those dynamic\nURIs, you can never count on them to be there when you need ‘em. We’re\nprotesting the ‘stablishment, buddy boy, cause we get no respect and its time\nwe deserve some.”</p>\n\n<p>“What do you mean,” Web said, “everyone uses you guys. You’re great – you\nshould see how large my browser’s bookmark folder is!  In fact just the other\nday I saw one of you on a billboa–”</p>\n\n<p>“Use us and throw away, use us and throw away. That’s the way it always\nhappens. Throw-away labels, that’s what we are. Nobody stops to think that\nwe’ve got depth to us.  Do you think we like being three-hundred characters\nlong? ‘Oh, doesn’t matter,’ you say ‘nobody ever stopped to appreciate the\nbeauty of just a mere URI!’ Just a mere URI?!”</p>\n\n<p>It didn’t give Web a chance to respond.</p>\n\n<p>“And social services - we deserve them too. Do you know how much funding unit\ntests got last year?  Over 1.2 billion.  Billion!  Ya know how much we got?\nDidn’t think so – well I’ll tell ya - a big zero.  Zilch. Nothin.  How’s it\ncome about that we’re the face of the internet and nobody’s ever stopped to\nthink that we need attention too?”</p>\n\n<p>Web could see that this was the beginning of a long rant this URI had given\nmany times before and knew he had to get to the stage before things wound down.</p>\n\n<p>“I couldn’t agree more. We need more funding devoted to URIs,” he said\nhurriedly, “Look, I’m sorry to run, but I’ve really got to get to that stage.\nThanks for your help!”</p>\n\n<p>And before the URI could say anything more Web had pushed back into the crowd,\nweaving his way forward toward the edge of the square.</p>",
      "excerpt": "W. Web finally makes it to the Big City on his first mission from the compound.\nIn other news, I’m beat.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "This Binary Universe",
      "permalink": "http://0.0.0.0:4321/2011/09/this-binary-universe",
      "link": "http://0.0.0.0:4321/2011/09/this-binary-universe",
      "date": "2007-09-05T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Most amazing album I’ve heard in a long time.</p>\n\n<object height=\"350\" width=\"425\"><param name=\"movie\" value=\"http://www.youtube.com/v/t-duqsCFXxc\" /><param name=\"wmode\" value=\"transparent\" /><embed src=\"http://www.youtube.com/v/t-duqsCFXxc\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" height=\"350\" width=\"425\" />&lt;/embed&gt;</object>\n\n<p>In high school my friend Susannah introduced me to the world of electronic\nmusic with BT’s early work (Ima, ESCM) and he has remained one of my favorite\nartists ever since. After a many-year lull in his true electronica while he\npursued more pop-style music and remixes, this new album reminds me what made\nhis early music so different from anything else in the electronic section of\nthe music store.</p>",
      "excerpt": "Most amazing album I’ve heard in a long time.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "iWork and SVN don't play well together",
      "permalink": "http://0.0.0.0:4321/2011/08/iwork-and-svn-dont-play-well-together",
      "link": "http://0.0.0.0:4321/2011/08/iwork-and-svn-dont-play-well-together",
      "date": "2007-08-28T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>My publisher requires that I write in MS Word, but it’s so clunky on a Mac (and\niWork so smooth) that I write each chapter in a mixture of text files and iWork\ndocuments and convert it to MS Word at the last minute. But there’s\none big problem with the way iWork saves files.</p>\n\n<p>I have a subversion repository for all my writing projects. Every time I step\naway from the computer after having made a change to one I check everything in\nso next time I have an idea I can pick up where I left off no matter where I\nam. I started noticing a funny pattern with iWork documents that has since\ncaused me to put <code class=\"highlighter-rouge\">svn:ignore</code> status on all of them: iWork keeps overwriting my\n<code class=\"highlighter-rouge\">.svn</code> directory.</p>\n\n<p>The problem is that iWork apps save their files as directories.\nIn Finder, they look like ordinary files, but try opening up the console to see\ntheir true nature for yourself:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ ls -l\ntotal 688\n-rw-r--r-- 1 ted ted 349696 Aug 27 06:52 189481_ch04.doc\ndrwxr-xr-x 8 ted ted 272 Aug 27 06:36 189481_ch04.pages\n</code></pre></div></div>\n\n<p>When you do an <code class=\"highlighter-rouge\">svn add</code> on the pages files, it does what SVN normally does\nwhen it encounters a directory: it traverses recursively through it, adding\n<code class=\"highlighter-rouge\">.svn</code> directories along the way, and adds every file within it.</p>\n\n<p>For the initial checkin, everything works fine, but once you open up iWork and\nedit your file the problems start.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ svn update\nsvn: Working copy '.' locked\nsvn: run 'svn cleanup' to remove locks\n(type 'svn help cleanup' for details)\n</code></pre></div></div>\n\n<p>Uh-oh..</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ svn status\nL .\nM 189481_ch04.doc \n~ 189481_ch04.pages\n</code></pre></div></div>\n\n<p>Apparently iWork doesn’t like other programs adding content to their files..\ner..  directories.. er..  file-directories. The <code class=\"highlighter-rouge\">.svn</code> folder is overwritten,\ncompletely messing the whole version controll tree (if you’re the kind of\nperson that likes to commit and update in batch). It seems that Apple is moving\ntoward the “managed directory” style of information management. Instead of one\nlarge file to store a particular document or presentation, you get a whole\ndirectly that masquerades as a file (I think NeXT did this a lot..).</p>\n\n<p>That is a cool choice, I suppose – as a developer I would certainly rather\nmanage a directory of files than one ginormous monolithic on. But at some point\nApple is going to have to address the fact that many command line utilities\nwill either get confused at this style of file storage or, like SVN and CVS,\nwill try to add their own data into the mix. Pages is a wonderful word\nprocessor, and as of iWork 08 I don’t really see a need to ever fire up Office\nX unless I have to (Office for Windows is great…the OS X version is just a\npiece..).  But this is a huge problem for anyone who uses version control\nregularly, and I hope either a fix or a work around is devised soon.</p>",
      "excerpt": "My publisher requires that I write in MS Word, but it’s so clunky on a Mac (and\niWork so smooth) that I write each chapter in a mixture of text files and iWork\ndocuments and convert it to MS Word at the last minute. But there’s\none big problem with the way iWork saves files.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 4",
      "permalink": "http://0.0.0.0:4321/2007/08/chapter-4/",
      "link": "http://0.0.0.0:4321/2007/08/chapter-4/",
      "date": "2007-08-27T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Enough of the heavy stuff, let’s get on with the story. Over the hump of\nChapters 1-4. Late but picking up stride.</p>\n</blockquote>\n\n<p>The bus continued down the road and eventually onto a bumpy highway. Between\nthe hum of the wheels in the back of the bus and the grain of the road shaking\nhis seat, Web began fighting to keep his eyes open, and before he knew it..</p>\n\n<p>“Excuse me,” said a frail, old voice, its owner tapping him softly on the\nshoulder.</p>\n\n<p>Web opened his eyes, momentarily confused about where he was. He looked with\nthe distant gaze of interrupted sleep at the elderly woman who was sitting next\nto him.</p>\n\n<p>“I’m sorry to wake you. Your head was getting heavy on my shoulder. And you\nwere drooling on my shawl.”</p>\n\n<p>Web blinked and felt the conscious world returning to him. He hadn’t even seen\nthe woman get on.</p>\n\n<p>“I’m terribly sorry,” he said suddenly as the ability to speak clicked in,\n“it’s been a long week. I’ll try my best to use the window.” And then, to try\nto win some points with the old woman, “I’m the World Wide Web, you know.”</p>\n\n<p>“That’s nice,” she smiled, “I thought you looked like a Jeffrey.”</p>\n\n<p>Web gazed out at the road passing by and thought of his week at the retreat.\nEverything had been so regimented, yet it all seemed to work together smoothly.\nThe more he learned how to fall into their pattern of going about things, the\nless he found himself distracted by the day-to-day worries that once kept him\nbusy.</p>\n\n<p>It was still a ways before Web’s stop – a protest down in the Big City.  The\nmembers at his new camp said they were were pleased at how well he understood\ntheir beliefs, and they wanted him to be their representation at the event.\nURLs were gathering to protest for equal rights, it seemed, right under the\nmarquee at Application Square. He job was to attend the protest and attempt to\nidentify and arrange a meeting with the leaders of each respective group at the\nprotest. Web still wasn’t sure what to do after that, but his new friends had\nassured him that the rest would take care of itself.</p>",
      "excerpt": "Enough of the heavy stuff, let’s get on with the story. Over the hump of\nChapters 1-4. Late but picking up stride.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 3",
      "permalink": "http://0.0.0.0:4321/2007/08/chapter-3/",
      "link": "http://0.0.0.0:4321/2007/08/chapter-3/",
      "date": "2007-08-10T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Our W. Web leaves the compound on his first assignment. His bus ride turns out\nto be a time for contemplation:</p>\n</blockquote>\n\n<p>W. Web boarded a bus heading back into the city from the Rails compound. It had\nbeen a long orientation week, and he wasn’t sure if he was ready to shave his\nhead like the rest of them, but he liked a lot of what he had heard.</p>\n\n<p>He was on his fist trip for the group – a rally being held down in the Big\nCity. It would be interesting for sure. Web squeezed through the crowd to find\na seat near the middle, right next to a tall man with a buzz cut Web thought\nlooked like a “Rick.”</p>\n\n<p>Rick was riding the bus home from work. He had the reverse commute, living in\nthe city but working out in the country. It was an unusually crowded day for a\nTuesday – people of all destinations packed together, muffled music seeping\nfrom earphones, blank stares emanating from tired faces.  Rick inched sideways\nto create more room as strange man who appeared to be wearing a paper mache\nglobe around his body struggled to fit into one of the center-facing seats next\nto him.</p>\n\n<p>As the bus pulled away from its next stop on the city’s edge, Rick smelled a\nstrong stench get on. A man, dirty and tattered, pushed his way to the middle\nof the bus.</p>\n\n<p>“Move it!” he shouted gruffly as he pushed a small boy and his mother out of\nthe way, The smell of liquor oozed out his pores.</p>\n\n<p>Rick, having just received his black-belt in Karate, was not about watch a\ndrunken bum push a small child.  And to be honest he was a little excited at\nthe chance to put his hard-earned skills to use. He stood from his seat, chest\nout like a Marine, and moved swiftly down the bus toward the low-life. His\nevery move signaled confrontation.</p>\n\n<p>“Hey!” the voice shot toward the drunk.</p>\n\n<p>But the voice was not Rick’s, it was that of a frail old man observing the\nsituation from the rear of the bus. The man smiled warmly, leaning at an angle\nto see through the crowd.</p>\n\n<p>“Young man, I have a seat for you right here!” he shouted up to the front of\nthe bus, patting an empty seat next to him.</p>\n\n<p>The man tromped his way unsteadily past Rick, who had been stopped in stride by\nthe old man’s voice, and to the back of the bus. He sat down next to the old\nman.</p>\n\n<p>“Aren’t you glad spring is finally here?” the elder asked the drunk\nwith excitement to his voice, “I’m on the way home to garden with my wife. You\nshould see how happy she is when she gardens, and the Hydrangea are just about\nto bloom!”</p>\n\n<p>The drunk wrinkled his face, blinking, and his lips began to quiver. Within\nseconds a tear had broken free and began to roll slowly down his cheek.</p>\n\n<p>“I had a wife, and she loved to garden too,” he managed to stammer, “I lost my\njob last year, and then lost my life to the bottle.”</p>\n\n<p>The old man patted his shoulder, a small gesture to acknowledge his grief. And\nas the two talked and the story unfolded, Rick watched from the middle of the\nbus, his face softening in pity.</p>\n\n<p>At the next stop, W. Web watched curiously as Rick stepped off the bus.  Five\nminutes and two miles ago, the man’s hair had been raised and his stance ready\nfor a confrontation. But the man getting off the bus was different, with all\n  the look someone contemplating the hard blows life can deliver.</p>\n\n<p>(Story adapted from <a href=\"http://www.dharmafield.org/teacher_pages/steve.htm\">Steve Hagen</a>)</p>",
      "excerpt": "Our W. Web leaves the compound on his first assignment. His bus ride turns out\nto be a time for contemplation:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "I will not write about coding. I will not write about coding.",
      "permalink": "http://0.0.0.0:4321/2007/08/i-will-not-write-about-coding/",
      "link": "http://0.0.0.0:4321/2007/08/i-will-not-write-about-coding/",
      "date": "2007-08-06T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Chapter 3 is Late. With a capital L. It’s 4:39 AM on a Monday morning – the\ntime of the morning when studies show fatigue degrades driving performance to\nthat of a drunk driver. So I’m going to bed.</p>\n\n<blockquote>\n  <p>Dear book readers of the future, I pledge to not write this book while drunk\n(well, functionally drunk, I suppose, as the cup in front of me contains tea).</p>\n\n  <p>Sincerely, Ted</p>\n</blockquote>\n\n<p>There is a another pledge that I’m trying hard to stick to: to\ntalk about design of code rather than the mechanics of coding. Picking a book\nformat for technical books is tough because there are a lot of Right Ways to do\nit:</p>\n\n<ul>\n  <li><strong>The how-to book:</strong> Let’s try cooking a pie. First, take the tin out of the freezer and put it on the counter. Next, …</li>\n  <li><strong>The reference tome:</strong> The oven has three settings. Bake, Broil, and Clean, and a temperature dial. Pie crust requires 35 minutes at 350 to reach a golden brown.</li>\n  <li><strong>The cookbook:</strong> Cooking a Cherry Pie. Ingredients: cheeries, crust, pie tin. Directions: Step 1 - …</li>\n  <li><strong>The patterns book (like an abstract cookbook):</strong> Pattern #35: Baking disc-shaped objects filled with fruit in a metal casing…</li>\n  <li><strong>The Head-First books:</strong> (oh god, please make the fish-eye lens stop!)</li>\n  <li><strong>The cyberpunk novel:</strong> Zer0-t0x ran to the alley where he saw one of the last functioning pay phones in the city. Reaching for his backpack, he pulled out a blue box and some … ok this is really more of a novel than a technical book.</li>\n</ul>\n\n<p>It seems when it gets late I start enumerating things in <code class=\"highlighter-rouge\">&lt;li&gt;</code> tags. But those\nare the styles as I see them.</p>\n\n<p>I’m trying to write in a style different than the ones above, that blends\ntechnical how-to with the types of discussion you’d want to read on a train.\nDesign-focused like a patterns book but without restricting myself to patterns.\nI’m taking what I believe are the most important topics in web application\ndesign and Ruby on Rails and devoting a chapter to each, tackling it from the\nperspective of someone interested in developing their ability to design good\napplications rather than just punch out code.</p>\n\n<p>The tough part is that I’m trying to stay away from both code listings (as in\n“refer to Listing 2-23 for a 50-line XML file embedded in this book”) and code\ninstruction. The former is easy to do, despite making my page-count deadlines\nmore challenging. The latter is really tough because it means I must assume\nthat the reader understands everything going on in the code examples from a\nsyntax and Rails API point of view.</p>\n\n<p>The assuming parts aren’t hard – all of the examples are short, simple and to\nthe point. Plus people are smart. Most technical books probably err on the\nside of explaining too much of the syntax anyway. The hard part is keeping\nmyself from delving into long syntactical or API-related discussions –\nsomething I’d rather let other books do so that The Art of Rails can focus on\ndesign issues.</p>\n\n<p>The Art of Rails is a book for Rails developers about designing web\napplications with the Ruby on Rails framework and style, not a Ruby on Rails\nAPI reference. It is funny to me to find that one of the hardest parts of\nwriting is keeping oneself from explaining too much. You’d think filling page\nafter page would be hard, but when you really sit down and start do to it, you\nrealize that there is actually <strong>a lot to say</strong>. More than can fit coherently in\none chapter, or even one book.</p>\n\n<p>So you have to be very careful to pick and choose the right things, and\nruthless at deleting portions you’ve written and like, but ultimately detract\nfrom the main focus of the book you’re writing.  Anyway. I think the Art of\nRails is off to a great start. (despite being a bit behind schedule)</p>\n\n<p>And I’m going to bed.</p>",
      "excerpt": "Chapter 3 is Late. With a capital L. It’s 4:39 AM on a Monday morning – the\ntime of the morning when studies show fatigue degrades driving performance to\nthat of a drunk driver. So I’m going to bed.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 2",
      "permalink": "http://0.0.0.0:4321/2007/07/chapter-2/",
      "link": "http://0.0.0.0:4321/2007/07/chapter-2/",
      "date": "2007-07-22T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>Web’s saga continues. It is the must-read book of the summer! (<em>cough</em> it will\nbe out next spring)</p>\n</blockquote>\n\n<p>W. Web approached the picnic tables set up for breakfast cautiously, clutching\nthe orientation binder in his hands. He waved as he saw Jeff, the man he had\nmet preaching on the street outside the hospital. Here in the camp outside of\nthe city all of the cult members he remembered from the recruiting sessions\nwere much more relaxed, their nervous edge gone. Web grabbed a paper plate from\nthe serving line and began carousing down the platters deciding what to eat.</p>\n\n<p>“Excuse me, I’m new here, do you know if there is a serving spoon for the\neggs?” he said to the woman in front of him.</p>\n\n<p>She turned, amused, and smiled with a quizzical brow, “serving spoon? No, just\nimply to the platter that you’d like some.”</p>\n\n<p>“Imply to the.. I’m sorry, what?”</p>\n\n<p>The women held her empty plate out to the platter and looked expectantly at it.\nW. Web couldn’t tell if he had blinked while she pulled a fast one or if he\njust hadn’t noticed eggs on her plate all along, but when she pulled the plate\nback it was full.</p>\n\n<p>“We always felt serving spoons were redundant anyway,” she said with a smile,\n“after all, what else were you going to do with it?”</p>\n\n<p>Web inched his plate toward the inanimate platter looking a bit confused. He\njerked his hands back as an omlete suddenly weighed down the plate.</p>\n\n<p>“There you go! A natural. If you want scrambled, try not to look so confused.\nAnd smile for sunny side up.”</p>\n\n<p>Web offered a timid smile back and muttered his thanks, shuffling away to clear\nhis head in a less strange environment. He slid past the filling picnic tables\nand headed back up toward his cabin, the woman’s voice wafting behind him.</p>\n\n<p>“If you’re headed back to your bunk, make sure you touch the door with your\nleft hand first, otherwise the door won’t unlock!,” and then after a pause,\n“don’t worry! It will all start making sense!”</p>",
      "excerpt": "Web’s saga continues. It is the must-read book of the summer! (cough it will\nbe out next spring)",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Chapter 1",
      "permalink": "http://0.0.0.0:4321/2007/07/chapter-1/",
      "link": "http://0.0.0.0:4321/2007/07/chapter-1/",
      "date": "2007-07-20T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<blockquote>\n  <p>As chapters are turned in, I plan on posting a little bit about each one. Since\nI can’t publish the content of the chapter (ps, you can download the new Harry\nPotter at this link <code class=\"highlighter-rouge\">&lt;a href=http://##$.'@03##CARRIER LOST</code>), I’m instead\nreleasing a short story-esque blurb that makes sense in light of the chapter.\nSo here you are, Chapter 1:</p>\n</blockquote>\n\n<p>W. Web knew immediately something was wrong.</p>\n\n<p>He had suffered stomach pangs before, but never like this. Stumbling out of\nthe taxi cab and into the hospital, he mopped the sweat from his brow and\npushed his way across the sidewalk traffic. Inside everything was a dizzy\nblur flowing past him. Nurses, patients, a police officer. Several computer\ntechnicians hitting a computer monitor and mumbling something about the\nIntranet going down.</p>\n\n<p>“I know, I know!,” Web thought as he struggled past them for the emergency\npatient entrance. Luckily for W. Web this particular hospital works on a\ntriage system, and when you explain to the nurse at the front desk that you\nare the Internet you get bumped to the front of the line.  There’s a lot\nriding on your health.</p>\n\n<p>As the Web lay in his hospital bed, passing other familiar technologies as\nthe nurse pushed him down the hall, he realized that he had made the right\ndecision to stop ignoring the pangs. It was going to be OK.</p>",
      "excerpt": "As chapters are turned in, I plan on posting a little bit about each one. Since\nI can’t publish the content of the chapter (ps, you can download the new Harry\nPotter at this link &lt;a href=http://##$.'@03##CARRIER LOST), I’m instead\nreleasing a short story-esque blurb that makes sense in light of the chapter.\nSo here you are, Chapter 1:",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "April Fools&#58; Constitution just a Suggestion",
      "permalink": "http://0.0.0.0:4321/2007/07/april-fools-constitution-just-a-suggestion/",
      "link": "http://0.0.0.0:4321/2007/07/april-fools-constitution-just-a-suggestion/",
      "date": "2007-07-20T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I promise to keep politics out of any writing I do on here, but this goes\nbeyond politics to plain and simple factual conflict with our Constitution. The\nInternets and sites like <a href=\"http://www.digg.com/\">digg</a> and\n<a href=\"http://www.reddit.com\">Reddit</a> have already been going ablaze with this, so\nperhaps you’ve already seen it, but here it is again: This recent <a href=\"http://edocket.access.gpo.gov/2007/pdf/07-3552.pdf\">Executive\nOrder</a> by\nPresident Bush on 17 July 2007 effectively repeals the 5th Amendment to the\nconstitution.</p>\n\n<p>Here is the 5th Amendment:</p>\n\n<blockquote>\n  <p>No person shall be held to answer for a capital, or otherwise infamous crime,\nunless on a presentment or indictment of a Grand Jury, except in cases\narising in the land or naval forces, or in the Militia, when in actual\nservice in time of War or public danger; nor shall any person be subject for\nthe same offence to be twice put in jeopardy of life or limb; nor shall be\ncompelled in any criminal case to be a witness against himself, nor be\ndeprived of life, liberty, or property, without due process of law; nor shall\nprivate property be taken for public use, without just compensation.</p>\n</blockquote>\n\n<p>And here is a summary of what this new Executive Order states:</p>\n\n<ul>\n  <li><strong>Section 1.</strong> The\ngovernment may freeze and seize all assets of any person that has committed or\nmight commit an act which undermines our Iraq efforts.</li>\n  <li><strong>Section 2.</strong> It is\nprohibited to act counter to this order if you are one of the people targeted\nby it.</li>\n  <li><strong>Section 3.</strong> This applies to anyone on US-controlled territory (including\nforeign locations), US Citizen or not.</li>\n  <li><strong>Section 4.</strong> To deal with any such person\ntargeted by this order is prohibited.</li>\n  <li><strong>Section 5.</strong> The government does not have\nto tell you, or anyone that you have been targeted by this order.</li>\n  <li><strong>Section 6.</strong> Powers to enforce this order may be delegated to any arm of the US Government.</li>\n</ul>\n\n<p>That is my summary of the order. If you want to view the full text of it,\nfollow the link above.</p>\n\n<p>When I have children one day and they are growing up in school, I hope that,\nlike other great democratic nations of the world, we are still able to teach\nthem about the inherent rights and protections from abuse of power our\ndemocratic system affords them. But if Congress continues to allow the\nExecutive Branch to toss the Constitution out the window bit by bit – due\nprocess, protection against unreasonable seizure, habeas corpus – then I fear\nthey will grow up with the twisted belief that these fundamental rights were\nsomehow Achilles heels in the fight for stability and security, not realizing\nthat the enforcement of these rights are the very definition of stability and\nsecurity.</p>\n\n<p>Update: Pardon the early-morning politics outburst. They happen.</p>",
      "excerpt": "I promise to keep politics out of any writing I do on here, but this goes\nbeyond politics to plain and simple factual conflict with our Constitution. The\nInternets and sites like digg and\nReddit have already been going ablaze with this, so\nperhaps you’ve already seen it, but here it is again: This recent Executive\nOrder by\nPresident Bush on 17 July 2007 effectively repeals the 5th Amendment to the\nconstitution.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Broken R Key",
      "permalink": "http://0.0.0.0:4321/2007/07/broken-r-key/",
      "link": "http://0.0.0.0:4321/2007/07/broken-r-key/",
      "date": "2007-07-17T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Writing with a broken R key is a bit difficult.</p>\n\n<p>They say that when you work with a particular thing all day, you become a\nconnoisseur whether you like it or not. Welders develop a fine taste for rebar,\nacademics for chalk. Well I am now a world-renound expert on which words have\nthe letter R in them. Let me tell you why (no Rs in that sentence). Every time\nI have to produce an R, I must to punch down on the key with great speed and\nforce, turning my left index finger temporarily into a comet smashing into the\nearth, improbably landing precisely on my R key every time.</p>\n\n<p>The rhythm of my typing ends up sounding like a syncopated jazz song.</p>\n\n<blockquote>\n  <p>click-click-THUNK-click-click-click-click-(pause)-click-THUNK THUNK-(pause)\nTHUNK (pause) THUNK THUNK!</p>\n</blockquote>\n\n<p>I’ll mail a $4 bill to anyone who can guess what\nword that was.</p>\n\n<p>I did it to myself. I rearranged the keys on my keyboard too many times (that\nis another story entirely, but the moral is, don’t fool yourself into thinking\na Dvorak layout will make you learn Dvorak).</p>\n\n<p>And now my “” key is boken as a esult.</p>\n\n<p>So when the book comes out and there are no Rs in it, or when you run across\nwords like “though” when you are pretty sue it should have been thRough, you’ll\nknow what’s going on.</p>\n\n<p>In other news, I got an iPhone and it is totally sweet.</p>",
      "excerpt": "Writing with a broken R key is a bit difficult.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "The Thing about Chapters One through Three",
      "permalink": "http://0.0.0.0:4321/2007/07/the-thing-about-chapters-one-through-three/",
      "link": "http://0.0.0.0:4321/2007/07/the-thing-about-chapters-one-through-three/",
      "date": "2007-07-14T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I’m two weeks away from my first book deadline and trying to pace myself to\nprevent long nights in the days running up to when I fire up my FTP client and\nupload a bunch of ZIP files. But in these last two weeks, I’m especially\nreminded that writing is tough. Especially when it is chapters 1 through 3.</p>\n\n<p><strong>The flexibility factor.</strong> This time around things are working a bit differently\nthan the previous book. Instead of month-to-month deadlines (roughly a chapter\na month), I have quarterly deadlines, which means that every couple months I\nhave to turn in 3-4 chapters. While this is pretty cool because it allows\nparallel writing of the chapters (which is a lot easier, as you can’t force\nyour mind into always thinking about things contiguously), it makes time\nmanagement really tough. I can’t tell you how many times I’ve spent time\nallocated for writing the book writing other stuff, whether for personal\nreasons or professional. The argument I always use to convince myself: “It’s\nlike practice!” Any writing is good writing, but two weeks away I wish I had a\nfew more pages down and a few less to go. This is closely related to:</p>\n\n<p><strong>The errand factor.</strong> I’m working 5 days a week, but only 3 are at my day job.\nThe other two I’m working on the Art of Rails. But oh, how easy it is to run\nerrands on those two days, and errands can add up to a lot of time. I’ve got a\nlot of respect for people who work from home and pull it off.</p>\n\n<p><strong>The research factor.</strong> Research and can be a big time sink, an infinite one\nif you let it.  Writing is necessarily a combination of fact and advice (advice\n  being a euphemism for opinion), and no matter how strongly you know a certain\n  topic or have opinions about it, once you put it down and print it, it is\n  hard to take back. So you better be darn sure you meant what you said. During\n  the initial stages of writing, “working on my book” can mean anything from\n  writing toy web apps to try out a technique to listening to podcasts about\n  development to laying on my back staring at a tree wondering why I thought it\n  would be a good idea to sign a contract obligating me to write 300 pages.</p>\n\n<p><strong>The Chapter 1 factor.</strong> I need to get over it. I’m just a random dude\n  writing about a topic I enjoy and care about, and no matter what I put down\n  in Chapter 1 it will just be another random Chapter 1. But I tell you, it is\n  hard to follow that advice if you’re the one writing the words. It’s like it\n  is the first date and you spent an inordinate amount of time getting ready\n  because you know its the first time the girl is going to get a real\n  impression of you.  I’ve written a whole book’s worth of Chapter 1s. And that\n  took up a lot of time. I’m still not finished, but I think I’ve learned a\n  valuable lesson: say what you have to say and move on. Because that is what,\n  as a reader, I’d want to be reading.</p>\n\n<p>And a final note to my editor: John, if you’re reading this, don’t worry! :)</p>",
      "excerpt": "I’m two weeks away from my first book deadline and trying to pace myself to\nprevent long nights in the days running up to when I fire up my FTP client and\nupload a bunch of ZIP files. But in these last two weeks, I’m especially\nreminded that writing is tough. Especially when it is chapters 1 through 3.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Cap City",
      "permalink": "http://0.0.0.0:4321/2007/06/cap-city/",
      "link": "http://0.0.0.0:4321/2007/06/cap-city/",
      "date": "2007-06-27T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Washington is such a funny town. Everyone works for the government, and if you\ndon’t work for the government, then you work for someone who works for the\ngovernment. We’re the only city in the US with gangsters in Escalades blasting\nC-SPAN radio out the window.</p>\n\n<p>A whole language of euphemisms and body language has sprouted to support the\nfact that the government works through a combination of compartmentalization\nand embracement of the idea that “needing to know” makes you cool. At least, it\nmakes you cool for the fist few years out of college. You don’t work for the\nNSA, you “do work up near Fort Meade”. And nobody works for the CIA, you are an\n“analyst for State”.</p>\n\n<p>The charade might work if it weren’t for the glimmer in the eyes that says,\n“and next year they totally promised me that I’ll be James Bond.” I must admit\nto ignorance of what it is really like to be in-the-know, in the need-to-know\nsense of the word, but, like everyone in the Capital City, I know enough people\nwho do live such lives to be able to laugh with them at the reality behind the\nrecent-college-grad romance with security clearances.</p>\n\n<blockquote>\n  <p><strong>Place:</strong> Work. Or at least, a large, human sized metal safe cut off from\nthe outside world that you refer to as “Work”</p>\n\n  <p><strong>Music:</strong> White noise coming out of pores in the wall</p>\n\n  <p><strong>Mood:</strong> Wishing there was a window</p>\n\n  <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>DATE: 07 JULY 07 STANDARD MESSAGE TRAFFIC THE PRESIDENT WILL BE WEARING A\nBLUE TIE AND ARGYLE SOCKS TODAY. HE HAD GRAPE NUTS FOR BREAKFAST. MRS.\nBUSH IS NOT WEARING UNDERWEAR AGAIN. PLEASE KEEP THE TEMPERATURE IN\nBRIEFING ROOMS HIGH ENOUGH TO PREVENT EMBARRASSING BLOUSE INCIDENT BUT\nLOW ENOUGH TO AVOID POSTERIOR SWEAT.\n</code></pre></div>  </div>\n\n</blockquote>\n\n<p><em>This is hilarious! I must tell my friends! Drat. That would be a federal\ncrime, for which I would be thrown in to prison. I don’t have time anyway, I\nhave to write a summary of important information for the last hour and send it\nto my superior.</em></p>\n\n<blockquote>\n  <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>DATE: 07 JULY 07 HOULY INTELLIGENCE SUMMARY MEXICO CITY IS THE CAPITAL OF\nMEXICO. IT IS RAINING OUTSIDE.\n</code></pre></div>  </div>\n</blockquote>\n\n<p><em>Phew. Sent just before the deadline.</em></p>\n\n<p>Information is so compartmentalized that you can pretty much allude to anything\nand come off as a badass.</p>\n\n<p>A recent dinner conversation that may or may not have\ntaken place (sorry, you don’t need to know):</p>\n\n<blockquote>\n  <p><strong>Friend 1:</strong> Apple picked only one carrier in Canada for the iPhone too.  I\nwonder how long until they will be able to open it up to the rest of the\nmarket.</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>Friend 2:</strong> Well, heh, I can assure\nyou, it won’t be until at least two years.</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>Friend 1:</strong> Why do you say that.</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>Friend 2:</strong> Let’s just say we have too many nuclear-powered robots navigating the\nmagma under Canada for us to let them have iPhones everywhere.</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>Friend 1:</strong> What?</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>Friend 2:</strong> Please don’t repeat that, I’ve already stepped outside of what I can\ntell you. How are your lima beans?</p>\n</blockquote>\n\n<p>All at the table agree Friend 2 must have an awesome job. Of course, if you get\ntoo crazy, it won’t work. Claiming that DARPA funded a <a href=\"http://cbs5.com/topstories/local_story_159222541.html\">Gay\nBomb</a> to make an\nopposing army simultaneously homosexual and so horny as to crush its threat via\nmass orgy, or that the government has a secret facility that trains men to\n<a href=\"http://www.jonronson.com/goats_04.html\">telepathically explode goat hearts</a> –\nnow that would be silly. The government funds real projects, people.</p>",
      "excerpt": "Washington is such a funny town. Everyone works for the government, and if you\ndon’t work for the government, then you work for someone who works for the\ngovernment. We’re the only city in the US with gangsters in Escalades blasting\nC-SPAN radio out the window.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "My Office is on Fire",
      "permalink": "http://0.0.0.0:4321/2007/06/my-office-is-on-fire/",
      "link": "http://0.0.0.0:4321/2007/06/my-office-is-on-fire/",
      "date": "2007-06-11T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>“SNARGL-ZZZZZT-WOLA-fragl-wozz-UP-YARISPLASH”-[ smack! ]</p>\n\n<p>I keep my alarm set to the AM dial and in between stations because at high volume it is apparently the the only sound on the planet that induces fear and panic in every species that was carried on Noah’s arc (Scientific American, 24 May 2343 BC). Plus anything other than Exorcist-style AM static just gets incorporated into my dream. Which is why until I got my nice new radio-alarm clock I would dream I was a garbage man every morning (beep beep beep..), only to wake up and realize that not only was I not a garbage man, but I was late for work.</p>\n\n<p>Mondays are AM Radio alarm days because Mondays are 8am meeting days. Under normal circumstances, scheduling a meeting for 8am on a Monday is sick and cruel. The detainees at Guantanamo don’t even have to attend Monday meetings until at least 9:30. But my manager is an ex-Marine, and a great guy, so I figure it is a good excuse to get up early enough to see what this morning thing people keep talking about is like.</p>\n\n<p>This morning, however, my office building was on fire. It is 7:50 and the brow-sweat from walking up seven mile long Rosslyn escalator has just started to flow. I turn a corner and notice a strange number of fire trucks outside my building for 7:50 AM. Usually our building doesn’t burn down until at least 9:30. 7:50 is far too early for this to be a drill, and two woman standing across the street told me that this was the real deal.</p>\n\n<p>And then I had one of those experiences in which you catch yourself in the middle of completely idiotic behavior rationalized by the attempt to make reality match your expectations – I started planning how I could break into the building.</p>\n\n<p>See, I had a mission! Normally I show up at 8:10 and sheepishly slink in to the lab with a meeting already in progress. But it was only 7:50! Gloriously, I could stroll into the lab and take any chair I wanted, my self-centered feeling of victory to culminate rather anticlimactically with the words “Ted, could you dial into the conference call for us?”</p>\n\n<p>Today is Monday! 8am meeting day! I must prevail! I didn’t see any smoke – a good sign. Firemen were blocking the main entrance but nowhere near the garage entrance to the building. Cars were flowing into it as usual. I could walk in through the Garage and figure out where the fabled car-owner elevators are and use those.</p>\n\n<p>Oh, right, fire. I’ll have to take the stairs.</p>\n\n<p>Wait.. Fire??! In the middle of an office-worker filled intersection, a dream sequence:</p>\n\n<dl>\n  <dt>Fireman</dt>\n  <dd>[in full gear running down the stairs, carrying a rescued office-cat] Run! Get out! What are you doing! Me: It's OK, I'm going to be the first person into an 8am meeting! Fireman: But everything is on fire!</dd>\n  <dt>Me</dt>\n  <dd>.... [ awkward pause ]</dd>\n  <dt></dt>\n  <dd>*A stunt man from a movie comes running down the stairs on fire. Followed by three more cats and a giraffe.*</dd>\n</dl>\n\n<p>Yeah.. screw the meeting, I’m going to pick up some breakfast.</p>\n\n<p>– Update –</p>\n\n<p>Because several people asked: Yes, there were fire engines parked all over outside this morning and firemen preventing people from entering. But no, it can’t have been a big one. I didn’t even ever see smoke or flames, and only a few floors were evacuated.</p>",
      "excerpt": "“SNARGL-ZZZZZT-WOLA-fragl-wozz-UP-YARISPLASH”-[ smack! ]",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Traffic",
      "permalink": "http://0.0.0.0:4321/2007/06/traffic/",
      "link": "http://0.0.0.0:4321/2007/06/traffic/",
      "date": "2007-06-06T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>I write like a nomad in fast forward. I can never sit for more than an hour and a half without having to change locations to clear my mind, and that has introduced me to Northern Virginia’s famed attraction: traffic.</p>\n\n<p>My commute to work is normally on the metro. It takes about 35 minutes, 10 of which are on foot and the rest is either on the train or waiting for it. I suppose that is a relatively normal commute for city living, but I’m always moving so it doesn’t seem so bad. Here, at Dunkin Donuts (mmmm, donuts), on my first day of writing full-time, I had time to reflect on the experience of driving during the workday. It took me about as long to get here as it does to work, except it is only two miles away.</p>\n\n<p>Stop. Drive forward 10 feet. Screech to a stop. Bolt forward ten feet again. Stop suddenly. Prepare to drive forward only to have some guy in a Ford Expedition slam his metal fortress at high speed into the impossibly small space that has opened up between me and the car ahead of me. Inch forward into the intersection only to stop again. Wait. 3 inches forward. Wait. The light turns yellow. Start looking around for options to bail out but see none – its too late to squeeze in a right turn.</p>\n\n<p>The light tuns red.</p>\n\n<p>I’m a calm person. I enjoy meditation and yoga. I even lived in a Buddhist monastery in Japan for a week just to see what it was like.</p>\n\n<p>But boy do I understand Samir from Office Space when I’m in traffic like this. “F<em>ck! sh</em>t! ass! ass! yak! rutabega! pencil sharpener!” I want to scream at the top of my lungs, punching the steering wheel in a blind rage until my horn gives out.</p>\n\n<p>Maybe I’ll ram my car into an old lady’s sedan, just so she knows that Northern Virginia traffic is all her fault. But instead I sigh and smile apologetically, mouthing the word “Sorry” to the driver on my right, who is honking his horn because I’m stuck in the middle of the intersection. And I turn up C-SPAN radio to hear what the Judiciary Committee has to say about the attorney firings.</p>",
      "excerpt": "I write like a nomad in fast forward. I can never sit for more than an hour and a half without having to change locations to clear my mind, and that has introduced me to Northern Virginia’s famed attraction: traffic.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "3/5 the time is 5/3 the fun",
      "permalink": "http://0.0.0.0:4321/2007/06/three-fifths-the-time-is-five-thirds-the-fun/",
      "link": "http://0.0.0.0:4321/2007/06/three-fifths-the-time-is-five-thirds-the-fun/",
      "date": "2007-06-04T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>So far the work week is like any other, but this is the start of working half-time for the summer that I’ve planned to get the bulk of the Art of Rails done. I haven’t been working on it lately due to a lot of stuff going on. The lack of progress is only brow-wrinkling right now, but given my upcoming deadlines the 2 extra days a week opening up are pretty crucial.</p>\n\n<p>So I’ve got my iced tea chilling in the fridge, have my Bermuda shorts, and am ready to sit on a lawn chair in the paved paradise of Northern Virginia writing to Jimmy Buffet music for a good part of the summer. I have to admit I’m pretty excited.</p>",
      "excerpt": "So far the work week is like any other, but this is the start of working half-time for the summer that I’ve planned to get the bulk of the Art of Rails done. I haven’t been working on it lately due to a lot of stuff going on. The lack of progress is only brow-wrinkling right now, but given my upcoming deadlines the 2 extra days a week opening up are pretty crucial.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Abusing Javascript for Multiline Strings",
      "permalink": "http://0.0.0.0:4321/2007/05/abusing-javascript-for-multiline-strings/",
      "link": "http://0.0.0.0:4321/2007/05/abusing-javascript-for-multiline-strings/",
      "date": "2007-05-05T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>You realize how funny the technology world is when you come upon a technology from 2005 and are immediately distrusting and suspicious that it has already been replaced with something new. “Two years ago!? How antiquated! I’m sure by now we’ve tackled the problem with an extra embedded API added on for ordering triple half-calf mocha skim ole 2% orange juice lattes wearing a bathing suit! … from Emacs!”</p>\n\n<p>You understand my suspicions, I’m sure.</p>\n\n<p>So I begin with my distrust, but ultimately feel compelled to express my excitement about the ability to abuse the the E4X extension of JavaScript to handle multi-line strings. For those who don’t know (I sure didn’t), E4X stands for ECMAScript for XML (E4X) and was introduced in 2004 and subsequently updated in 2005. It appears that Mozilla-based browsers support it, but I’m not so sure about IE (grumble).</p>\n\n<p>The gist is this: JavaScript doesn’t support multi-line strings, which is a bummer. Ruby has it. So does Python. Even C# does, with the @” quote. You’d think peer pressure alone would have forced JavaScript to adopt it, not to mention the common need to assemble long chunks of HTML from within JavaScript, but it still ain’t so. E4X provides a sneaky way to accomplish it, however, by embedding the string within HTML tags. E4X is essentially a way to use DOM fragments as native JavaScript objects, so you can have a variable defined like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">    <span class=\"kd\">var</span> <span class=\"nx\">address</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nx\">r</span><span class=\"o\">&gt;&lt;!</span><span class=\"p\">[</span><span class=\"nx\">CDATA</span><span class=\"p\">[</span>\n    <span class=\"mi\">127</span> <span class=\"nx\">Prime</span> <span class=\"nx\">Ln</span><span class=\"p\">.</span>\n    <span class=\"mi\">55005</span>\n    <span class=\"p\">]]</span><span class=\"o\">&gt;&lt;</span><span class=\"sr\">/r&gt;</span><span class=\"se\">)</span><span class=\"sr\">;</span></code></pre></figure>\n\n<p>The developer gets all sorts of nifty ways to interact with this data, but the toString function is the sneak-route for abuse. Let’s say we want to construct a multi-line string for some poetry:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">    <span class=\"kd\">var</span> <span class=\"nx\">htmlFragment</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nx\">r</span><span class=\"o\">&gt;&lt;!</span><span class=\"p\">[</span><span class=\"nx\">CDATA</span><span class=\"p\">[</span>\n    <span class=\"nx\">l</span><span class=\"p\">(</span><span class=\"nx\">a</span>\n    \n    <span class=\"nx\">le</span>\n    <span class=\"nx\">af</span>\n    <span class=\"nx\">fa</span>\n    \n    <span class=\"nx\">ll</span>\n    \n    <span class=\"nx\">s</span><span class=\"p\">)</span>\n    <span class=\"nx\">one</span>\n    <span class=\"nx\">l</span>\n    \n    <span class=\"nx\">iness</span>\n    \n    <span class=\"o\">-</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">e</span><span class=\"p\">.</span> <span class=\"nx\">cummings</span>\n    <span class=\"p\">;</span>\n    <span class=\"p\">]]</span><span class=\"o\">&gt;&lt;</span><span class=\"sr\">/r&gt;</span><span class=\"se\">)</span><span class=\"sr\">;</span></code></pre></figure>\n\n<p>Or perhaps we want to construct a fragment of HTML from with JavaScript but don’t want to use a builder:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">    <span class=\"kd\">var</span> <span class=\"nx\">htmlFragment</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nx\">r</span><span class=\"o\">&gt;&lt;!</span><span class=\"p\">[</span><span class=\"nx\">CDATA</span><span class=\"p\">[</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span> <span class=\"nx\">id</span><span class=\"o\">=</span><span class=\"s2\">\"somethingorother\"</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">ol</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">li</span><span class=\"o\">&gt;</span><span class=\"nx\">Item</span> <span class=\"mi\">1</span><span class=\"o\">&lt;</span><span class=\"sr\">/li</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"nx\">li</span><span class=\"o\">&gt;</span><span class=\"nx\">Item</span> <span class=\"mi\">2</span><span class=\"o\">&lt;</span><span class=\"sr\">/li</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"sr\">/ol</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>    <span class=\"p\">]]</span><span class=\"o\">&gt;&lt;</span><span class=\"sr\">/r&gt;</span><span class=\"se\">)</span><span class=\"sr\">;</span></code></pre></figure>\n\n<p>Why in the world would you put your HTML inside a CDATA block, you say? For a top secret project, I tell you! The variable htmlFragment now contains this multiline string, since the the “”+ at the beginning caused the subsequent E4X DOM fragment to be cast as a string for concatenation. Test it out for yourself by setting the innerHTML of your page body to the variable above.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">    <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'the_body'</span><span class=\"p\">).</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">htmlFragment</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>Pretty clever…</p>",
      "excerpt": "You realize how funny the technology world is when you come upon a technology from 2005 and are immediately distrusting and suspicious that it has already been replaced with something new. “Two years ago!? How antiquated! I’m sure by now we’ve tackled the problem with an extra embedded API added on for ordering triple half-calf mocha skim ole 2% orange juice lattes wearing a bathing suit! … from Emacs!”",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Abstraction is Everything",
      "permalink": "http://0.0.0.0:4321/2007/05/abstraction-is-everything/",
      "link": "http://0.0.0.0:4321/2007/05/abstraction-is-everything/",
      "date": "2007-05-05T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>A computer can’t really do much in theory: read a number from disk, write it back to disk, add one to it, see if it\nequals zero, and then maybe jump to a new location on the disk. If I remember back to the CS Theory classes in\ncollege right, then I’m pretty sure that is about it.</p>\n\n<p>Which is why, when someone finally figures out how to coax a\ncomputer into synthesizing a believable human voice, all the programmers in the world have been planning to throw a\nsecret party in which we’ll laugh the laughs of movie villians: “Did you see the NYT headline? ‘Intelligent Computer\nUnveiled’! We’ve tricked them! All we’ve done is add 1 and compare to 0 over and over!”</p>\n\n<p>But to\nclaim the humble premise of a computer makes it a stupid device is a bit misleading, I suppose. It is a bit like atoms.\nThere isn’t much to a proton, neutron, or electron, but the ravioli I had for lunch is a pretty impressive\naccomplishment. Something simple repeated enough times at a fast enough speed doesn’t just give the illusion of\ncomplexity, it is the only possible source of it. So 1s and 0s are the Real Deal.</p>\n\n<p>It all boils down to Abstraction.\nProgrammers deal with\nthe inherent simplicity of a computer by creating metaphors for themselves that can be reused as building blocks to\nincreasingly complicated systems. So out of bits come bytes, from bytes come characters, from characters come strings,\nand so on. Pretty soon you have buttons on a screen and MP3 music playing in the background. It works wonderfully and\nis the fundamental practice that enables us to enjoy the technology we do today. When developers look at code and ooh\nand aah in admiration, it’s either because of one of two things: low-level feats of magic or elegant abstraction.</p>\n\n<p>But abstraction comes with a catch. Users at each layer of\nabstraction are largely ignorant about the finer-grained layers beneath them. This is absolutely necessary to deal with\nthe complexity of our world – we couldn’t function at higher levels of thoughts if we had to be concerned with every\ndetail underpinning existence. Have you ever tried to make a Twinkie by hand? Me neither. But not understanding the\nbuilding blocks of an abstraction can be a big risk if the abstraction turns out to be flawed. Most people take it for\ngranted that a Twinkie is a particular abstraction of food, in the delicious category. But what if, due to some design\nflaw at the molecular level, a Twinkie was actually petroleum-based product? You’d never know! But\nincorporating this abstraction into your diet would persist this error through your system.</p>\n\n<p>So it is useful to allow ourselves to be ignorant of the finer-grained details beneath an abstraction, but it can also \nbe hazardous to not understand these details when necessary.<br />\nThis is why learning to be a good programmer is an art of mindset rather than an art of syntax.\nLearning a programming language is different than learning to program.\nLearning a programming language introduces you to a specific set of operators and abstractions comprising one\nperspective of controlling a computer. But really learning to program is the art of abstraction. Realizing when new\nmetaphors are necessary, seeing through the ones that currently exist, and constructing them to be relevant in a\ngeneralizable fashion.</p>",
      "excerpt": "A computer can’t really do much in theory: read a number from disk, write it back to disk, add one to it, see if it\nequals zero, and then maybe jump to a new location on the disk. If I remember back to the CS Theory classes in\ncollege right, then I’m pretty sure that is about it.\n\nWhich is why, when someone finally figures out how to coax a\ncomputer into synthesizing a believable human voice, all the programmers in the world have been planning to throw a\nsecret party in which we’ll laugh the laughs of movie villians: “Did you see the NYT headline? ‘Intelligent Computer\nUnveiled’! We’ve tricked them! All we’ve done is add 1 and compare to 0 over and over!”\n\nBut to\nclaim the humble premise of a computer makes it a stupid device is a bit misleading, I suppose. It is a bit like atoms.\nThere isn’t much to a proton, neutron, or electron, but the ravioli I had for lunch is a pretty impressive\naccomplishment. Something simple repeated enough times at a fast enough speed doesn’t just give the illusion of\ncomplexity, it is the only possible source of it. So 1s and 0s are the Real Deal.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Waltham, MA",
      "permalink": "http://0.0.0.0:4321/2007/04/waltham-ma/",
      "link": "http://0.0.0.0:4321/2007/04/waltham-ma/",
      "date": "2007-04-30T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>Waltham is a wasteland, at least the part I’ve seen so far. \nRemember those old-west towns from your high school history book? The ones that cropped up on the side of a \ntrail for no purpose other than to house\nthe passing settlers by and the occasional agent computing conference? Apparently I-95 is the new Rt. 66 and Waltham, MA\nis such a town.</p>\n\n<p>2:00 PM. I call the Westin from the bus to ask which stop to get off at. “Oh, we’re not the Westin\ndowntown. You’ll have to hail a cab,” they inform me. Whoops – but not a problem.</p>\n\n<p>I hop off the bus at the next stop\nand nearly straight into the cab behind it. It turns out to be maybe the best driveby taxicab tour of a city I’ve ever\nhad, complete with a description of MIT so concise it deserves to be in their admissions brochure: [in my attempt at\ntranscribing the Boston accent]</p>\n\n<p>“Tat ovah thear is MIT, wheah all te crazy smart fucks invent fucked up shit. Usually I get frequent fliah businessmen\nwho wanna go theah. Sit in the back ahn theah Blackberrys. Those guys, wahkaholics. They sit at Cape Cod in the summah \nwit te’ fuckin Blackberrys sendin shit\non fukin email don’t know how to fuckin relax. Ya kid’s in the watah! Quit ya workin!”</p>\n\n<p>40 Minutes and $65 later. We\npull off the outer beltway of Boston into Waltham. “Waltham is one ‘a tose business oasis\npahhks where all the companies go from MIT to build shit like patriot missiles, but tey’re real quiet about it\ncause ta people’d get upset. So what you gahtta do is darive 10 minutes down tis highway, see, cause tat’s wheah tah\nWellesley girls ah. Radcliffe girls hate Wellesley girls.”</p>\n\n<p>The hotel looks like a business, covered head to toe in\ngreen-tinted glass. After checking in I walk up and down the street to see if there was anything better to do. The\nplace is a ghost town. Nothing here but chain hotels, gas stations, and empty business offices. The sidewalk on the\nstreet begins and ends randomly, as if they had excess asphalt in some parts of the road and figured it was better\nthan no sidewalk at all. Hotel, hotel, gas station, hotel, empty office building, rental car place. Car rentals must\nbe a big industry in Waltham.</p>\n\n<p>The Charles river is nice, if inaccessible by foot, just past a half-finished\nconstruction project and a giant highway bypass. The bypass is right outside my window, cars wooshing by on the\noutermost beltway of Boston, but no buses. No buses or public transport comes to this side of town, the girl at the\nfront desk told me with the same tone of voice a doctor would use to inform a family that the operation didn’t go\nwell and, we’re sorry to say, amputation was necessary. Nearest restaurant? 10 minutes by car. So needless to say\nI’m about to have the first room-service meal of my life. The hotel is beautiful; I’m sure the conference will be\ninteresting. But if anyone ever suggests a vacation to Waltham, MA to you, run in the opposite direction as fast as\nyou can…</p>\n\n<p>By the way, I’m here to present a paper on Fido, a framework for information query and dissemination in\ndistributed multi-agent societies. It’s pretty cool, if you are into that stuff, so check it out.</p>",
      "excerpt": "Waltham is a wasteland, at least the part I’ve seen so far. \nRemember those old-west towns from your high school history book? The ones that cropped up on the side of a \ntrail for no purpose other than to house\nthe passing settlers by and the occasional agent computing conference? Apparently I-95 is the new Rt. 66 and Waltham, MA\nis such a town.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  

  
    ,
    {
      "title": "Melodic Impact",
      "permalink": "http://0.0.0.0:4321/2007/04/melodic-impact/",
      "link": "http://0.0.0.0:4321/2007/04/melodic-impact/",
      "date": "2007-04-24T00:00:00-07:00",
      
      "author": {
        "name": "Ted Benson",
        "url": "https://edwardbenson.com/",
        "email": "edward.benson@gmail.com"
      },
      "content": "<p>This Saturday Grace and I are playing piano in a concert that she and her friend Jenny organized to raise money for Special\nLove, a Washington, D.C. area organization that helps children with cancer. We’re playing a 4-hand/1-piano\nduet of Under the Sea, and I’m also playing the Fantasie Impromptu by Frederic Chopin.</p>\n\n<p>Here are the details:</p>\n\n<blockquote>\n  <p><strong><em>“Melodic Impact” A Spring Concert for Kids with Cancer</em></strong>\nSaturday, April 28th, 6:00-8:00 pm (reception follows)\nMt. Olivet U.M. Church - 1500 N. Glebe Rd, Arlington, VA</p>\n</blockquote>\n\n<p>After a 5 year stretch in which my piano gathered dust in the corner of my living\nroom, it has been wonderful practicing for the concert and knowing what it feels like to be immersed in music again,\nalthough I remain pretty nervous about the performance. Particularly nervous about playing through the\nperformance induced hand sweating that will inevitably occur. For those lucky ones who aren’t afflicted by\n“hyperhidrosis” (and I gather this is the majority of the population), it like a virtuous cycle without the virtuous\npart: nerves cause sweat, sweat causes nerves, repeat.</p>\n\n<p>Grace and Jenny have done an amazing job putting everything\ntogether and have really shown that people who work hard and believe in a good cause create their own luck. Planning\na benefit concert was just an idea floated between the three of us last fall, and now through their hard work we\nare one week away from the concert and have hundreds of dollars in in-kind donations for an auction, a roster of\nperformers that includes world touring musicians and Kennedy-center veterans, and a corporate sponsor to handle the\nadvertising expenses. It is inspiring to be around people who don’t just keep good ideas in their heads and actually act\nupon them. So if you happen to be in the area and see this, come out and have a good time.</p>",
      "excerpt": "This Saturday Grace and I are playing piano in a concert that she and her friend Jenny organized to raise money for Special\nLove, a Washington, D.C. area organization that helps children with cancer. We’re playing a 4-hand/1-piano\nduet of Under the Sea, and I’m also playing the Fantasie Impromptu by Frederic Chopin.",
      "languages": null,
      "categories": [],
      "tags": []
    }
    
  


]
